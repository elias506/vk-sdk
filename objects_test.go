// Code generated by https://github.com/elias506/vk-sdk. DO NOT EDIT.

package vk_sdk

import (
	"encoding/json"
)

// suppress unused package warning
var _ *json.RawMessage

func fillRandomly_Account_AccountCounters(o *Account_AccountCounters) {
	(*o).AppRequests = new(int)
	*(*o).AppRequests = randInt()
	(*o).Events = new(int)
	*(*o).Events = randInt()
	(*o).Faves = new(int)
	*(*o).Faves = randInt()
	(*o).Friends = new(int)
	*(*o).Friends = randInt()
	(*o).FriendsRecommendations = new(int)
	*(*o).FriendsRecommendations = randInt()
	(*o).FriendsSuggestions = new(int)
	*(*o).FriendsSuggestions = randInt()
	(*o).Gifts = new(int)
	*(*o).Gifts = randInt()
	(*o).Groups = new(int)
	*(*o).Groups = randInt()
	(*o).Memories = new(int)
	*(*o).Memories = randInt()
	(*o).MenuClipsBadge = new(int)
	*(*o).MenuClipsBadge = randInt()
	(*o).MenuDiscoverBadge = new(int)
	*(*o).MenuDiscoverBadge = randInt()
	(*o).Messages = new(int)
	*(*o).Messages = randInt()
	(*o).Notes = new(int)
	*(*o).Notes = randInt()
	(*o).Notifications = new(int)
	*(*o).Notifications = randInt()
	(*o).Photos = new(int)
	*(*o).Photos = randInt()
	(*o).Sdk = new(int)
	*(*o).Sdk = randInt()
}

func fillRandomly_Account_Info(o *Account_Info) {
	(*o).TwoFaRequired = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).TwoFaRequired)
	(*o).Country = new(string)
	*(*o).Country = randString()
	(*o).HttpsRequired = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).HttpsRequired)
	(*o).Intro = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Intro)
	(*o).Lang = new(int)
	*(*o).Lang = randInt()
	(*o).LinkRedirects = new([]string)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).LinkRedirects = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).LinkRedirects)[i0] = randString()
	}
	(*o).MiniAppsAdsSlotId = new(int)
	*(*o).MiniAppsAdsSlotId = randInt()
	(*o).NoWallReplies = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).NoWallReplies)
	(*o).OwnPostsDefault = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).OwnPostsDefault)
	(*o).QrPromotion = new(int)
	*(*o).QrPromotion = randInt()
	(*o).ShowVkAppsIntro = new(bool)
	*(*o).ShowVkAppsIntro = randBool()
	(*o).Subscriptions = new(Account_Subscriptions)
	fillRandomly_Account_Subscriptions((*o).Subscriptions)
	(*o).WishlistsAePromoBannerShow = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).WishlistsAePromoBannerShow)
}

func fillRandomly_Account_NameRequest(o *Account_NameRequest) {
	(*o).FirstName = new(string)
	*(*o).FirstName = randString()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Lang = new(string)
	*(*o).Lang = randString()
	(*o).LastName = new(string)
	*(*o).LastName = randString()
	(*o).LinkHref = new(string)
	*(*o).LinkHref = randString()
	(*o).LinkLabel = new(string)
	*(*o).LinkLabel = randString()
	(*o).Status = new(Account_NameRequestStatus)
	fillRandomly_Account_NameRequestStatus((*o).Status)
}

func fillRandomly_Account_NameRequestStatus(o *Account_NameRequestStatus) {
	switch randIntn(8) {
	case 0:
		*o = "success"
	case 1:
		*o = "processing"
	case 2:
		*o = "declined"
	case 3:
		*o = "was_accepted"
	case 4:
		*o = "was_declined"
	case 5:
		*o = "declined_with_link"
	case 6:
		*o = "response"
	case 7:
		*o = "response_with_link"
	}
}

func fillRandomly_Account_Offer_LinkType(o *Account_Offer_LinkType) {
	switch randIntn(3) {
	case 0:
		*o = "profile"
	case 1:
		*o = "group"
	case 2:
		*o = "app"
	}
}

func fillRandomly_Account_Offer(o *Account_Offer) {
	(*o).CurrencyAmount = new(float64)
	*(*o).CurrencyAmount = randFloat()
	(*o).Description = new(string)
	*(*o).Description = randString()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Img = new(string)
	*(*o).Img = randString()
	(*o).Instruction = new(string)
	*(*o).Instruction = randString()
	(*o).InstructionHtml = new(string)
	*(*o).InstructionHtml = randString()
	(*o).LinkId = new(int)
	*(*o).LinkId = randInt()
	(*o).LinkType = new(Account_Offer_LinkType)
	fillRandomly_Account_Offer_LinkType((*o).LinkType)
	(*o).Price = new(int)
	*(*o).Price = randInt()
	(*o).ShortDescription = new(string)
	*(*o).ShortDescription = randString()
	(*o).Tag = new(string)
	*(*o).Tag = randString()
	(*o).Title = new(string)
	*(*o).Title = randString()
}

func fillRandomly_Account_PushConversations(o *Account_PushConversations) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).Items = new([]Account_PushConversationsItem)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Items = make([]Account_PushConversationsItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushConversationsItem(&(*(*o).Items)[i0])
	}
}

func fillRandomly_Account_PushConversationsItem(o *Account_PushConversationsItem) {
	(*o).DisabledMassMentions = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).DisabledMassMentions)
	(*o).DisabledMentions = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).DisabledMentions)
	(*o).DisabledUntil = randInt()
	(*o).PeerId = randInt()
	fillRandomly_Base_BoolInt(&(*o).Sound)
}

func fillRandomly_Account_PushParams(o *Account_PushParams) {
	(*o).AppRequest = new([]Account_PushParamsOnoff)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).AppRequest = make([]Account_PushParamsOnoff, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsOnoff(&(*(*o).AppRequest)[i0])
	}
	(*o).Birthday = new([]Account_PushParamsOnoff)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Birthday = make([]Account_PushParamsOnoff, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsOnoff(&(*(*o).Birthday)[i0])
	}
	(*o).Chat = new([]Account_PushParamsMode)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Chat = make([]Account_PushParamsMode, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsMode(&(*(*o).Chat)[i0])
	}
	(*o).Comment = new([]Account_PushParamsSettings)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Comment = make([]Account_PushParamsSettings, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsSettings(&(*(*o).Comment)[i0])
	}
	(*o).EventSoon = new([]Account_PushParamsOnoff)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).EventSoon = make([]Account_PushParamsOnoff, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsOnoff(&(*(*o).EventSoon)[i0])
	}
	(*o).Friend = new([]Account_PushParamsOnoff)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Friend = make([]Account_PushParamsOnoff, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsOnoff(&(*(*o).Friend)[i0])
	}
	(*o).FriendAccepted = new([]Account_PushParamsOnoff)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).FriendAccepted = make([]Account_PushParamsOnoff, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsOnoff(&(*(*o).FriendAccepted)[i0])
	}
	(*o).FriendFound = new([]Account_PushParamsOnoff)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).FriendFound = make([]Account_PushParamsOnoff, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsOnoff(&(*(*o).FriendFound)[i0])
	}
	(*o).GroupAccepted = new([]Account_PushParamsOnoff)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).GroupAccepted = make([]Account_PushParamsOnoff, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsOnoff(&(*(*o).GroupAccepted)[i0])
	}
	(*o).GroupInvite = new([]Account_PushParamsOnoff)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).GroupInvite = make([]Account_PushParamsOnoff, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsOnoff(&(*(*o).GroupInvite)[i0])
	}
	(*o).Like = new([]Account_PushParamsSettings)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Like = make([]Account_PushParamsSettings, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsSettings(&(*(*o).Like)[i0])
	}
	(*o).Mention = new([]Account_PushParamsSettings)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Mention = make([]Account_PushParamsSettings, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsSettings(&(*(*o).Mention)[i0])
	}
	(*o).Msg = new([]Account_PushParamsMode)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Msg = make([]Account_PushParamsMode, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsMode(&(*(*o).Msg)[i0])
	}
	(*o).NewPost = new([]Account_PushParamsOnoff)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).NewPost = make([]Account_PushParamsOnoff, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsOnoff(&(*(*o).NewPost)[i0])
	}
	(*o).Reply = new([]Account_PushParamsOnoff)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Reply = make([]Account_PushParamsOnoff, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsOnoff(&(*(*o).Reply)[i0])
	}
	(*o).Repost = new([]Account_PushParamsSettings)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Repost = make([]Account_PushParamsSettings, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsSettings(&(*(*o).Repost)[i0])
	}
	(*o).SdkOpen = new([]Account_PushParamsOnoff)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).SdkOpen = make([]Account_PushParamsOnoff, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsOnoff(&(*(*o).SdkOpen)[i0])
	}
	(*o).WallPost = new([]Account_PushParamsOnoff)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).WallPost = make([]Account_PushParamsOnoff, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsOnoff(&(*(*o).WallPost)[i0])
	}
	(*o).WallPublish = new([]Account_PushParamsOnoff)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).WallPublish = make([]Account_PushParamsOnoff, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Account_PushParamsOnoff(&(*(*o).WallPublish)[i0])
	}
}

func fillRandomly_Account_PushParamsMode(o *Account_PushParamsMode) {
	switch randIntn(4) {
	case 0:
		*o = "on"
	case 1:
		*o = "off"
	case 2:
		*o = "no_sound"
	case 3:
		*o = "no_text"
	}
}

func fillRandomly_Account_PushParamsOnoff(o *Account_PushParamsOnoff) {
	switch randIntn(2) {
	case 0:
		*o = "on"
	case 1:
		*o = "off"
	}
}

func fillRandomly_Account_PushParamsSettings(o *Account_PushParamsSettings) {
	switch randIntn(3) {
	case 0:
		*o = "on"
	case 1:
		*o = "off"
	case 2:
		*o = "fr_of_fr"
	}
}

func fillRandomly_Account_PushSettings(o *Account_PushSettings) {
	(*o).Conversations = new(Account_PushConversations)
	fillRandomly_Account_PushConversations((*o).Conversations)
	(*o).Disabled = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Disabled)
	(*o).DisabledUntil = new(int)
	*(*o).DisabledUntil = randInt()
	(*o).Settings = new(Account_PushParams)
	fillRandomly_Account_PushParams((*o).Settings)
}

func fillRandomly_Account_Subscriptions(o *Account_Subscriptions) {
	l0 := randIntn(maxArrayLength + 1)
	*o = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*o)[i0] = randInt()
	}
}

func fillRandomly_Account_UserSettings(o *Account_UserSettings) {
	fillRandomly_Users_UserSettingsXtr(&(*o).Users_UserSettingsXtr)
	(*o).IsServiceAccount = new(bool)
	*(*o).IsServiceAccount = randBool()
	(*o).Photo200 = new(string)
	*(*o).Photo200 = randString()
}

func fillRandomly_Account_UserSettingsInterest(o *Account_UserSettingsInterest) {
	(*o).Title = randString()
	(*o).Value = randString()
}

func fillRandomly_Account_UserSettingsInterests(o *Account_UserSettingsInterests) {
	(*o).About = new(Account_UserSettingsInterest)
	fillRandomly_Account_UserSettingsInterest((*o).About)
	(*o).Activities = new(Account_UserSettingsInterest)
	fillRandomly_Account_UserSettingsInterest((*o).Activities)
	(*o).Books = new(Account_UserSettingsInterest)
	fillRandomly_Account_UserSettingsInterest((*o).Books)
	(*o).Games = new(Account_UserSettingsInterest)
	fillRandomly_Account_UserSettingsInterest((*o).Games)
	(*o).Interests = new(Account_UserSettingsInterest)
	fillRandomly_Account_UserSettingsInterest((*o).Interests)
	(*o).Movies = new(Account_UserSettingsInterest)
	fillRandomly_Account_UserSettingsInterest((*o).Movies)
	(*o).Music = new(Account_UserSettingsInterest)
	fillRandomly_Account_UserSettingsInterest((*o).Music)
	(*o).Quotes = new(Account_UserSettingsInterest)
	fillRandomly_Account_UserSettingsInterest((*o).Quotes)
	(*o).Tv = new(Account_UserSettingsInterest)
	fillRandomly_Account_UserSettingsInterest((*o).Tv)
}

func fillRandomly_Addresses_Fields(o *Addresses_Fields) {
	switch randIntn(14) {
	case 0:
		*o = "id"
	case 1:
		*o = "title"
	case 2:
		*o = "address"
	case 3:
		*o = "additional_address"
	case 4:
		*o = "country_id"
	case 5:
		*o = "city_id"
	case 6:
		*o = "metro_station_id"
	case 7:
		*o = "latitude"
	case 8:
		*o = "longitude"
	case 9:
		*o = "distance"
	case 10:
		*o = "work_info_status"
	case 11:
		*o = "timetable"
	case 12:
		*o = "phone"
	case 13:
		*o = "time_offset"
	}
}

func fillRandomly_Ads_AccessRole(o *Ads_AccessRole) {
	switch randIntn(3) {
	case 0:
		*o = "admin"
	case 1:
		*o = "manager"
	case 2:
		*o = "reports"
	}
}

func fillRandomly_Ads_AccessRolePublic(o *Ads_AccessRolePublic) {
	switch randIntn(2) {
	case 0:
		*o = "manager"
	case 1:
		*o = "reports"
	}
}

func fillRandomly_Ads_Accesses(o *Ads_Accesses) {
	(*o).ClientId = new(string)
	*(*o).ClientId = randString()
	(*o).Role = new(Ads_AccessRole)
	fillRandomly_Ads_AccessRole((*o).Role)
}

func fillRandomly_Ads_Account(o *Ads_Account) {
	fillRandomly_Ads_AccessRole(&(*o).AccessRole)
	(*o).AccountId = randInt()
	(*o).AccountName = randString()
	fillRandomly_Base_BoolInt(&(*o).AccountStatus)
	fillRandomly_Ads_AccountType(&(*o).AccountType)
	(*o).CanViewBudget = randBool()
}

func fillRandomly_Ads_AccountType(o *Ads_AccountType) {
	switch randIntn(2) {
	case 0:
		*o = "general"
	case 1:
		*o = "agency"
	}
}

func fillRandomly_Ads_Ad(o *Ads_Ad) {
	(*o).AdFormat = randInt()
	(*o).AdPlatform = new(string)
	*(*o).AdPlatform = randString()
	(*o).AllLimit = randInt()
	fillRandomly_Ads_AdApproved(&(*o).Approved)
	(*o).AutobiddingMaxCost = new(int)
	*(*o).AutobiddingMaxCost = randInt()
	(*o).CampaignId = randInt()
	(*o).Category1Id = new(int)
	*(*o).Category1Id = randInt()
	(*o).Category2Id = new(int)
	*(*o).Category2Id = randInt()
	fillRandomly_Ads_AdCostType(&(*o).CostType)
	(*o).Cpa = new(int)
	*(*o).Cpa = randInt()
	(*o).Cpc = new(int)
	*(*o).Cpc = randInt()
	(*o).Cpm = new(int)
	*(*o).Cpm = randInt()
	(*o).DisclaimerMedical = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).DisclaimerMedical)
	(*o).DisclaimerSpecialist = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).DisclaimerSpecialist)
	(*o).DisclaimerSupplements = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).DisclaimerSupplements)
	(*o).Id = randInt()
	(*o).ImpressionsLimit = new(int)
	*(*o).ImpressionsLimit = randInt()
	(*o).ImpressionsLimited = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).ImpressionsLimited)
	(*o).Name = randString()
	(*o).Ocpm = new(int)
	*(*o).Ocpm = randInt()
	fillRandomly_Ads_AdStatus(&(*o).Status)
	(*o).Video = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Video)
}

func fillRandomly_Ads_AdApproved(o *Ads_AdApproved) {
	switch randIntn(4) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	case 3:
		*o = 3
	}
}

func fillRandomly_Ads_AdCostType(o *Ads_AdCostType) {
	switch randIntn(4) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	case 3:
		*o = 3
	}
}

func fillRandomly_Ads_AdLayout(o *Ads_AdLayout) {
	(*o).AdFormat = randInt()
	(*o).CampaignId = randInt()
	fillRandomly_Ads_AdCostType(&(*o).CostType)
	(*o).Description = randString()
	(*o).Id = randString()
	(*o).ImageSrc = randString()
	(*o).ImageSrc2x = new(string)
	*(*o).ImageSrc2x = randString()
	(*o).LinkDomain = new(string)
	*(*o).LinkDomain = randString()
	(*o).LinkUrl = randString()
	(*o).PreviewLink = new(string)
	*(*o).PreviewLink = randString()
	(*o).Title = randString()
	(*o).Video = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Video)
}

func fillRandomly_Ads_AdStatus(o *Ads_AdStatus) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Ads_Campaign(o *Ads_Campaign) {
	(*o).AdsCount = new(int)
	*(*o).AdsCount = randInt()
	(*o).AllLimit = randString()
	(*o).CreateTime = new(int)
	*(*o).CreateTime = randInt()
	(*o).DayLimit = randString()
	(*o).GoalType = new(int)
	*(*o).GoalType = randInt()
	(*o).Id = randInt()
	(*o).IsCboEnabled = new(bool)
	*(*o).IsCboEnabled = randBool()
	(*o).Name = randString()
	(*o).StartTime = randInt()
	fillRandomly_Ads_CampaignStatus(&(*o).Status)
	(*o).StopTime = randInt()
	fillRandomly_Ads_CampaignType(&(*o).Type)
	(*o).UpdateTime = new(int)
	*(*o).UpdateTime = randInt()
	(*o).UserGoalType = new(int)
	*(*o).UserGoalType = randInt()
	(*o).ViewsLimit = new(int)
	*(*o).ViewsLimit = randInt()
}

func fillRandomly_Ads_CampaignStatus(o *Ads_CampaignStatus) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Ads_CampaignType(o *Ads_CampaignType) {
	switch randIntn(6) {
	case 0:
		*o = "normal"
	case 1:
		*o = "vk_apps_managed"
	case 2:
		*o = "mobile_apps"
	case 3:
		*o = "promoted_posts"
	case 4:
		*o = "adaptive_ads"
	case 5:
		*o = "stories"
	}
}

func fillRandomly_Ads_Category(o *Ads_Category) {
	(*o).Id = randInt()
	(*o).Name = randString()
	(*o).Subcategories = new([]Ads_Category)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Subcategories = make([]Ads_Category, l0)
	for i0 := 0; i0 < l0; i0++ {
		//fillRandomly_Ads_Category(&(*(*o).Subcategories)[i0])
	}
}

func fillRandomly_Ads_Client(o *Ads_Client) {
	(*o).AllLimit = randString()
	(*o).DayLimit = randString()
	(*o).Id = randInt()
	(*o).Name = randString()
}

func fillRandomly_Ads_CreateAdStatus(o *Ads_CreateAdStatus) {
	(*o).ErrorCode = new(int)
	*(*o).ErrorCode = randInt()
	(*o).ErrorDesc = new(string)
	*(*o).ErrorDesc = randString()
	(*o).Id = randInt()
	(*o).PostId = new(int)
	*(*o).PostId = randInt()
}

func fillRandomly_Ads_CreateCampaignStatus(o *Ads_CreateCampaignStatus) {
	(*o).ErrorCode = new(int)
	*(*o).ErrorCode = randInt()
	(*o).ErrorDesc = new(string)
	*(*o).ErrorDesc = randString()
	(*o).Id = randInt()
}

func fillRandomly_Ads_Criteria(o *Ads_Criteria) {
	(*o).AgeFrom = new(int)
	*(*o).AgeFrom = randInt()
	(*o).AgeTo = new(int)
	*(*o).AgeTo = randInt()
	(*o).Apps = new(string)
	*(*o).Apps = randString()
	(*o).AppsNot = new(string)
	*(*o).AppsNot = randString()
	(*o).Birthday = new(int)
	*(*o).Birthday = randInt()
	(*o).Cities = new(string)
	*(*o).Cities = randString()
	(*o).CitiesNot = new(string)
	*(*o).CitiesNot = randString()
	(*o).Country = new(int)
	*(*o).Country = randInt()
	(*o).Districts = new(string)
	*(*o).Districts = randString()
	(*o).Groups = new(string)
	*(*o).Groups = randString()
	(*o).InterestCategories = new(string)
	*(*o).InterestCategories = randString()
	(*o).Interests = new(string)
	*(*o).Interests = randString()
	(*o).Paying = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Paying)
	(*o).Positions = new(string)
	*(*o).Positions = randString()
	(*o).Religions = new(string)
	*(*o).Religions = randString()
	(*o).RetargetingGroups = new(string)
	*(*o).RetargetingGroups = randString()
	(*o).RetargetingGroupsNot = new(string)
	*(*o).RetargetingGroupsNot = randString()
	(*o).SchoolFrom = new(int)
	*(*o).SchoolFrom = randInt()
	(*o).SchoolTo = new(int)
	*(*o).SchoolTo = randInt()
	(*o).Schools = new(string)
	*(*o).Schools = randString()
	(*o).Sex = new(Ads_CriteriaSex)
	fillRandomly_Ads_CriteriaSex((*o).Sex)
	(*o).Stations = new(string)
	*(*o).Stations = randString()
	(*o).Statuses = new(string)
	*(*o).Statuses = randString()
	(*o).Streets = new(string)
	*(*o).Streets = randString()
	(*o).Travellers = new(Base_PropertyExists)
	fillRandomly_Base_PropertyExists((*o).Travellers)
	(*o).UniFrom = new(int)
	*(*o).UniFrom = randInt()
	(*o).UniTo = new(int)
	*(*o).UniTo = randInt()
	(*o).UserBrowsers = new(string)
	*(*o).UserBrowsers = randString()
	(*o).UserDevices = new(string)
	*(*o).UserDevices = randString()
	(*o).UserOs = new(string)
	*(*o).UserOs = randString()
}

func fillRandomly_Ads_CriteriaSex(o *Ads_CriteriaSex) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Ads_DemoStats(o *Ads_DemoStats) {
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Stats = new(Ads_DemostatsFormat)
	fillRandomly_Ads_DemostatsFormat((*o).Stats)
	(*o).Type = new(Ads_ObjectType)
	fillRandomly_Ads_ObjectType((*o).Type)
}

func fillRandomly_Ads_DemostatsFormat(o *Ads_DemostatsFormat) {
	(*o).Age = new([]Ads_StatsAge)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Age = make([]Ads_StatsAge, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Ads_StatsAge(&(*(*o).Age)[i0])
	}
	(*o).Cities = new([]Ads_StatsCities)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Cities = make([]Ads_StatsCities, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Ads_StatsCities(&(*(*o).Cities)[i0])
	}
	(*o).Day = new(string)
	*(*o).Day = randString()
	(*o).Month = new(string)
	*(*o).Month = randString()
	(*o).Overall = new(int)
	*(*o).Overall = randInt()
	(*o).Sex = new([]Ads_StatsSex)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Sex = make([]Ads_StatsSex, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Ads_StatsSex(&(*(*o).Sex)[i0])
	}
	(*o).SexAge = new([]Ads_StatsSexAge)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).SexAge = make([]Ads_StatsSexAge, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Ads_StatsSexAge(&(*(*o).SexAge)[i0])
	}
}

func fillRandomly_Ads_FloodStats(o *Ads_FloodStats) {
	(*o).Left = randInt()
	(*o).Refresh = randInt()
}

func fillRandomly_Ads_LinkStatus(o *Ads_LinkStatus) {
	(*o).Description = randString()
	(*o).RedirectUrl = randString()
	(*o).Status = randString()
}

func fillRandomly_Ads_LookalikeRequest_SourceType(o *Ads_LookalikeRequest_SourceType) {
	switch randIntn(1) {
	case 0:
		*o = "retargeting_group"
	}
}

func fillRandomly_Ads_LookalikeRequest_Status(o *Ads_LookalikeRequest_Status) {
	switch randIntn(6) {
	case 0:
		*o = "search_in_progress"
	case 1:
		*o = "search_failed"
	case 2:
		*o = "search_done"
	case 3:
		*o = "save_in_progress"
	case 4:
		*o = "save_failed"
	case 5:
		*o = "save_done"
	}
}

func fillRandomly_Ads_LookalikeRequest(o *Ads_LookalikeRequest) {
	(*o).AudienceCount = new(int)
	*(*o).AudienceCount = randInt()
	(*o).CreateTime = randInt()
	(*o).Id = randInt()
	(*o).SaveAudienceLevels = new([]Ads_LookalikeRequestSaveAudienceLevel)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).SaveAudienceLevels = make([]Ads_LookalikeRequestSaveAudienceLevel, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Ads_LookalikeRequestSaveAudienceLevel(&(*(*o).SaveAudienceLevels)[i0])
	}
	(*o).ScheduledDeleteTime = new(int)
	*(*o).ScheduledDeleteTime = randInt()
	(*o).SourceName = new(string)
	*(*o).SourceName = randString()
	(*o).SourceRetargetingGroupId = new(int)
	*(*o).SourceRetargetingGroupId = randInt()
	fillRandomly_Ads_LookalikeRequest_SourceType(&(*o).SourceType)
	fillRandomly_Ads_LookalikeRequest_Status(&(*o).Status)
	(*o).UpdateTime = randInt()
}

func fillRandomly_Ads_LookalikeRequestSaveAudienceLevel(o *Ads_LookalikeRequestSaveAudienceLevel) {
	(*o).AudienceCount = new(int)
	*(*o).AudienceCount = randInt()
	(*o).Level = new(int)
	*(*o).Level = randInt()
}

func fillRandomly_Ads_Musician(o *Ads_Musician) {
	(*o).Avatar = new(string)
	*(*o).Avatar = randString()
	(*o).Id = randInt()
	(*o).Name = randString()
}

func fillRandomly_Ads_ObjectType(o *Ads_ObjectType) {
	switch randIntn(4) {
	case 0:
		*o = "ad"
	case 1:
		*o = "campaign"
	case 2:
		*o = "client"
	case 3:
		*o = "office"
	}
}

func fillRandomly_Ads_Paragraphs(o *Ads_Paragraphs) {
	(*o).Paragraph = new(string)
	*(*o).Paragraph = randString()
}

func fillRandomly_Ads_PromotedPostReach(o *Ads_PromotedPostReach) {
	(*o).Hide = randInt()
	(*o).Id = randInt()
	(*o).JoinGroup = randInt()
	(*o).Links = randInt()
	(*o).ReachSubscribers = randInt()
	(*o).ReachTotal = randInt()
	(*o).Report = randInt()
	(*o).ToGroup = randInt()
	(*o).Unsubscribe = randInt()
	(*o).VideoViews100p = new(int)
	*(*o).VideoViews100p = randInt()
	(*o).VideoViews25p = new(int)
	*(*o).VideoViews25p = randInt()
	(*o).VideoViews3s = new(int)
	*(*o).VideoViews3s = randInt()
	(*o).VideoViews50p = new(int)
	*(*o).VideoViews50p = randInt()
	(*o).VideoViews75p = new(int)
	*(*o).VideoViews75p = randInt()
	(*o).VideoViewsStart = new(int)
	*(*o).VideoViewsStart = randInt()
}

func fillRandomly_Ads_RejectReason(o *Ads_RejectReason) {
	(*o).Comment = new(string)
	*(*o).Comment = randString()
	(*o).Rules = new([]Ads_Rules)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Rules = make([]Ads_Rules, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Ads_Rules(&(*(*o).Rules)[i0])
	}
}

func fillRandomly_Ads_Rules(o *Ads_Rules) {
	(*o).Paragraphs = new([]Ads_Paragraphs)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Paragraphs = make([]Ads_Paragraphs, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Ads_Paragraphs(&(*(*o).Paragraphs)[i0])
	}
	(*o).Title = new(string)
	*(*o).Title = randString()
}

func fillRandomly_Ads_Stats(o *Ads_Stats) {
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Stats = new(Ads_StatsFormat)
	fillRandomly_Ads_StatsFormat((*o).Stats)
	(*o).Type = new(Ads_ObjectType)
	fillRandomly_Ads_ObjectType((*o).Type)
	(*o).ViewsTimes = new(Ads_StatsViewsTimes)
	fillRandomly_Ads_StatsViewsTimes((*o).ViewsTimes)
}

func fillRandomly_Ads_StatsAge(o *Ads_StatsAge) {
	(*o).ClicksRate = new(float64)
	*(*o).ClicksRate = randFloat()
	(*o).ImpressionsRate = new(float64)
	*(*o).ImpressionsRate = randFloat()
	(*o).Value = new(string)
	*(*o).Value = randString()
}

func fillRandomly_Ads_StatsCities(o *Ads_StatsCities) {
	(*o).ClicksRate = new(float64)
	*(*o).ClicksRate = randFloat()
	(*o).ImpressionsRate = new(float64)
	*(*o).ImpressionsRate = randFloat()
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).Value = new(int)
	*(*o).Value = randInt()
}

func fillRandomly_Ads_StatsFormat(o *Ads_StatsFormat) {
	(*o).Clicks = new(int)
	*(*o).Clicks = randInt()
	(*o).Day = new(string)
	*(*o).Day = randString()
	(*o).Impressions = new(int)
	*(*o).Impressions = randInt()
	(*o).JoinRate = new(int)
	*(*o).JoinRate = randInt()
	(*o).LinkExternalClicks = new(int)
	*(*o).LinkExternalClicks = randInt()
	(*o).Month = new(string)
	*(*o).Month = randString()
	(*o).Overall = new(int)
	*(*o).Overall = randInt()
	(*o).Reach = new(int)
	*(*o).Reach = randInt()
	(*o).Spent = new(int)
	*(*o).Spent = randInt()
	(*o).VideoClicksSite = new(int)
	*(*o).VideoClicksSite = randInt()
	(*o).VideoViews = new(int)
	*(*o).VideoViews = randInt()
	(*o).VideoViewsFull = new(int)
	*(*o).VideoViewsFull = randInt()
	(*o).VideoViewsHalf = new(int)
	*(*o).VideoViewsHalf = randInt()
}

func fillRandomly_Ads_StatsSex(o *Ads_StatsSex) {
	(*o).ClicksRate = new(float64)
	*(*o).ClicksRate = randFloat()
	(*o).ImpressionsRate = new(float64)
	*(*o).ImpressionsRate = randFloat()
	(*o).Value = new(Ads_StatsSexValue)
	fillRandomly_Ads_StatsSexValue((*o).Value)
}

func fillRandomly_Ads_StatsSexAge(o *Ads_StatsSexAge) {
	(*o).ClicksRate = new(float64)
	*(*o).ClicksRate = randFloat()
	(*o).ImpressionsRate = new(float64)
	*(*o).ImpressionsRate = randFloat()
	(*o).Value = new(string)
	*(*o).Value = randString()
}

func fillRandomly_Ads_StatsSexValue(o *Ads_StatsSexValue) {
	switch randIntn(2) {
	case 0:
		*o = "f"
	case 1:
		*o = "m"
	}
}

func fillRandomly_Ads_StatsViewsTimes(o *Ads_StatsViewsTimes) {
	(*o).ViewsAdsTimes1 = new(int)
	*(*o).ViewsAdsTimes1 = randInt()
	(*o).ViewsAdsTimes10 = new(int)
	*(*o).ViewsAdsTimes10 = randInt()
	(*o).ViewsAdsTimes11Plus = new(int)
	*(*o).ViewsAdsTimes11Plus = randInt()
	(*o).ViewsAdsTimes2 = new(int)
	*(*o).ViewsAdsTimes2 = randInt()
	(*o).ViewsAdsTimes3 = new(int)
	*(*o).ViewsAdsTimes3 = randInt()
	(*o).ViewsAdsTimes4 = new(int)
	*(*o).ViewsAdsTimes4 = randInt()
	(*o).ViewsAdsTimes5 = new(string)
	*(*o).ViewsAdsTimes5 = randString()
	(*o).ViewsAdsTimes6 = new(int)
	*(*o).ViewsAdsTimes6 = randInt()
	(*o).ViewsAdsTimes7 = new(int)
	*(*o).ViewsAdsTimes7 = randInt()
	(*o).ViewsAdsTimes8 = new(int)
	*(*o).ViewsAdsTimes8 = randInt()
	(*o).ViewsAdsTimes9 = new(int)
	*(*o).ViewsAdsTimes9 = randInt()
}

func fillRandomly_Ads_TargSettings(o *Ads_TargSettings) {
	(*o).CampaignId = new(int)
	*(*o).CampaignId = randInt()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	fillRandomly_Ads_Criteria(&(*o).Ads_Criteria)
}

func fillRandomly_Ads_TargStats(o *Ads_TargStats) {
	(*o).AudienceCount = randInt()
	(*o).RecommendedCpc = new(float64)
	*(*o).RecommendedCpc = randFloat()
	(*o).RecommendedCpc50 = new(float64)
	*(*o).RecommendedCpc50 = randFloat()
	(*o).RecommendedCpc70 = new(float64)
	*(*o).RecommendedCpc70 = randFloat()
	(*o).RecommendedCpc90 = new(float64)
	*(*o).RecommendedCpc90 = randFloat()
	(*o).RecommendedCpm = new(float64)
	*(*o).RecommendedCpm = randFloat()
	(*o).RecommendedCpm50 = new(float64)
	*(*o).RecommendedCpm50 = randFloat()
	(*o).RecommendedCpm70 = new(float64)
	*(*o).RecommendedCpm70 = randFloat()
	(*o).RecommendedCpm90 = new(float64)
	*(*o).RecommendedCpm90 = randFloat()
}

func fillRandomly_Ads_TargSuggestions(o *Ads_TargSuggestions) {
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Name = new(string)
	*(*o).Name = randString()
}

func fillRandomly_Ads_TargSuggestionsCities(o *Ads_TargSuggestionsCities) {
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).Parent = new(string)
	*(*o).Parent = randString()
}

func fillRandomly_Ads_TargSuggestionsRegions(o *Ads_TargSuggestionsRegions) {
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).Type = new(string)
	*(*o).Type = randString()
}

func fillRandomly_Ads_TargSuggestionsSchools(o *Ads_TargSuggestionsSchools) {
	(*o).Desc = new(string)
	*(*o).Desc = randString()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).Parent = new(string)
	*(*o).Parent = randString()
	(*o).Type = new(Ads_TargSuggestionsSchoolsType)
	fillRandomly_Ads_TargSuggestionsSchoolsType((*o).Type)
}

func fillRandomly_Ads_TargSuggestionsSchoolsType(o *Ads_TargSuggestionsSchoolsType) {
	switch randIntn(4) {
	case 0:
		*o = "school"
	case 1:
		*o = "university"
	case 2:
		*o = "faculty"
	case 3:
		*o = "chair"
	}
}

func fillRandomly_Ads_TargetGroup(o *Ads_TargetGroup) {
	(*o).AudienceCount = new(int)
	*(*o).AudienceCount = randInt()
	(*o).Domain = new(string)
	*(*o).Domain = randString()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Lifetime = new(int)
	*(*o).Lifetime = randInt()
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).Pixel = new(string)
	*(*o).Pixel = randString()
}

func fillRandomly_Ads_UpdateOfficeUsersResult(o *Ads_UpdateOfficeUsersResult) {
	(*o).Error = new(Base_Error)
	fillRandomly_Base_Error((*o).Error)
	(*o).IsSuccess = randBool()
	(*o).UserId = randInt()
}

func fillRandomly_Ads_UserSpecification(o *Ads_UserSpecification) {
	(*o).ClientIds = new([]int)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).ClientIds = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).ClientIds)[i0] = randInt()
	}
	(*o).GrantAccessToAllClients = new(bool)
	*(*o).GrantAccessToAllClients = randBool()
	fillRandomly_Ads_AccessRolePublic(&(*o).Role)
	(*o).UserId = randInt()
	(*o).ViewBudget = new(bool)
	*(*o).ViewBudget = randBool()
}

func fillRandomly_Ads_UserSpecificationCutted(o *Ads_UserSpecificationCutted) {
	(*o).ClientId = new(int)
	*(*o).ClientId = randInt()
	fillRandomly_Ads_AccessRolePublic(&(*o).Role)
	(*o).UserId = randInt()
	(*o).ViewBudget = new(bool)
	*(*o).ViewBudget = randBool()
}

func fillRandomly_Ads_Users(o *Ads_Users) {
	l0 := randIntn(maxArrayLength + 1)
	(*o).Accesses = make([]Ads_Accesses, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Ads_Accesses(&((*o).Accesses)[i0])
	}
	(*o).UserId = randInt()
}

func fillRandomly_Adsweb_GetAdCategoriesResponseCategoriesCategory(o *Adsweb_GetAdCategoriesResponseCategoriesCategory) {
	(*o).Id = randInt()
	(*o).Name = randString()
}

func fillRandomly_Adsweb_GetAdUnitsResponseAdUnitsAdUnit(o *Adsweb_GetAdUnitsResponseAdUnitsAdUnit) {
	(*o).Id = randInt()
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).SiteId = randInt()
}

func fillRandomly_Adsweb_GetFraudHistoryResponseEntriesEntry(o *Adsweb_GetFraudHistoryResponseEntriesEntry) {
	(*o).Day = randString()
	(*o).SiteId = randInt()
}

func fillRandomly_Adsweb_GetSitesResponseSitesSite(o *Adsweb_GetSitesResponseSitesSite) {
	(*o).Domains = new(string)
	*(*o).Domains = randString()
	(*o).Id = randInt()
	(*o).StatusModer = new(string)
	*(*o).StatusModer = randString()
	(*o).StatusUser = new(string)
	*(*o).StatusUser = randString()
}

func fillRandomly_Adsweb_GetStatisticsResponseItemsItem(o *Adsweb_GetStatisticsResponseItemsItem) {
	(*o).AdUnitId = new(int)
	*(*o).AdUnitId = randInt()
	(*o).DayMax = new(string)
	*(*o).DayMax = randString()
	(*o).DayMin = new(string)
	*(*o).DayMin = randString()
	(*o).DaysCount = new(int)
	*(*o).DaysCount = randInt()
	(*o).HourMax = new(string)
	*(*o).HourMax = randString()
	(*o).HourMin = new(string)
	*(*o).HourMin = randString()
	(*o).HoursCount = new(int)
	*(*o).HoursCount = randInt()
	(*o).MonthMax = new(string)
	*(*o).MonthMax = randString()
	(*o).MonthMin = new(string)
	*(*o).MonthMin = randString()
	(*o).MonthsCount = new(int)
	*(*o).MonthsCount = randInt()
	(*o).OverallCount = new(int)
	*(*o).OverallCount = randInt()
	(*o).SiteId = new(int)
	*(*o).SiteId = randInt()
}

func fillRandomly_AppWidgets_Photo(o *AppWidgets_Photo) {
	(*o).Id = randString()
	l0 := randIntn(maxArrayLength + 1)
	(*o).Images = make([]Base_Image, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Base_Image(&((*o).Images)[i0])
	}
}

func fillRandomly_AppWidgets_Photos(o *AppWidgets_Photos) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).Items = new([]AppWidgets_Photo)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Items = make([]AppWidgets_Photo, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_AppWidgets_Photo(&(*(*o).Items)[i0])
	}
}

func fillRandomly_Apps_App(o *Apps_App) {
	fillRandomly_Apps_AppMin(&(*o).Apps_AppMin)
	(*o).AuthorUrl = new(string)
	*(*o).AuthorUrl = randString()
	(*o).Banner1120 = new(string)
	*(*o).Banner1120 = randString()
	(*o).Banner560 = new(string)
	*(*o).Banner560 = randString()
	(*o).CatalogPosition = new(int)
	*(*o).CatalogPosition = randInt()
	(*o).Description = new(string)
	*(*o).Description = randString()
	(*o).Friends = new([]int)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Friends = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Friends)[i0] = randInt()
	}
	(*o).Genre = new(string)
	*(*o).Genre = randString()
	(*o).GenreId = new(int)
	*(*o).GenreId = randInt()
	(*o).Icon16 = new(string)
	*(*o).Icon16 = randString()
	(*o).International = new(bool)
	*(*o).International = randBool()
	(*o).IsInCatalog = new(int)
	*(*o).IsInCatalog = randInt()
	(*o).IsNew = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsNew)
	(*o).LeaderboardType = new(Apps_AppLeaderboardType)
	fillRandomly_Apps_AppLeaderboardType((*o).LeaderboardType)
	(*o).MembersCount = new(int)
	*(*o).MembersCount = randInt()
	(*o).PlatformId = new(string)
	*(*o).PlatformId = randString()
	(*o).PublishedDate = new(int)
	*(*o).PublishedDate = randInt()
	(*o).PushEnabled = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).PushEnabled)
	(*o).ScreenName = new(string)
	*(*o).ScreenName = randString()
	(*o).ScreenOrientation = new(int)
	*(*o).ScreenOrientation = randInt()
	(*o).Section = new(string)
	*(*o).Section = randString()
}

func fillRandomly_Apps_AppLeaderboardType(o *Apps_AppLeaderboardType) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Apps_AppMin(o *Apps_AppMin) {
	(*o).AuthorOwnerId = new(int)
	*(*o).AuthorOwnerId = randInt()
	(*o).BackgroundLoaderColor = new(string)
	*(*o).BackgroundLoaderColor = randString()
	(*o).Icon139 = new(string)
	*(*o).Icon139 = randString()
	(*o).Icon150 = new(string)
	*(*o).Icon150 = randString()
	(*o).Icon278 = new(string)
	*(*o).Icon278 = randString()
	(*o).Icon576 = new(string)
	*(*o).Icon576 = randString()
	(*o).Icon75 = new(string)
	*(*o).Icon75 = randString()
	(*o).Id = randInt()
	(*o).IsInstalled = new(bool)
	*(*o).IsInstalled = randBool()
	(*o).LoaderIcon = new(string)
	*(*o).LoaderIcon = randString()
	(*o).Title = randString()
	fillRandomly_Apps_AppType(&(*o).Type)
}

func fillRandomly_Apps_AppType(o *Apps_AppType) {
	switch randIntn(8) {
	case 0:
		*o = "app"
	case 1:
		*o = "game"
	case 2:
		*o = "site"
	case 3:
		*o = "standalone"
	case 4:
		*o = "vk_app"
	case 5:
		*o = "community_app"
	case 6:
		*o = "html5_game"
	case 7:
		*o = "mini_app"
	}
}

func fillRandomly_Apps_CatalogList(o *Apps_CatalogList) {
	(*o).Count = randInt()
	l0 := randIntn(maxArrayLength + 1)
	(*o).Items = make([]Apps_App, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Apps_App(&((*o).Items)[i0])
	}
	(*o).Profiles = new([]Users_UserMin)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Profiles = make([]Users_UserMin, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Users_UserMin(&(*(*o).Profiles)[i0])
	}
}

func fillRandomly_Apps_Leaderboard(o *Apps_Leaderboard) {
	(*o).Level = new(int)
	*(*o).Level = randInt()
	(*o).Points = new(int)
	*(*o).Points = randInt()
	(*o).Score = new(int)
	*(*o).Score = randInt()
	(*o).UserId = randInt()
}

func fillRandomly_Apps_Scope_Name(o *Apps_Scope_Name) {
	switch randIntn(11) {
	case 0:
		*o = "friends"
	case 1:
		*o = "photos"
	case 2:
		*o = "video"
	case 3:
		*o = "pages"
	case 4:
		*o = "status"
	case 5:
		*o = "notes"
	case 6:
		*o = "wall"
	case 7:
		*o = "docs"
	case 8:
		*o = "groups"
	case 9:
		*o = "stats"
	case 10:
		*o = "market"
	}
}

func fillRandomly_Apps_Scope(o *Apps_Scope) {
	fillRandomly_Apps_Scope_Name(&(*o).Name)
	(*o).Title = new(string)
	*(*o).Title = randString()
}

func fillRandomly_Audio_Audio_GenreId(o *Audio_Audio_GenreId) {
	switch randIntn(21) {
	case 0:
		*o = 1
	case 1:
		*o = 2
	case 2:
		*o = 3
	case 3:
		*o = 4
	case 4:
		*o = 5
	case 5:
		*o = 6
	case 6:
		*o = 7
	case 7:
		*o = 21
	case 8:
		*o = 8
	case 9:
		*o = 1001
	case 10:
		*o = 10
	case 11:
		*o = 11
	case 12:
		*o = 12
	case 13:
		*o = 13
	case 14:
		*o = 14
	case 15:
		*o = 15
	case 16:
		*o = 16
	case 17:
		*o = 17
	case 18:
		*o = 19
	case 19:
		*o = 22
	case 20:
		*o = 18
	}
}

func fillRandomly_Audio_Audio(o *Audio_Audio) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).AlbumId = new(int)
	*(*o).AlbumId = randInt()
	(*o).Artist = randString()
	(*o).Date = new(int)
	*(*o).Date = randInt()
	(*o).Duration = randInt()
	(*o).GenreId = new(Audio_Audio_GenreId)
	fillRandomly_Audio_Audio_GenreId((*o).GenreId)
	(*o).Id = randInt()
	(*o).OwnerId = randInt()
	(*o).Performer = new(string)
	*(*o).Performer = randString()
	(*o).Title = randString()
	(*o).Url = new(string)
	*(*o).Url = randString()
}

func fillRandomly_Base_BoolInt(o *Base_BoolInt) {
	switch randIntn(2) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	}
}

func fillRandomly_Base_City(o *Base_City) {
	(*o).Id = randInt()
	(*o).Title = randString()
}

func fillRandomly_Base_CommentsInfo(o *Base_CommentsInfo) {
	(*o).CanClose = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanClose)
	(*o).CanOpen = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanOpen)
	(*o).CanPost = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanPost)
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).Donut = new(Wall_WallpostCommentsDonut)
	fillRandomly_Wall_WallpostCommentsDonut((*o).Donut)
	(*o).GroupsCanPost = new(bool)
	*(*o).GroupsCanPost = randBool()
}

func fillRandomly_Base_Country(o *Base_Country) {
	(*o).Id = randInt()
	(*o).Title = randString()
}

func fillRandomly_Base_CropPhoto(o *Base_CropPhoto) {
	fillRandomly_Base_CropPhotoCrop(&(*o).Crop)
	fillRandomly_Photos_Photo(&(*o).Photo)
	fillRandomly_Base_CropPhotoRect(&(*o).Rect)
}

func fillRandomly_Base_CropPhotoCrop(o *Base_CropPhotoCrop) {
	(*o).X = randFloat()
	(*o).X2 = randFloat()
	(*o).Y = randFloat()
	(*o).Y2 = randFloat()
}

func fillRandomly_Base_CropPhotoRect(o *Base_CropPhotoRect) {
	(*o).X = randFloat()
	(*o).X2 = randFloat()
	(*o).Y = randFloat()
	(*o).Y2 = randFloat()
}

func fillRandomly_Base_Error(o *Base_Error) {
	(*o).ErrorCode = randInt()
	(*o).ErrorMsg = new(string)
	*(*o).ErrorMsg = randString()
	(*o).ErrorSubcode = new(int)
	*(*o).ErrorSubcode = randInt()
	(*o).ErrorText = new(string)
	*(*o).ErrorText = randString()
	(*o).RequestParams = new([]Base_RequestParam)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).RequestParams = make([]Base_RequestParam, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Base_RequestParam(&(*(*o).RequestParams)[i0])
	}
}

func fillRandomly_Base_Geo(o *Base_Geo) {
	(*o).Coordinates = new(Base_GeoCoordinates)
	fillRandomly_Base_GeoCoordinates((*o).Coordinates)
	(*o).Place = new(Base_Place)
	fillRandomly_Base_Place((*o).Place)
	(*o).Showmap = new(int)
	*(*o).Showmap = randInt()
	(*o).Type = new(string)
	*(*o).Type = randString()
}

func fillRandomly_Base_GeoCoordinates(o *Base_GeoCoordinates) {
	(*o).Latitude = randFloat()
	(*o).Longitude = randFloat()
}

func fillRandomly_Base_GradientPoint(o *Base_GradientPoint) {
	(*o).Color = randString()
	(*o).Position = randFloat()
}

func fillRandomly_Base_Image(o *Base_Image) {
	(*o).Height = randInt()
	(*o).Id = new(string)
	*(*o).Id = randString()
	(*o).Url = randString()
	(*o).Width = randInt()
}

func fillRandomly_Base_Likes(o *Base_Likes) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).UserLikes = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).UserLikes)
}

func fillRandomly_Base_LikesInfo(o *Base_LikesInfo) {
	fillRandomly_Base_BoolInt(&(*o).CanLike)
	(*o).CanPublish = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanPublish)
	(*o).Count = randInt()
	(*o).UserLikes = randInt()
}

func fillRandomly_Base_Link(o *Base_Link) {
	(*o).Application = new(Base_LinkApplication)
	fillRandomly_Base_LinkApplication((*o).Application)
	(*o).Button = new(Base_LinkButton)
	fillRandomly_Base_LinkButton((*o).Button)
	(*o).Caption = new(string)
	*(*o).Caption = randString()
	(*o).Description = new(string)
	*(*o).Description = randString()
	(*o).Id = new(string)
	*(*o).Id = randString()
	(*o).IsExternal = new(bool)
	*(*o).IsExternal = randBool()
	(*o).IsFavorite = new(bool)
	*(*o).IsFavorite = randBool()
	(*o).Photo = new(Photos_Photo)
	fillRandomly_Photos_Photo((*o).Photo)
	(*o).PreviewPage = new(string)
	*(*o).PreviewPage = randString()
	(*o).PreviewUrl = new(string)
	*(*o).PreviewUrl = randString()
	(*o).Product = new(Base_LinkProduct)
	fillRandomly_Base_LinkProduct((*o).Product)
	(*o).Rating = new(Base_LinkRating)
	fillRandomly_Base_LinkRating((*o).Rating)
	(*o).TargetObject = new(Link_TargetObject)
	fillRandomly_Link_TargetObject((*o).TargetObject)
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).Url = randString()
	(*o).Video = new(Video_Video)
	fillRandomly_Video_Video((*o).Video)
}

func fillRandomly_Base_LinkApplication(o *Base_LinkApplication) {
	(*o).AppId = new(float64)
	*(*o).AppId = randFloat()
	(*o).Store = new(Base_LinkApplicationStore)
	fillRandomly_Base_LinkApplicationStore((*o).Store)
}

func fillRandomly_Base_LinkApplicationStore(o *Base_LinkApplicationStore) {
	(*o).Id = new(float64)
	*(*o).Id = randFloat()
	(*o).Name = new(string)
	*(*o).Name = randString()
}

func fillRandomly_Base_LinkButton(o *Base_LinkButton) {
	(*o).Action = new(Base_LinkButtonAction)
	fillRandomly_Base_LinkButtonAction((*o).Action)
	(*o).AlbumId = new(int)
	*(*o).AlbumId = randInt()
	(*o).BlockId = new(string)
	*(*o).BlockId = randString()
	(*o).CuratorId = new(int)
	*(*o).CuratorId = randInt()
	(*o).Icon = new(string)
	*(*o).Icon = randString()
	(*o).OwnerId = new(int)
	*(*o).OwnerId = randInt()
	(*o).SectionId = new(string)
	*(*o).SectionId = randString()
	(*o).Style = new(Base_LinkButtonStyle)
	fillRandomly_Base_LinkButtonStyle((*o).Style)
	(*o).Title = new(string)
	*(*o).Title = randString()
}

func fillRandomly_Base_LinkButtonAction(o *Base_LinkButtonAction) {
	(*o).ConsumeReason = new(string)
	*(*o).ConsumeReason = randString()
	fillRandomly_Base_LinkButtonActionType(&(*o).Type)
	(*o).Url = new(string)
	*(*o).Url = randString()
}

func fillRandomly_Base_LinkButtonActionType(o *Base_LinkButtonActionType) {
	switch randIntn(1) {
	case 0:
		*o = "open_url"
	}
}

func fillRandomly_Base_LinkButtonStyle(o *Base_LinkButtonStyle) {
	switch randIntn(2) {
	case 0:
		*o = "primary"
	case 1:
		*o = "secondary"
	}
}

func fillRandomly_Base_LinkProduct(o *Base_LinkProduct) {
	(*o).Merchant = new(string)
	*(*o).Merchant = randString()
	(*o).OrdersCount = new(int)
	*(*o).OrdersCount = randInt()
	fillRandomly_Market_Price(&(*o).Price)
}

func fillRandomly_Base_LinkProductCategory(o *Base_LinkProductCategory) {
	*o = Base_LinkProductCategory(randString())
}

func fillRandomly_Base_LinkProductStatus(o *Base_LinkProductStatus) {
	switch randIntn(5) {
	case 0:
		*o = "active"
	case 1:
		*o = "blocked"
	case 2:
		*o = "sold"
	case 3:
		*o = "deleted"
	case 4:
		*o = "archived"
	}
}

func fillRandomly_Base_LinkRating(o *Base_LinkRating) {
	(*o).ReviewsCount = new(int)
	*(*o).ReviewsCount = randInt()
	(*o).Stars = new(float64)
	*(*o).Stars = randFloat()
}

func fillRandomly_Base_MessageError(o *Base_MessageError) {
	(*o).Code = new(int)
	*(*o).Code = randInt()
	(*o).Description = new(string)
	*(*o).Description = randString()
}

func fillRandomly_Base_Object(o *Base_Object) {
	(*o).Id = randInt()
	(*o).Title = randString()
}

func fillRandomly_Base_ObjectCount(o *Base_ObjectCount) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
}

func fillRandomly_Base_ObjectWithName(o *Base_ObjectWithName) {
	(*o).Id = randInt()
	(*o).Name = randString()
}

func fillRandomly_Base_Place(o *Base_Place) {
	(*o).Address = new(string)
	*(*o).Address = randString()
	(*o).Checkins = new(int)
	*(*o).Checkins = randInt()
	(*o).City = new(string)
	*(*o).City = randString()
	(*o).Country = new(string)
	*(*o).Country = randString()
	(*o).Created = new(int)
	*(*o).Created = randInt()
	(*o).Icon = new(string)
	*(*o).Icon = randString()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Latitude = new(float64)
	*(*o).Latitude = randFloat()
	(*o).Longitude = new(float64)
	*(*o).Longitude = randFloat()
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).Type = new(string)
	*(*o).Type = randString()
}

func fillRandomly_Base_PropertyExists(o *Base_PropertyExists) {
	switch randIntn(1) {
	case 0:
		*o = 1
	}
}

func fillRandomly_Base_RepostsInfo(o *Base_RepostsInfo) {
	(*o).Count = randInt()
	(*o).MailCount = new(int)
	*(*o).MailCount = randInt()
	(*o).UserReposted = new(int)
	*(*o).UserReposted = randInt()
	(*o).WallCount = new(int)
	*(*o).WallCount = randInt()
}

func fillRandomly_Base_RequestParam(o *Base_RequestParam) {
	(*o).Key = new(string)
	*(*o).Key = randString()
	(*o).Value = new(string)
	*(*o).Value = randString()
}

func fillRandomly_Base_Sex(o *Base_Sex) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Base_Sticker(o *Base_Sticker) {
	var rawJSON []byte
	switch randIntn(2) {
	case 0:
		r := new(Base_StickerOld)
		fillRandomly_Base_StickerOld(r)
		rawJSON, _ = json.Marshal(*r)
	case 1:
		r := new(Base_StickerNew)
		fillRandomly_Base_StickerNew(r)
		rawJSON, _ = json.Marshal(*r)
	}
	o.raw = rawJSON
}

func fillRandomly_Base_StickerAnimation_Type(o *Base_StickerAnimation_Type) {
	switch randIntn(2) {
	case 0:
		*o = "light"
	case 1:
		*o = "dark"
	}
}

func fillRandomly_Base_StickerAnimation(o *Base_StickerAnimation) {
	(*o).Type = new(Base_StickerAnimation_Type)
	fillRandomly_Base_StickerAnimation_Type((*o).Type)
	(*o).Url = new(string)
	*(*o).Url = randString()
}

func fillRandomly_Base_StickerNew(o *Base_StickerNew) {
	(*o).AnimationUrl = new(string)
	*(*o).AnimationUrl = randString()
	(*o).Animations = new([]Base_StickerAnimation)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Animations = make([]Base_StickerAnimation, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Base_StickerAnimation(&(*(*o).Animations)[i0])
	}
	(*o).Images = new([]Base_Image)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Images = make([]Base_Image, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Base_Image(&(*(*o).Images)[i0])
	}
	(*o).ImagesWithBackground = new([]Base_Image)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).ImagesWithBackground = make([]Base_Image, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Base_Image(&(*(*o).ImagesWithBackground)[i0])
	}
	(*o).IsAllowed = new(bool)
	*(*o).IsAllowed = randBool()
	(*o).ProductId = new(int)
	*(*o).ProductId = randInt()
	(*o).StickerId = new(int)
	*(*o).StickerId = randInt()
}

func fillRandomly_Base_StickerOld(o *Base_StickerOld) {
	(*o).Height = new(int)
	*(*o).Height = randInt()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).IsAllowed = new(bool)
	*(*o).IsAllowed = randBool()
	(*o).Photo128 = new(string)
	*(*o).Photo128 = randString()
	(*o).Photo256 = new(string)
	*(*o).Photo256 = randString()
	(*o).Photo352 = new(string)
	*(*o).Photo352 = randString()
	(*o).Photo512 = new(string)
	*(*o).Photo512 = randString()
	(*o).Photo64 = new(string)
	*(*o).Photo64 = randString()
	(*o).ProductId = new(int)
	*(*o).ProductId = randInt()
	(*o).Width = new(int)
	*(*o).Width = randInt()
}

func fillRandomly_Base_StickersList(o *Base_StickersList) {
	l0 := randIntn(maxArrayLength + 1)
	*o = make([]Base_StickerNew, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Base_StickerNew(&(*o)[i0])
	}
}

func fillRandomly_Base_UploadServer(o *Base_UploadServer) {
	(*o).UploadUrl = randString()
}

func fillRandomly_Base_UserGroupFields(o *Base_UserGroupFields) {
	switch randIntn(111) {
	case 0:
		*o = "about"
	case 1:
		*o = "action_button"
	case 2:
		*o = "activities"
	case 3:
		*o = "activity"
	case 4:
		*o = "addresses"
	case 5:
		*o = "admin_level"
	case 6:
		*o = "age_limits"
	case 7:
		*o = "author_id"
	case 8:
		*o = "ban_info"
	case 9:
		*o = "bdate"
	case 10:
		*o = "blacklisted"
	case 11:
		*o = "blacklisted_by_me"
	case 12:
		*o = "books"
	case 13:
		*o = "can_create_topic"
	case 14:
		*o = "can_message"
	case 15:
		*o = "can_post"
	case 16:
		*o = "can_see_all_posts"
	case 17:
		*o = "can_see_audio"
	case 18:
		*o = "can_send_friend_request"
	case 19:
		*o = "can_upload_video"
	case 20:
		*o = "can_write_private_message"
	case 21:
		*o = "career"
	case 22:
		*o = "city"
	case 23:
		*o = "common_count"
	case 24:
		*o = "connections"
	case 25:
		*o = "contacts"
	case 26:
		*o = "counters"
	case 27:
		*o = "country"
	case 28:
		*o = "cover"
	case 29:
		*o = "crop_photo"
	case 30:
		*o = "deactivated"
	case 31:
		*o = "description"
	case 32:
		*o = "domain"
	case 33:
		*o = "education"
	case 34:
		*o = "exports"
	case 35:
		*o = "finish_date"
	case 36:
		*o = "fixed_post"
	case 37:
		*o = "followers_count"
	case 38:
		*o = "friend_status"
	case 39:
		*o = "games"
	case 40:
		*o = "has_market_app"
	case 41:
		*o = "has_mobile"
	case 42:
		*o = "has_photo"
	case 43:
		*o = "home_town"
	case 44:
		*o = "id"
	case 45:
		*o = "interests"
	case 46:
		*o = "is_admin"
	case 47:
		*o = "is_closed"
	case 48:
		*o = "is_favorite"
	case 49:
		*o = "is_friend"
	case 50:
		*o = "is_hidden_from_feed"
	case 51:
		*o = "is_member"
	case 52:
		*o = "is_messages_blocked"
	case 53:
		*o = "can_send_notify"
	case 54:
		*o = "is_subscribed"
	case 55:
		*o = "last_seen"
	case 56:
		*o = "links"
	case 57:
		*o = "lists"
	case 58:
		*o = "maiden_name"
	case 59:
		*o = "main_album_id"
	case 60:
		*o = "main_section"
	case 61:
		*o = "market"
	case 62:
		*o = "member_status"
	case 63:
		*o = "members_count"
	case 64:
		*o = "military"
	case 65:
		*o = "movies"
	case 66:
		*o = "music"
	case 67:
		*o = "name"
	case 68:
		*o = "nickname"
	case 69:
		*o = "occupation"
	case 70:
		*o = "online"
	case 71:
		*o = "online_status"
	case 72:
		*o = "personal"
	case 73:
		*o = "phone"
	case 74:
		*o = "photo_100"
	case 75:
		*o = "photo_200"
	case 76:
		*o = "photo_200_orig"
	case 77:
		*o = "photo_400_orig"
	case 78:
		*o = "photo_50"
	case 79:
		*o = "photo_id"
	case 80:
		*o = "photo_max"
	case 81:
		*o = "photo_max_orig"
	case 82:
		*o = "quotes"
	case 83:
		*o = "relation"
	case 84:
		*o = "relatives"
	case 85:
		*o = "schools"
	case 86:
		*o = "screen_name"
	case 87:
		*o = "sex"
	case 88:
		*o = "site"
	case 89:
		*o = "start_date"
	case 90:
		*o = "status"
	case 91:
		*o = "timezone"
	case 92:
		*o = "trending"
	case 93:
		*o = "tv"
	case 94:
		*o = "type"
	case 95:
		*o = "universities"
	case 96:
		*o = "verified"
	case 97:
		*o = "wall_comments"
	case 98:
		*o = "wiki_page"
	case 99:
		*o = "first_name"
	case 100:
		*o = "first_name_acc"
	case 101:
		*o = "first_name_dat"
	case 102:
		*o = "first_name_gen"
	case 103:
		*o = "last_name"
	case 104:
		*o = "last_name_acc"
	case 105:
		*o = "last_name_dat"
	case 106:
		*o = "last_name_gen"
	case 107:
		*o = "can_subscribe_stories"
	case 108:
		*o = "is_subscribed_stories"
	case 109:
		*o = "vk_admin_status"
	case 110:
		*o = "can_upload_story"
	}
}

func fillRandomly_Base_UserId(o *Base_UserId) {
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
}

func fillRandomly_Board_DefaultOrder(o *Board_DefaultOrder) {
	switch randIntn(4) {
	case 0:
		*o = 1
	case 1:
		*o = 2
	case 2:
		*o = -1
	case 3:
		*o = -2
	}
}

func fillRandomly_Board_Topic(o *Board_Topic) {
	(*o).Comments = new(int)
	*(*o).Comments = randInt()
	(*o).Created = new(int)
	*(*o).Created = randInt()
	(*o).CreatedBy = new(int)
	*(*o).CreatedBy = randInt()
	(*o).FirstComment = new(string)
	*(*o).FirstComment = randString()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).IsClosed = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsClosed)
	(*o).IsFixed = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsFixed)
	(*o).LastComment = new(string)
	*(*o).LastComment = randString()
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).Updated = new(int)
	*(*o).Updated = randInt()
	(*o).UpdatedBy = new(int)
	*(*o).UpdatedBy = randInt()
}

func fillRandomly_Board_TopicComment(o *Board_TopicComment) {
	(*o).Attachments = new([]Wall_CommentAttachment)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Attachments = make([]Wall_CommentAttachment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Wall_CommentAttachment(&(*(*o).Attachments)[i0])
	}
	(*o).CanEdit = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanEdit)
	(*o).Date = randInt()
	(*o).FromId = randInt()
	(*o).Id = randInt()
	(*o).Likes = new(Base_LikesInfo)
	fillRandomly_Base_LikesInfo((*o).Likes)
	(*o).RealOffset = new(int)
	*(*o).RealOffset = randInt()
	(*o).Text = randString()
}

func fillRandomly_Callback_Base(o *Callback_Base) {
	(*o).EventId = randString()
	(*o).GroupId = randInt()
	(*o).Secret = new(string)
	*(*o).Secret = randString()
	fillRandomly_Callback_Type(&(*o).Type)
}

func fillRandomly_Callback_BoardPostDelete(o *Callback_BoardPostDelete) {
	(*o).Id = randInt()
	(*o).TopicId = randInt()
	(*o).TopicOwnerId = randInt()
}

func fillRandomly_Callback_Confirmation(o *Callback_Confirmation) {
	fillRandomly_Callback_Base(&(*o).Callback_Base)
	(*o).Type = new(Callback_Type)
	fillRandomly_Callback_Type((*o).Type)
}

func fillRandomly_Callback_DonutMoneyWithdraw(o *Callback_DonutMoneyWithdraw) {
	(*o).Amount = randFloat()
	(*o).AmountWithoutFee = randFloat()
}

func fillRandomly_Callback_DonutMoneyWithdrawError(o *Callback_DonutMoneyWithdrawError) {
	(*o).Reason = randString()
}

func fillRandomly_Callback_DonutSubscriptionCancelled(o *Callback_DonutSubscriptionCancelled) {
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
}

func fillRandomly_Callback_DonutSubscriptionCreate(o *Callback_DonutSubscriptionCreate) {
	(*o).Amount = randInt()
	(*o).AmountWithoutFee = randFloat()
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
}

func fillRandomly_Callback_DonutSubscriptionExpired(o *Callback_DonutSubscriptionExpired) {
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
}

func fillRandomly_Callback_DonutSubscriptionPriceChanged(o *Callback_DonutSubscriptionPriceChanged) {
	(*o).AmountDiff = new(float64)
	*(*o).AmountDiff = randFloat()
	(*o).AmountDiffWithoutFee = new(float64)
	*(*o).AmountDiffWithoutFee = randFloat()
	(*o).AmountNew = randInt()
	(*o).AmountOld = randInt()
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
}

func fillRandomly_Callback_DonutSubscriptionProlonged(o *Callback_DonutSubscriptionProlonged) {
	(*o).Amount = randInt()
	(*o).AmountWithoutFee = randFloat()
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
}

func fillRandomly_Callback_GroupChangePhoto(o *Callback_GroupChangePhoto) {
	fillRandomly_Photos_Photo(&(*o).Photo)
	(*o).UserId = randInt()
}

func fillRandomly_Callback_GroupChangeSettings(o *Callback_GroupChangeSettings) {
	fillRandomly_Base_BoolInt(&(*o).Self)
	(*o).UserId = randInt()
}

func fillRandomly_Callback_GroupJoin(o *Callback_GroupJoin) {
	fillRandomly_Callback_GroupJoinType(&(*o).JoinType)
	(*o).UserId = randInt()
}

func fillRandomly_Callback_GroupJoinType(o *Callback_GroupJoinType) {
	switch randIntn(5) {
	case 0:
		*o = "join"
	case 1:
		*o = "unsure"
	case 2:
		*o = "accepted"
	case 3:
		*o = "approved"
	case 4:
		*o = "request"
	}
}

func fillRandomly_Callback_GroupLeave(o *Callback_GroupLeave) {
	(*o).Self = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Self)
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
}

func fillRandomly_Callback_GroupMarket(o *Callback_GroupMarket) {
	switch randIntn(2) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	}
}

func fillRandomly_Callback_GroupOfficerRole(o *Callback_GroupOfficerRole) {
	switch randIntn(4) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	case 3:
		*o = 3
	}
}

func fillRandomly_Callback_GroupOfficersEdit(o *Callback_GroupOfficersEdit) {
	(*o).AdminId = randInt()
	fillRandomly_Callback_GroupOfficerRole(&(*o).LevelNew)
	fillRandomly_Callback_GroupOfficerRole(&(*o).LevelOld)
	(*o).UserId = randInt()
}

func fillRandomly_Callback_GroupSettingsChanges(o *Callback_GroupSettingsChanges) {
	(*o).Access = new(Groups_GroupIsClosed)
	fillRandomly_Groups_GroupIsClosed((*o).Access)
	(*o).AgeLimits = new(Groups_GroupFullAgeLimits)
	fillRandomly_Groups_GroupFullAgeLimits((*o).AgeLimits)
	(*o).Description = new(string)
	*(*o).Description = randString()
	(*o).EnableAudio = new(Groups_GroupAudio)
	fillRandomly_Groups_GroupAudio((*o).EnableAudio)
	(*o).EnableMarket = new(Callback_GroupMarket)
	fillRandomly_Callback_GroupMarket((*o).EnableMarket)
	(*o).EnablePhoto = new(Groups_GroupPhotos)
	fillRandomly_Groups_GroupPhotos((*o).EnablePhoto)
	(*o).EnableStatusDefault = new(Groups_GroupWall)
	fillRandomly_Groups_GroupWall((*o).EnableStatusDefault)
	(*o).EnableVideo = new(Groups_GroupVideo)
	fillRandomly_Groups_GroupVideo((*o).EnableVideo)
	(*o).PublicCategory = new(int)
	*(*o).PublicCategory = randInt()
	(*o).PublicSubcategory = new(int)
	*(*o).PublicSubcategory = randInt()
	(*o).ScreenName = new(string)
	*(*o).ScreenName = randString()
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).Website = new(string)
	*(*o).Website = randString()
}

func fillRandomly_Callback_LikeAddRemove_ObjectType(o *Callback_LikeAddRemove_ObjectType) {
	switch randIntn(10) {
	case 0:
		*o = "video"
	case 1:
		*o = "photo"
	case 2:
		*o = "post"
	case 3:
		*o = "comment"
	case 4:
		*o = "note"
	case 5:
		*o = "topic_comment"
	case 6:
		*o = "photo_comment"
	case 7:
		*o = "video_comment"
	case 8:
		*o = "market"
	case 9:
		*o = "market_comment"
	}
}

func fillRandomly_Callback_LikeAddRemove(o *Callback_LikeAddRemove) {
	(*o).LikerId = randInt()
	(*o).ObjectId = randInt()
	(*o).ObjectOwnerId = randInt()
	fillRandomly_Callback_LikeAddRemove_ObjectType(&(*o).ObjectType)
	(*o).PostId = randInt()
	(*o).ThreadReplyId = new(int)
	*(*o).ThreadReplyId = randInt()
}

func fillRandomly_Callback_MarketComment(o *Callback_MarketComment) {
	(*o).Date = randInt()
	(*o).FromId = randInt()
	(*o).Id = randInt()
	(*o).MarketOwnerId = new(int)
	*(*o).MarketOwnerId = randInt()
	(*o).PhotoId = new(int)
	*(*o).PhotoId = randInt()
	(*o).Text = new(string)
	*(*o).Text = randString()
}

func fillRandomly_Callback_MarketCommentDelete(o *Callback_MarketCommentDelete) {
	(*o).Id = randInt()
	(*o).ItemId = randInt()
	(*o).OwnerId = randInt()
	(*o).UserId = randInt()
}

func fillRandomly_Callback_MessageAllow(o *Callback_MessageAllow) {
	fillRandomly_Callback_Base(&(*o).Callback_Base)
	fillRandomly_Callback_MessageAllowObject(&(*o).Object)
	(*o).Type = new(Callback_Type)
	fillRandomly_Callback_Type((*o).Type)
}

func fillRandomly_Callback_MessageAllowObject(o *Callback_MessageAllowObject) {
	(*o).Key = randString()
	(*o).UserId = randInt()
}

func fillRandomly_Callback_MessageDeny(o *Callback_MessageDeny) {
	(*o).UserId = randInt()
}

func fillRandomly_Callback_MessageEdit(o *Callback_MessageEdit) {
	fillRandomly_Callback_Base(&(*o).Callback_Base)
	fillRandomly_Messages_Message(&(*o).Object)
	(*o).Type = new(Callback_Type)
	fillRandomly_Callback_Type((*o).Type)
}

func fillRandomly_Callback_MessageNew(o *Callback_MessageNew) {
	fillRandomly_Callback_Base(&(*o).Callback_Base)
	fillRandomly_Callback_MessageObject(&(*o).Object)
	(*o).Type = new(Callback_Type)
	fillRandomly_Callback_Type((*o).Type)
}

func fillRandomly_Callback_MessageObject(o *Callback_MessageObject) {
	(*o).ClientInfo = new(Client_InfoForBots)
	fillRandomly_Client_InfoForBots((*o).ClientInfo)
	(*o).Message = new(Messages_Message)
	fillRandomly_Messages_Message((*o).Message)
}

func fillRandomly_Callback_MessageReply(o *Callback_MessageReply) {
	fillRandomly_Callback_Base(&(*o).Callback_Base)
	fillRandomly_Messages_Message(&(*o).Object)
	(*o).Type = new(Callback_Type)
	fillRandomly_Callback_Type((*o).Type)
}

func fillRandomly_Callback_PhotoComment(o *Callback_PhotoComment) {
	(*o).Date = randInt()
	(*o).FromId = randInt()
	(*o).Id = randInt()
	(*o).PhotoOwnerId = randInt()
	(*o).Text = randString()
}

func fillRandomly_Callback_PhotoCommentDelete(o *Callback_PhotoCommentDelete) {
	(*o).Id = randInt()
	(*o).OwnerId = randInt()
	(*o).PhotoId = randInt()
	(*o).UserId = randInt()
}

func fillRandomly_Callback_PollVoteNew(o *Callback_PollVoteNew) {
	(*o).OptionId = randInt()
	(*o).OwnerId = randInt()
	(*o).PollId = randInt()
	(*o).UserId = randInt()
}

func fillRandomly_Callback_QrScan(o *Callback_QrScan) {
	(*o).Data = randString()
	(*o).Reread = randBool()
	(*o).Subtype = randString()
	(*o).Type = randString()
	(*o).UserId = randInt()
}

func fillRandomly_Callback_Type(o *Callback_Type) {
	switch randIntn(43) {
	case 0:
		*o = "audio_new"
	case 1:
		*o = "board_post_new"
	case 2:
		*o = "board_post_edit"
	case 3:
		*o = "board_post_restore"
	case 4:
		*o = "board_post_delete"
	case 5:
		*o = "confirmation"
	case 6:
		*o = "group_leave"
	case 7:
		*o = "group_join"
	case 8:
		*o = "group_change_photo"
	case 9:
		*o = "group_change_settings"
	case 10:
		*o = "group_officers_edit"
	case 11:
		*o = "lead_forms_new"
	case 12:
		*o = "market_comment_new"
	case 13:
		*o = "market_comment_delete"
	case 14:
		*o = "market_comment_edit"
	case 15:
		*o = "market_comment_restore"
	case 16:
		*o = "message_new"
	case 17:
		*o = "message_reply"
	case 18:
		*o = "message_edit"
	case 19:
		*o = "message_allow"
	case 20:
		*o = "message_deny"
	case 21:
		*o = "message_read"
	case 22:
		*o = "message_typing_state"
	case 23:
		*o = "messages_edit"
	case 24:
		*o = "photo_new"
	case 25:
		*o = "photo_comment_new"
	case 26:
		*o = "photo_comment_delete"
	case 27:
		*o = "photo_comment_edit"
	case 28:
		*o = "photo_comment_restore"
	case 29:
		*o = "poll_vote_new"
	case 30:
		*o = "user_block"
	case 31:
		*o = "user_unblock"
	case 32:
		*o = "video_new"
	case 33:
		*o = "video_comment_new"
	case 34:
		*o = "video_comment_delete"
	case 35:
		*o = "video_comment_edit"
	case 36:
		*o = "video_comment_restore"
	case 37:
		*o = "wall_post_new"
	case 38:
		*o = "wall_reply_new"
	case 39:
		*o = "wall_reply_edit"
	case 40:
		*o = "wall_reply_delete"
	case 41:
		*o = "wall_reply_restore"
	case 42:
		*o = "wall_repost"
	}
}

func fillRandomly_Callback_UserBlock(o *Callback_UserBlock) {
	(*o).AdminId = randInt()
	(*o).Comment = new(string)
	*(*o).Comment = randString()
	(*o).Reason = randInt()
	(*o).UnblockDate = randInt()
	(*o).UserId = randInt()
}

func fillRandomly_Callback_UserUnblock(o *Callback_UserUnblock) {
	(*o).AdminId = randInt()
	(*o).ByEndDate = randInt()
	(*o).UserId = randInt()
}

func fillRandomly_Callback_VideoComment(o *Callback_VideoComment) {
	(*o).Date = randInt()
	(*o).FromId = randInt()
	(*o).Id = randInt()
	(*o).Text = randString()
	(*o).VideoOwnerId = randInt()
}

func fillRandomly_Callback_VideoCommentDelete(o *Callback_VideoCommentDelete) {
	(*o).Id = randInt()
	(*o).OwnerId = randInt()
	(*o).UserId = randInt()
	(*o).VideoId = randInt()
}

func fillRandomly_Callback_WallCommentDelete(o *Callback_WallCommentDelete) {
	(*o).Id = randInt()
	(*o).OwnerId = randInt()
	(*o).PostId = randInt()
	(*o).UserId = randInt()
}

func fillRandomly_Calls_Call(o *Calls_Call) {
	(*o).Duration = new(int)
	*(*o).Duration = randInt()
	(*o).InitiatorId = randInt()
	(*o).Participants = new(Calls_Participants)
	fillRandomly_Calls_Participants((*o).Participants)
	(*o).ReceiverId = randInt()
	fillRandomly_Calls_EndState(&(*o).State)
	(*o).Time = randInt()
	(*o).Video = new(bool)
	*(*o).Video = randBool()
}

func fillRandomly_Calls_EndState(o *Calls_EndState) {
	switch randIntn(3) {
	case 0:
		*o = "canceled_by_initiator"
	case 1:
		*o = "canceled_by_receiver"
	case 2:
		*o = "reached"
	}
}

func fillRandomly_Calls_Participants(o *Calls_Participants) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).List = new([]int)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).List = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).List)[i0] = randInt()
	}
}

func fillRandomly_Client_InfoForBots(o *Client_InfoForBots) {
	(*o).ButtonActions = new([]Messages_TemplateActionTypeNames)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).ButtonActions = make([]Messages_TemplateActionTypeNames, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Messages_TemplateActionTypeNames(&(*(*o).ButtonActions)[i0])
	}
	(*o).Carousel = new(bool)
	*(*o).Carousel = randBool()
	(*o).InlineKeyboard = new(bool)
	*(*o).InlineKeyboard = randBool()
	(*o).Keyboard = new(bool)
	*(*o).Keyboard = randBool()
	(*o).LangId = new(int)
	*(*o).LangId = randInt()
}

func fillRandomly_Comment_Thread(o *Comment_Thread) {
	(*o).CanPost = new(bool)
	*(*o).CanPost = randBool()
	(*o).Count = randInt()
	(*o).GroupsCanPost = new(bool)
	*(*o).GroupsCanPost = randBool()
	(*o).Items = new([]Wall_WallComment)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Items = make([]Wall_WallComment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Wall_WallComment(&(*(*o).Items)[i0])
	}
	(*o).ShowReplyButton = new(bool)
	*(*o).ShowReplyButton = randBool()
}

func fillRandomly_Database_City(o *Database_City) {
	fillRandomly_Base_Object(&(*o).Base_Object)
	(*o).Area = new(string)
	*(*o).Area = randString()
	(*o).Important = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Important)
	(*o).Region = new(string)
	*(*o).Region = randString()
}

func fillRandomly_Database_CityById(o *Database_CityById) {
	r := Base_Object(*o)
	fillRandomly_Base_Object(&r)
	*o = Database_CityById(r)
}

func fillRandomly_Database_Faculty(o *Database_Faculty) {
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Title = new(string)
	*(*o).Title = randString()
}

func fillRandomly_Database_Region(o *Database_Region) {
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Title = new(string)
	*(*o).Title = randString()
}

func fillRandomly_Database_School(o *Database_School) {
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Title = new(string)
	*(*o).Title = randString()
}

func fillRandomly_Database_Station(o *Database_Station) {
	(*o).CityId = new(int)
	*(*o).CityId = randInt()
	(*o).Color = new(string)
	*(*o).Color = randString()
	(*o).Id = randInt()
	(*o).Name = randString()
}

func fillRandomly_Database_University(o *Database_University) {
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Title = new(string)
	*(*o).Title = randString()
}

func fillRandomly_Docs_Doc(o *Docs_Doc) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).Date = randInt()
	(*o).Ext = randString()
	(*o).Id = randInt()
	(*o).IsLicensed = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsLicensed)
	(*o).OwnerId = randInt()
	(*o).Preview = new(Docs_DocPreview)
	fillRandomly_Docs_DocPreview((*o).Preview)
	(*o).Size = randInt()
	(*o).Tags = new([]string)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Tags = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Tags)[i0] = randString()
	}
	(*o).Title = randString()
	(*o).Type = randInt()
	(*o).Url = new(string)
	*(*o).Url = randString()
}

func fillRandomly_Docs_DocAttachmentType(o *Docs_DocAttachmentType) {
	switch randIntn(3) {
	case 0:
		*o = "doc"
	case 1:
		*o = "graffiti"
	case 2:
		*o = "audio_message"
	}
}

func fillRandomly_Docs_DocPreview(o *Docs_DocPreview) {
	(*o).AudioMsg = new(Docs_DocPreviewAudioMsg)
	fillRandomly_Docs_DocPreviewAudioMsg((*o).AudioMsg)
	(*o).Graffiti = new(Docs_DocPreviewGraffiti)
	fillRandomly_Docs_DocPreviewGraffiti((*o).Graffiti)
	(*o).Photo = new(Docs_DocPreviewPhoto)
	fillRandomly_Docs_DocPreviewPhoto((*o).Photo)
	(*o).Video = new(Docs_DocPreviewVideo)
	fillRandomly_Docs_DocPreviewVideo((*o).Video)
}

func fillRandomly_Docs_DocPreviewAudioMsg(o *Docs_DocPreviewAudioMsg) {
	(*o).Duration = randInt()
	(*o).LinkMp3 = randString()
	(*o).LinkOgg = randString()
	l0 := randIntn(maxArrayLength + 1)
	(*o).Waveform = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Waveform)[i0] = randInt()
	}
}

func fillRandomly_Docs_DocPreviewGraffiti(o *Docs_DocPreviewGraffiti) {
	(*o).Height = randInt()
	(*o).Src = randString()
	(*o).Width = randInt()
}

func fillRandomly_Docs_DocPreviewPhoto(o *Docs_DocPreviewPhoto) {
	(*o).Sizes = new([]Docs_DocPreviewPhotoSizes)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Sizes = make([]Docs_DocPreviewPhotoSizes, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Docs_DocPreviewPhotoSizes(&(*(*o).Sizes)[i0])
	}
}

func fillRandomly_Docs_DocPreviewPhotoSizes(o *Docs_DocPreviewPhotoSizes) {
	(*o).Height = randInt()
	(*o).Src = randString()
	fillRandomly_Photos_PhotoSizesType(&(*o).Type)
	(*o).Width = randInt()
}

func fillRandomly_Docs_DocPreviewVideo(o *Docs_DocPreviewVideo) {
	(*o).FileSize = randInt()
	(*o).Height = randInt()
	(*o).Src = randString()
	(*o).Width = randInt()
}

func fillRandomly_Docs_DocTypes(o *Docs_DocTypes) {
	(*o).Count = randInt()
	(*o).Id = randInt()
	(*o).Name = randString()
}

func fillRandomly_Donut_DonatorSubscriptionInfo_Status(o *Donut_DonatorSubscriptionInfo_Status) {
	switch randIntn(2) {
	case 0:
		*o = "active"
	case 1:
		*o = "expiring"
	}
}

func fillRandomly_Donut_DonatorSubscriptionInfo(o *Donut_DonatorSubscriptionInfo) {
	(*o).Amount = randInt()
	(*o).NextPaymentDate = randInt()
	(*o).OwnerId = randInt()
	fillRandomly_Donut_DonatorSubscriptionInfo_Status(&(*o).Status)
}

func fillRandomly_Events_EventAttach(o *Events_EventAttach) {
	(*o).Address = new(string)
	*(*o).Address = randString()
	(*o).ButtonText = randString()
	l0 := randIntn(maxArrayLength + 1)
	(*o).Friends = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Friends)[i0] = randInt()
	}
	(*o).Id = randInt()
	(*o).IsFavorite = randBool()
	(*o).MemberStatus = new(Groups_GroupFullMemberStatus)
	fillRandomly_Groups_GroupFullMemberStatus((*o).MemberStatus)
	(*o).Text = randString()
	(*o).Time = new(int)
	*(*o).Time = randInt()
}

func fillRandomly_Fave_Bookmark(o *Fave_Bookmark) {
	(*o).AddedDate = randInt()
	(*o).Link = new(Base_Link)
	fillRandomly_Base_Link((*o).Link)
	(*o).Post = new(Wall_WallpostFull)
	fillRandomly_Wall_WallpostFull((*o).Post)
	(*o).Product = new(Market_MarketItem)
	fillRandomly_Market_MarketItem((*o).Product)
	(*o).Seen = randBool()
	l0 := randIntn(maxArrayLength + 1)
	(*o).Tags = make([]Fave_Tag, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Fave_Tag(&((*o).Tags)[i0])
	}
	fillRandomly_Fave_BookmarkType(&(*o).Type)
	(*o).Video = new(Video_VideoFull)
	fillRandomly_Video_VideoFull((*o).Video)
}

func fillRandomly_Fave_BookmarkType(o *Fave_BookmarkType) {
	switch randIntn(5) {
	case 0:
		*o = "post"
	case 1:
		*o = "video"
	case 2:
		*o = "product"
	case 3:
		*o = "article"
	case 4:
		*o = "link"
	}
}

func fillRandomly_Fave_Page(o *Fave_Page) {
	(*o).Description = randString()
	(*o).Group = new(Groups_GroupFull)
	fillRandomly_Groups_GroupFull((*o).Group)
	l0 := randIntn(maxArrayLength + 1)
	(*o).Tags = make([]Fave_Tag, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Fave_Tag(&((*o).Tags)[i0])
	}
	fillRandomly_Fave_PageType(&(*o).Type)
	(*o).UpdatedDate = new(int)
	*(*o).UpdatedDate = randInt()
	(*o).User = new(Users_UserFull)
	fillRandomly_Users_UserFull((*o).User)
}

func fillRandomly_Fave_PageType(o *Fave_PageType) {
	switch randIntn(3) {
	case 0:
		*o = "user"
	case 1:
		*o = "group"
	case 2:
		*o = "hints"
	}
}

func fillRandomly_Fave_Tag(o *Fave_Tag) {
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Name = new(string)
	*(*o).Name = randString()
}

func fillRandomly_Friends_FriendExtendedStatus(o *Friends_FriendExtendedStatus) {
	fillRandomly_Friends_FriendStatus(&(*o).Friends_FriendStatus)
	(*o).IsRequestUnread = new(bool)
	*(*o).IsRequestUnread = randBool()
}

func fillRandomly_Friends_FriendStatus(o *Friends_FriendStatus) {
	fillRandomly_Friends_FriendStatusStatus(&(*o).FriendStatus)
	(*o).Sign = new(string)
	*(*o).Sign = randString()
	(*o).UserId = randInt()
}

func fillRandomly_Friends_FriendStatusStatus(o *Friends_FriendStatusStatus) {
	switch randIntn(4) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	case 3:
		*o = 3
	}
}

func fillRandomly_Friends_FriendsList(o *Friends_FriendsList) {
	(*o).Id = randInt()
	(*o).Name = randString()
}

func fillRandomly_Friends_MutualFriend(o *Friends_MutualFriend) {
	(*o).CommonCount = new(int)
	*(*o).CommonCount = randInt()
	(*o).CommonFriends = new([]int)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).CommonFriends = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).CommonFriends)[i0] = randInt()
	}
	(*o).Id = new(int)
	*(*o).Id = randInt()
}

func fillRandomly_Friends_Requests(o *Friends_Requests) {
	(*o).From = new(string)
	*(*o).From = randString()
	(*o).Mutual = new(Friends_RequestsMutual)
	fillRandomly_Friends_RequestsMutual((*o).Mutual)
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
}

func fillRandomly_Friends_RequestsMutual(o *Friends_RequestsMutual) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).Users = new([]int)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Users = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Users)[i0] = randInt()
	}
}

func fillRandomly_Friends_RequestsXtrMessage(o *Friends_RequestsXtrMessage) {
	(*o).From = new(string)
	*(*o).From = randString()
	(*o).Message = new(string)
	*(*o).Message = randString()
	(*o).Mutual = new(Friends_RequestsMutual)
	fillRandomly_Friends_RequestsMutual((*o).Mutual)
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
}

func fillRandomly_Friends_UserXtrPhone(o *Friends_UserXtrPhone) {
	fillRandomly_Users_UserFull(&(*o).Users_UserFull)
	(*o).Phone = new(string)
	*(*o).Phone = randString()
}

func fillRandomly_Gifts_Gift(o *Gifts_Gift) {
	(*o).Date = new(int)
	*(*o).Date = randInt()
	(*o).FromId = new(int)
	*(*o).FromId = randInt()
	(*o).Gift = new(Gifts_Layout)
	fillRandomly_Gifts_Layout((*o).Gift)
	(*o).GiftHash = new(string)
	*(*o).GiftHash = randString()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Message = new(string)
	*(*o).Message = randString()
	(*o).Privacy = new(Gifts_GiftPrivacy)
	fillRandomly_Gifts_GiftPrivacy((*o).Privacy)
}

func fillRandomly_Gifts_GiftPrivacy(o *Gifts_GiftPrivacy) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Gifts_Layout(o *Gifts_Layout) {
	(*o).BuildId = new(string)
	*(*o).BuildId = randString()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).IsStickersStyle = new(bool)
	*(*o).IsStickersStyle = randBool()
	(*o).Keywords = new(string)
	*(*o).Keywords = randString()
	(*o).StickersProductId = new(int)
	*(*o).StickersProductId = randInt()
	(*o).Thumb256 = new(string)
	*(*o).Thumb256 = randString()
	(*o).Thumb48 = new(string)
	*(*o).Thumb48 = randString()
	(*o).Thumb512 = new(string)
	*(*o).Thumb512 = randString()
	(*o).Thumb96 = new(string)
	*(*o).Thumb96 = randString()
}

func fillRandomly_Groups_Address(o *Groups_Address) {
	(*o).AdditionalAddress = new(string)
	*(*o).AdditionalAddress = randString()
	(*o).Address = new(string)
	*(*o).Address = randString()
	(*o).CityId = new(int)
	*(*o).CityId = randInt()
	(*o).CountryId = new(int)
	*(*o).CountryId = randInt()
	(*o).Distance = new(int)
	*(*o).Distance = randInt()
	(*o).Id = randInt()
	(*o).Latitude = new(float64)
	*(*o).Latitude = randFloat()
	(*o).Longitude = new(float64)
	*(*o).Longitude = randFloat()
	(*o).MetroStationId = new(int)
	*(*o).MetroStationId = randInt()
	(*o).Phone = new(string)
	*(*o).Phone = randString()
	(*o).PlaceId = new(int)
	*(*o).PlaceId = randInt()
	(*o).TimeOffset = new(int)
	*(*o).TimeOffset = randInt()
	(*o).Timetable = new(Groups_AddressTimetable)
	fillRandomly_Groups_AddressTimetable((*o).Timetable)
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).WorkInfoStatus = new(Groups_AddressWorkInfoStatus)
	fillRandomly_Groups_AddressWorkInfoStatus((*o).WorkInfoStatus)
}

func fillRandomly_Groups_AddressTimetable(o *Groups_AddressTimetable) {
	(*o).Fri = new(Groups_AddressTimetableDay)
	fillRandomly_Groups_AddressTimetableDay((*o).Fri)
	(*o).Mon = new(Groups_AddressTimetableDay)
	fillRandomly_Groups_AddressTimetableDay((*o).Mon)
	(*o).Sat = new(Groups_AddressTimetableDay)
	fillRandomly_Groups_AddressTimetableDay((*o).Sat)
	(*o).Sun = new(Groups_AddressTimetableDay)
	fillRandomly_Groups_AddressTimetableDay((*o).Sun)
	(*o).Thu = new(Groups_AddressTimetableDay)
	fillRandomly_Groups_AddressTimetableDay((*o).Thu)
	(*o).Tue = new(Groups_AddressTimetableDay)
	fillRandomly_Groups_AddressTimetableDay((*o).Tue)
	(*o).Wed = new(Groups_AddressTimetableDay)
	fillRandomly_Groups_AddressTimetableDay((*o).Wed)
}

func fillRandomly_Groups_AddressTimetableDay(o *Groups_AddressTimetableDay) {
	(*o).BreakCloseTime = new(int)
	*(*o).BreakCloseTime = randInt()
	(*o).BreakOpenTime = new(int)
	*(*o).BreakOpenTime = randInt()
	(*o).CloseTime = randInt()
	(*o).OpenTime = randInt()
}

func fillRandomly_Groups_AddressWorkInfoStatus(o *Groups_AddressWorkInfoStatus) {
	switch randIntn(5) {
	case 0:
		*o = "no_information"
	case 1:
		*o = "temporarily_closed"
	case 2:
		*o = "always_opened"
	case 3:
		*o = "timetable"
	case 4:
		*o = "forever_closed"
	}
}

func fillRandomly_Groups_AddressesInfo(o *Groups_AddressesInfo) {
	(*o).IsEnabled = randBool()
	(*o).MainAddressId = new(int)
	*(*o).MainAddressId = randInt()
}

func fillRandomly_Groups_BanInfo(o *Groups_BanInfo) {
	(*o).AdminId = new(int)
	*(*o).AdminId = randInt()
	(*o).Comment = new(string)
	*(*o).Comment = randString()
	(*o).CommentVisible = new(bool)
	*(*o).CommentVisible = randBool()
	(*o).Date = new(int)
	*(*o).Date = randInt()
	(*o).EndDate = new(int)
	*(*o).EndDate = randInt()
	(*o).IsClosed = new(bool)
	*(*o).IsClosed = randBool()
	(*o).Reason = new(Groups_BanInfoReason)
	fillRandomly_Groups_BanInfoReason((*o).Reason)
}

func fillRandomly_Groups_BanInfoReason(o *Groups_BanInfoReason) {
	switch randIntn(5) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	case 3:
		*o = 3
	case 4:
		*o = 4
	}
}

func fillRandomly_Groups_BannedItem(o *Groups_BannedItem) {
	r := Groups_OwnerXtrBanInfo(*o)
	fillRandomly_Groups_OwnerXtrBanInfo(&r)
	*o = Groups_BannedItem(r)
}

func fillRandomly_Groups_CallbackServer_Status(o *Groups_CallbackServer_Status) {
	switch randIntn(4) {
	case 0:
		*o = "unconfigured"
	case 1:
		*o = "failed"
	case 2:
		*o = "wait"
	case 3:
		*o = "ok"
	}
}

func fillRandomly_Groups_CallbackServer(o *Groups_CallbackServer) {
	(*o).CreatorId = randInt()
	(*o).Id = randInt()
	(*o).SecretKey = randString()
	fillRandomly_Groups_CallbackServer_Status(&(*o).Status)
	(*o).Title = randString()
	(*o).Url = randString()
}

func fillRandomly_Groups_CallbackSettings(o *Groups_CallbackSettings) {
	(*o).ApiVersion = new(string)
	*(*o).ApiVersion = randString()
	(*o).Events = new(Groups_LongPollEvents)
	fillRandomly_Groups_LongPollEvents((*o).Events)
}

func fillRandomly_Groups_ContactsItem(o *Groups_ContactsItem) {
	(*o).Desc = new(string)
	*(*o).Desc = randString()
	(*o).Email = new(string)
	*(*o).Email = randString()
	(*o).Phone = new(string)
	*(*o).Phone = randString()
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
}

func fillRandomly_Groups_CountersGroup(o *Groups_CountersGroup) {
	(*o).Addresses = new(int)
	*(*o).Addresses = randInt()
	(*o).Albums = new(int)
	*(*o).Albums = randInt()
	(*o).Articles = new(int)
	*(*o).Articles = randInt()
	(*o).AudioPlaylists = new(int)
	*(*o).AudioPlaylists = randInt()
	(*o).Audios = new(int)
	*(*o).Audios = randInt()
	(*o).Clips = new(int)
	*(*o).Clips = randInt()
	(*o).ClipsFollowers = new(int)
	*(*o).ClipsFollowers = randInt()
	(*o).Docs = new(int)
	*(*o).Docs = randInt()
	(*o).Market = new(int)
	*(*o).Market = randInt()
	(*o).MarketServices = new(int)
	*(*o).MarketServices = randInt()
	(*o).Narratives = new(int)
	*(*o).Narratives = randInt()
	(*o).Photos = new(int)
	*(*o).Photos = randInt()
	(*o).Podcasts = new(int)
	*(*o).Podcasts = randInt()
	(*o).Topics = new(int)
	*(*o).Topics = randInt()
	(*o).Videos = new(int)
	*(*o).Videos = randInt()
}

func fillRandomly_Groups_Cover(o *Groups_Cover) {
	fillRandomly_Base_BoolInt(&(*o).Enabled)
	(*o).Images = new([]Base_Image)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Images = make([]Base_Image, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Base_Image(&(*(*o).Images)[i0])
	}
}

func fillRandomly_Groups_Fields(o *Groups_Fields) {
	switch randIntn(66) {
	case 0:
		*o = "market"
	case 1:
		*o = "member_status"
	case 2:
		*o = "is_favorite"
	case 3:
		*o = "is_subscribed"
	case 4:
		*o = "is_subscribed_podcasts"
	case 5:
		*o = "can_subscribe_podcasts"
	case 6:
		*o = "city"
	case 7:
		*o = "country"
	case 8:
		*o = "verified"
	case 9:
		*o = "description"
	case 10:
		*o = "wiki_page"
	case 11:
		*o = "members_count"
	case 12:
		*o = "requests_count"
	case 13:
		*o = "counters"
	case 14:
		*o = "cover"
	case 15:
		*o = "can_post"
	case 16:
		*o = "can_suggest"
	case 17:
		*o = "can_upload_story"
	case 18:
		*o = "can_upload_doc"
	case 19:
		*o = "can_upload_video"
	case 20:
		*o = "can_upload_clip"
	case 21:
		*o = "can_see_all_posts"
	case 22:
		*o = "can_create_topic"
	case 23:
		*o = "crop_photo"
	case 24:
		*o = "activity"
	case 25:
		*o = "fixed_post"
	case 26:
		*o = "has_photo"
	case 27:
		*o = "status"
	case 28:
		*o = "main_album_id"
	case 29:
		*o = "links"
	case 30:
		*o = "contacts"
	case 31:
		*o = "site"
	case 32:
		*o = "main_section"
	case 33:
		*o = "secondary_section"
	case 34:
		*o = "wall"
	case 35:
		*o = "trending"
	case 36:
		*o = "can_message"
	case 37:
		*o = "is_market_cart_enabled"
	case 38:
		*o = "is_messages_blocked"
	case 39:
		*o = "can_send_notify"
	case 40:
		*o = "has_group_channel"
	case 41:
		*o = "group_channel"
	case 42:
		*o = "online_status"
	case 43:
		*o = "start_date"
	case 44:
		*o = "finish_date"
	case 45:
		*o = "age_limits"
	case 46:
		*o = "ban_info"
	case 47:
		*o = "action_button"
	case 48:
		*o = "author_id"
	case 49:
		*o = "phone"
	case 50:
		*o = "has_market_app"
	case 51:
		*o = "addresses"
	case 52:
		*o = "live_covers"
	case 53:
		*o = "is_adult"
	case 54:
		*o = "is_hidden_from_feed"
	case 55:
		*o = "can_subscribe_posts"
	case 56:
		*o = "warning_notification"
	case 57:
		*o = "msg_push_allowed"
	case 58:
		*o = "stories_archive_count"
	case 59:
		*o = "video_live_level"
	case 60:
		*o = "video_live_count"
	case 61:
		*o = "clips_count"
	case 62:
		*o = "has_unseen_stories"
	case 63:
		*o = "is_business"
	case 64:
		*o = "textlives_count"
	case 65:
		*o = "members_count_text"
	}
}

func fillRandomly_Groups_Filter(o *Groups_Filter) {
	switch randIntn(8) {
	case 0:
		*o = "admin"
	case 1:
		*o = "editor"
	case 2:
		*o = "moder"
	case 3:
		*o = "advertiser"
	case 4:
		*o = "groups"
	case 5:
		*o = "publics"
	case 6:
		*o = "events"
	case 7:
		*o = "has_addresses"
	}
}

func fillRandomly_Groups_Group(o *Groups_Group) {
	(*o).AdminLevel = new(Groups_GroupAdminLevel)
	fillRandomly_Groups_GroupAdminLevel((*o).AdminLevel)
	(*o).Deactivated = new(string)
	*(*o).Deactivated = randString()
	(*o).EstDate = new(string)
	*(*o).EstDate = randString()
	(*o).FinishDate = new(int)
	*(*o).FinishDate = randInt()
	(*o).Id = randInt()
	(*o).IsAdmin = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsAdmin)
	(*o).IsAdvertiser = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsAdvertiser)
	(*o).IsClosed = new(Groups_GroupIsClosed)
	fillRandomly_Groups_GroupIsClosed((*o).IsClosed)
	(*o).IsMember = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsMember)
	(*o).IsVideoLiveNotificationsBlocked = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsVideoLiveNotificationsBlocked)
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).Photo100 = new(string)
	*(*o).Photo100 = randString()
	(*o).Photo200 = new(string)
	*(*o).Photo200 = randString()
	(*o).Photo200Orig = new(string)
	*(*o).Photo200Orig = randString()
	(*o).Photo400 = new(string)
	*(*o).Photo400 = randString()
	(*o).Photo400Orig = new(string)
	*(*o).Photo400Orig = randString()
	(*o).Photo50 = new(string)
	*(*o).Photo50 = randString()
	(*o).PhotoMax = new(string)
	*(*o).PhotoMax = randString()
	(*o).PhotoMaxOrig = new(string)
	*(*o).PhotoMaxOrig = randString()
	(*o).PhotoMaxSize = new(Groups_PhotoSize)
	fillRandomly_Groups_PhotoSize((*o).PhotoMaxSize)
	(*o).PublicDateLabel = new(string)
	*(*o).PublicDateLabel = randString()
	(*o).ScreenName = new(string)
	*(*o).ScreenName = randString()
	(*o).StartDate = new(int)
	*(*o).StartDate = randInt()
	(*o).Type = new(Groups_GroupType)
	fillRandomly_Groups_GroupType((*o).Type)
	(*o).VideoLive = new(Video_LiveInfo)
	fillRandomly_Video_LiveInfo((*o).VideoLive)
}

func fillRandomly_Groups_GroupAccess(o *Groups_GroupAccess) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Groups_GroupAdminLevel(o *Groups_GroupAdminLevel) {
	switch randIntn(3) {
	case 0:
		*o = 1
	case 1:
		*o = 2
	case 2:
		*o = 3
	}
}

func fillRandomly_Groups_GroupAgeLimits(o *Groups_GroupAgeLimits) {
	switch randIntn(3) {
	case 0:
		*o = 1
	case 1:
		*o = 2
	case 2:
		*o = 3
	}
}

func fillRandomly_Groups_GroupAttach(o *Groups_GroupAttach) {
	(*o).Id = randInt()
	(*o).IsFavorite = randBool()
	(*o).Size = randInt()
	(*o).Status = randString()
	(*o).Text = randString()
}

func fillRandomly_Groups_GroupAudio(o *Groups_GroupAudio) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Groups_GroupBanInfo(o *Groups_GroupBanInfo) {
	(*o).Comment = new(string)
	*(*o).Comment = randString()
	(*o).EndDate = new(int)
	*(*o).EndDate = randInt()
	(*o).Reason = new(Groups_BanInfoReason)
	fillRandomly_Groups_BanInfoReason((*o).Reason)
}

func fillRandomly_Groups_GroupCategory(o *Groups_GroupCategory) {
	(*o).Id = randInt()
	(*o).Name = randString()
	(*o).Subcategories = new([]Base_ObjectWithName)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Subcategories = make([]Base_ObjectWithName, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Base_ObjectWithName(&(*(*o).Subcategories)[i0])
	}
}

func fillRandomly_Groups_GroupCategoryFull(o *Groups_GroupCategoryFull) {
	(*o).Id = randInt()
	(*o).Name = randString()
	(*o).PageCount = randInt()
	l0 := randIntn(maxArrayLength + 1)
	(*o).PagePreviews = make([]Groups_Group, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Groups_Group(&((*o).PagePreviews)[i0])
	}
	(*o).Subcategories = new([]Groups_GroupCategory)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Subcategories = make([]Groups_GroupCategory, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Groups_GroupCategory(&(*(*o).Subcategories)[i0])
	}
}

func fillRandomly_Groups_GroupCategoryType(o *Groups_GroupCategoryType) {
	(*o).Id = randInt()
	(*o).Name = randString()
}

func fillRandomly_Groups_GroupDocs(o *Groups_GroupDocs) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Groups_GroupFull_Wall(o *Groups_GroupFull_Wall) {
	switch randIntn(4) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	case 3:
		*o = 3
	}
}

func fillRandomly_Groups_GroupFull(o *Groups_GroupFull) {
	fillRandomly_Groups_Group(&(*o).Groups_Group)
	(*o).Activity = new(string)
	*(*o).Activity = randString()
	(*o).Addresses = new(Groups_AddressesInfo)
	fillRandomly_Groups_AddressesInfo((*o).Addresses)
	(*o).AgeLimits = new(Groups_GroupFullAgeLimits)
	fillRandomly_Groups_GroupFullAgeLimits((*o).AgeLimits)
	(*o).BanInfo = new(Groups_GroupBanInfo)
	fillRandomly_Groups_GroupBanInfo((*o).BanInfo)
	(*o).CanCreateTopic = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanCreateTopic)
	(*o).CanMessage = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanMessage)
	(*o).CanPost = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanPost)
	(*o).CanSeeAllPosts = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanSeeAllPosts)
	(*o).CanSendNotify = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanSendNotify)
	(*o).CanSubscribePodcasts = new(bool)
	*(*o).CanSubscribePodcasts = randBool()
	(*o).CanSubscribePosts = new(bool)
	*(*o).CanSubscribePosts = randBool()
	(*o).CanSuggest = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanSuggest)
	(*o).CanUploadDoc = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanUploadDoc)
	(*o).CanUploadStory = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanUploadStory)
	(*o).CanUploadVideo = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanUploadVideo)
	(*o).City = new(Base_Object)
	fillRandomly_Base_Object((*o).City)
	(*o).ClipsCount = new(int)
	*(*o).ClipsCount = randInt()
	(*o).Contacts = new([]Groups_ContactsItem)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Contacts = make([]Groups_ContactsItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Groups_ContactsItem(&(*(*o).Contacts)[i0])
	}
	(*o).Counters = new(Groups_CountersGroup)
	fillRandomly_Groups_CountersGroup((*o).Counters)
	(*o).Country = new(Base_Country)
	fillRandomly_Base_Country((*o).Country)
	(*o).Cover = new(Groups_Cover)
	fillRandomly_Groups_Cover((*o).Cover)
	(*o).CropPhoto = new(Base_CropPhoto)
	fillRandomly_Base_CropPhoto((*o).CropPhoto)
	(*o).Description = new(string)
	*(*o).Description = randString()
	(*o).FixedPost = new(int)
	*(*o).FixedPost = randInt()
	(*o).HasGroupChannel = new(bool)
	*(*o).HasGroupChannel = randBool()
	(*o).HasMarketApp = new(bool)
	*(*o).HasMarketApp = randBool()
	(*o).HasPhoto = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).HasPhoto)
	(*o).HasUnseenStories = new(bool)
	*(*o).HasUnseenStories = randBool()
	(*o).InvitedBy = new(int)
	*(*o).InvitedBy = randInt()
	(*o).IsAdult = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsAdult)
	(*o).IsFavorite = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsFavorite)
	(*o).IsHiddenFromFeed = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsHiddenFromFeed)
	(*o).IsMessagesBlocked = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsMessagesBlocked)
	(*o).IsSubscribed = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsSubscribed)
	(*o).IsSubscribedPodcasts = new(bool)
	*(*o).IsSubscribedPodcasts = randBool()
	(*o).Links = new([]Groups_LinksItem)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Links = make([]Groups_LinksItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Groups_LinksItem(&(*(*o).Links)[i0])
	}
	(*o).LiveCovers = new(Groups_LiveCovers)
	fillRandomly_Groups_LiveCovers((*o).LiveCovers)
	(*o).MainAlbumId = new(int)
	*(*o).MainAlbumId = randInt()
	(*o).MainSection = new(Groups_GroupFullSection)
	fillRandomly_Groups_GroupFullSection((*o).MainSection)
	(*o).Market = new(Groups_MarketInfo)
	fillRandomly_Groups_MarketInfo((*o).Market)
	(*o).MemberStatus = new(Groups_GroupFullMemberStatus)
	fillRandomly_Groups_GroupFullMemberStatus((*o).MemberStatus)
	(*o).MembersCount = new(int)
	*(*o).MembersCount = randInt()
	(*o).MembersCountText = new(string)
	*(*o).MembersCountText = randString()
	(*o).OnlineStatus = new(Groups_OnlineStatus)
	fillRandomly_Groups_OnlineStatus((*o).OnlineStatus)
	(*o).RequestsCount = new(int)
	*(*o).RequestsCount = randInt()
	(*o).SecondarySection = new(Groups_GroupFullSection)
	fillRandomly_Groups_GroupFullSection((*o).SecondarySection)
	(*o).Site = new(string)
	*(*o).Site = randString()
	(*o).Status = new(string)
	*(*o).Status = randString()
	(*o).StatusAudio = new(Audio_Audio)
	fillRandomly_Audio_Audio((*o).StatusAudio)
	(*o).StoriesArchiveCount = new(int)
	*(*o).StoriesArchiveCount = randInt()
	(*o).Trending = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Trending)
	(*o).UsingVkpayMarketApp = new(bool)
	*(*o).UsingVkpayMarketApp = randBool()
	(*o).Verified = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Verified)
	(*o).VideoLiveCount = new(int)
	*(*o).VideoLiveCount = randInt()
	(*o).VideoLiveLevel = new(int)
	*(*o).VideoLiveLevel = randInt()
	(*o).Wall = new(Groups_GroupFull_Wall)
	fillRandomly_Groups_GroupFull_Wall((*o).Wall)
	(*o).WikiPage = new(string)
	*(*o).WikiPage = randString()
}

func fillRandomly_Groups_GroupFullAgeLimits(o *Groups_GroupFullAgeLimits) {
	switch randIntn(3) {
	case 0:
		*o = 1
	case 1:
		*o = 2
	case 2:
		*o = 3
	}
}

func fillRandomly_Groups_GroupFullMemberStatus(o *Groups_GroupFullMemberStatus) {
	switch randIntn(6) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	case 3:
		*o = 3
	case 4:
		*o = 4
	case 5:
		*o = 5
	}
}

func fillRandomly_Groups_GroupFullSection(o *Groups_GroupFullSection) {
	switch randIntn(45) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	case 3:
		*o = 3
	case 4:
		*o = 4
	case 5:
		*o = 5
	case 6:
		*o = 6
	case 7:
		*o = 7
	case 8:
		*o = 8
	case 9:
		*o = 9
	case 10:
		*o = 10
	case 11:
		*o = 11
	case 12:
		*o = 12
	case 13:
		*o = 13
	case 14:
		*o = 14
	case 15:
		*o = 15
	case 16:
		*o = 16
	case 17:
		*o = 24
	case 18:
		*o = 26
	case 19:
		*o = 27
	case 20:
		*o = 31
	case 21:
		*o = 32
	case 22:
		*o = 33
	case 23:
		*o = 34
	case 24:
		*o = 35
	case 25:
		*o = 36
	case 26:
		*o = 37
	case 27:
		*o = 39
	case 28:
		*o = 40
	case 29:
		*o = 41
	case 30:
		*o = 42
	case 31:
		*o = 43
	case 32:
		*o = 44
	case 33:
		*o = 45
	case 34:
		*o = 46
	case 35:
		*o = 47
	case 36:
		*o = 48
	case 37:
		*o = 49
	case 38:
		*o = 50
	case 39:
		*o = 51
	case 40:
		*o = 53
	case 41:
		*o = 54
	case 42:
		*o = 55
	case 43:
		*o = 57
	case 44:
		*o = 58
	}
}

func fillRandomly_Groups_GroupIsClosed(o *Groups_GroupIsClosed) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Groups_GroupMarketCurrency(o *Groups_GroupMarketCurrency) {
	switch randIntn(5) {
	case 0:
		*o = 643
	case 1:
		*o = 980
	case 2:
		*o = 398
	case 3:
		*o = 978
	case 4:
		*o = 840
	}
}

func fillRandomly_Groups_GroupPhotos(o *Groups_GroupPhotos) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Groups_GroupPublicCategoryList(o *Groups_GroupPublicCategoryList) {
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).Subcategories = new([]Groups_GroupCategoryType)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Subcategories = make([]Groups_GroupCategoryType, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Groups_GroupCategoryType(&(*(*o).Subcategories)[i0])
	}
}

func fillRandomly_Groups_GroupRole(o *Groups_GroupRole) {
	switch randIntn(4) {
	case 0:
		*o = "moderator"
	case 1:
		*o = "editor"
	case 2:
		*o = "administrator"
	case 3:
		*o = "advertiser"
	}
}

func fillRandomly_Groups_GroupSubject(o *Groups_GroupSubject) {
	switch randIntn(42) {
	case 0:
		*o = 1
	case 1:
		*o = 2
	case 2:
		*o = 3
	case 3:
		*o = 4
	case 4:
		*o = 5
	case 5:
		*o = 6
	case 6:
		*o = 7
	case 7:
		*o = 8
	case 8:
		*o = 9
	case 9:
		*o = 10
	case 10:
		*o = 11
	case 11:
		*o = 12
	case 12:
		*o = 13
	case 13:
		*o = 14
	case 14:
		*o = 15
	case 15:
		*o = 16
	case 16:
		*o = 17
	case 17:
		*o = 18
	case 18:
		*o = 19
	case 19:
		*o = 20
	case 20:
		*o = 21
	case 21:
		*o = 22
	case 22:
		*o = 23
	case 23:
		*o = 24
	case 24:
		*o = 25
	case 25:
		*o = 26
	case 26:
		*o = 27
	case 27:
		*o = 28
	case 28:
		*o = 29
	case 29:
		*o = 30
	case 30:
		*o = 31
	case 31:
		*o = 32
	case 32:
		*o = 33
	case 33:
		*o = 34
	case 34:
		*o = 35
	case 35:
		*o = 36
	case 36:
		*o = 37
	case 37:
		*o = 38
	case 38:
		*o = 39
	case 39:
		*o = 40
	case 40:
		*o = 41
	case 41:
		*o = 42
	}
}

func fillRandomly_Groups_GroupSuggestedPrivacy(o *Groups_GroupSuggestedPrivacy) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Groups_GroupTag_Color(o *Groups_GroupTag_Color) {
	switch randIntn(20) {
	case 0:
		*o = "454647"
	case 1:
		*o = "45678f"
	case 2:
		*o = "4bb34b"
	case 3:
		*o = "5181b8"
	case 4:
		*o = "539b9c"
	case 5:
		*o = "5c9ce6"
	case 6:
		*o = "63b9ba"
	case 7:
		*o = "6bc76b"
	case 8:
		*o = "76787a"
	case 9:
		*o = "792ec0"
	case 10:
		*o = "7a6c4f"
	case 11:
		*o = "7ececf"
	case 12:
		*o = "9e8d6b"
	case 13:
		*o = "a162de"
	case 14:
		*o = "aaaeb3"
	case 15:
		*o = "bbaa84"
	case 16:
		*o = "e64646"
	case 17:
		*o = "ff5c5c"
	case 18:
		*o = "ffa000"
	case 19:
		*o = "ffc107"
	}
}

func fillRandomly_Groups_GroupTag(o *Groups_GroupTag) {
	fillRandomly_Groups_GroupTag_Color(&(*o).Color)
	(*o).Id = randInt()
	(*o).Name = randString()
	(*o).Uses = new(int)
	*(*o).Uses = randInt()
}

func fillRandomly_Groups_GroupTopics(o *Groups_GroupTopics) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Groups_GroupType(o *Groups_GroupType) {
	switch randIntn(3) {
	case 0:
		*o = "group"
	case 1:
		*o = "page"
	case 2:
		*o = "event"
	}
}

func fillRandomly_Groups_GroupVideo(o *Groups_GroupVideo) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Groups_GroupWall(o *Groups_GroupWall) {
	switch randIntn(4) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	case 3:
		*o = 3
	}
}

func fillRandomly_Groups_GroupWiki(o *Groups_GroupWiki) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Groups_GroupsArray(o *Groups_GroupsArray) {
	(*o).Count = randInt()
	l0 := randIntn(maxArrayLength + 1)
	(*o).Items = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Items)[i0] = randInt()
	}
}

func fillRandomly_Groups_LinksItem(o *Groups_LinksItem) {
	(*o).Desc = new(string)
	*(*o).Desc = randString()
	(*o).EditTitle = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).EditTitle)
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).ImageProcessing = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).ImageProcessing)
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).Photo100 = new(string)
	*(*o).Photo100 = randString()
	(*o).Photo50 = new(string)
	*(*o).Photo50 = randString()
	(*o).Url = new(string)
	*(*o).Url = randString()
}

func fillRandomly_Groups_LiveCovers(o *Groups_LiveCovers) {
	(*o).IsEnabled = randBool()
	(*o).IsScalable = new(bool)
	*(*o).IsScalable = randBool()
	(*o).StoryIds = new([]string)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).StoryIds = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).StoryIds)[i0] = randString()
	}
}

func fillRandomly_Groups_LongPollEvents(o *Groups_LongPollEvents) {
	fillRandomly_Base_BoolInt(&(*o).AudioNew)
	fillRandomly_Base_BoolInt(&(*o).BoardPostDelete)
	fillRandomly_Base_BoolInt(&(*o).BoardPostEdit)
	fillRandomly_Base_BoolInt(&(*o).BoardPostNew)
	fillRandomly_Base_BoolInt(&(*o).BoardPostRestore)
	fillRandomly_Base_BoolInt(&(*o).DonutMoneyWithdraw)
	fillRandomly_Base_BoolInt(&(*o).DonutMoneyWithdrawError)
	fillRandomly_Base_BoolInt(&(*o).DonutSubscriptionCancelled)
	fillRandomly_Base_BoolInt(&(*o).DonutSubscriptionCreate)
	fillRandomly_Base_BoolInt(&(*o).DonutSubscriptionExpired)
	fillRandomly_Base_BoolInt(&(*o).DonutSubscriptionPriceChanged)
	fillRandomly_Base_BoolInt(&(*o).DonutSubscriptionProlonged)
	fillRandomly_Base_BoolInt(&(*o).GroupChangePhoto)
	fillRandomly_Base_BoolInt(&(*o).GroupChangeSettings)
	fillRandomly_Base_BoolInt(&(*o).GroupJoin)
	fillRandomly_Base_BoolInt(&(*o).GroupLeave)
	fillRandomly_Base_BoolInt(&(*o).GroupOfficersEdit)
	(*o).LeadFormsNew = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).LeadFormsNew)
	fillRandomly_Base_BoolInt(&(*o).MarketCommentDelete)
	fillRandomly_Base_BoolInt(&(*o).MarketCommentEdit)
	fillRandomly_Base_BoolInt(&(*o).MarketCommentNew)
	fillRandomly_Base_BoolInt(&(*o).MarketCommentRestore)
	(*o).MarketOrderEdit = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).MarketOrderEdit)
	(*o).MarketOrderNew = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).MarketOrderNew)
	fillRandomly_Base_BoolInt(&(*o).MessageAllow)
	fillRandomly_Base_BoolInt(&(*o).MessageDeny)
	fillRandomly_Base_BoolInt(&(*o).MessageEdit)
	fillRandomly_Base_BoolInt(&(*o).MessageNew)
	fillRandomly_Base_BoolInt(&(*o).MessageRead)
	fillRandomly_Base_BoolInt(&(*o).MessageReply)
	fillRandomly_Base_BoolInt(&(*o).MessageTypingState)
	fillRandomly_Base_BoolInt(&(*o).PhotoCommentDelete)
	fillRandomly_Base_BoolInt(&(*o).PhotoCommentEdit)
	fillRandomly_Base_BoolInt(&(*o).PhotoCommentNew)
	fillRandomly_Base_BoolInt(&(*o).PhotoCommentRestore)
	fillRandomly_Base_BoolInt(&(*o).PhotoNew)
	fillRandomly_Base_BoolInt(&(*o).PollVoteNew)
	fillRandomly_Base_BoolInt(&(*o).UserBlock)
	fillRandomly_Base_BoolInt(&(*o).UserUnblock)
	fillRandomly_Base_BoolInt(&(*o).VideoCommentDelete)
	fillRandomly_Base_BoolInt(&(*o).VideoCommentEdit)
	fillRandomly_Base_BoolInt(&(*o).VideoCommentNew)
	fillRandomly_Base_BoolInt(&(*o).VideoCommentRestore)
	fillRandomly_Base_BoolInt(&(*o).VideoNew)
	fillRandomly_Base_BoolInt(&(*o).WallPostNew)
	fillRandomly_Base_BoolInt(&(*o).WallReplyDelete)
	fillRandomly_Base_BoolInt(&(*o).WallReplyEdit)
	fillRandomly_Base_BoolInt(&(*o).WallReplyNew)
	fillRandomly_Base_BoolInt(&(*o).WallReplyRestore)
	fillRandomly_Base_BoolInt(&(*o).WallRepost)
}

func fillRandomly_Groups_LongPollServer(o *Groups_LongPollServer) {
	(*o).Key = randString()
	(*o).Server = randString()
	(*o).Ts = randString()
}

func fillRandomly_Groups_LongPollSettings(o *Groups_LongPollSettings) {
	(*o).ApiVersion = new(string)
	*(*o).ApiVersion = randString()
	fillRandomly_Groups_LongPollEvents(&(*o).Events)
	(*o).IsEnabled = randBool()
}

func fillRandomly_Groups_MarketInfo(o *Groups_MarketInfo) {
	(*o).ContactId = new(int)
	*(*o).ContactId = randInt()
	(*o).Currency = new(Market_Currency)
	fillRandomly_Market_Currency((*o).Currency)
	(*o).CurrencyText = new(string)
	*(*o).CurrencyText = randString()
	(*o).Enabled = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Enabled)
	(*o).MainAlbumId = new(int)
	*(*o).MainAlbumId = randInt()
	(*o).MinOrderPrice = new(Market_Price)
	fillRandomly_Market_Price((*o).MinOrderPrice)
	(*o).PriceMax = new(string)
	*(*o).PriceMax = randString()
	(*o).PriceMin = new(string)
	*(*o).PriceMin = randString()
	(*o).Type = new(string)
	*(*o).Type = randString()
}

func fillRandomly_Groups_MarketState(o *Groups_MarketState) {
	switch randIntn(3) {
	case 0:
		*o = "none"
	case 1:
		*o = "basic"
	case 2:
		*o = "advanced"
	}
}

func fillRandomly_Groups_MemberRole(o *Groups_MemberRole) {
	(*o).Id = randInt()
	(*o).Permissions = new([]Groups_MemberRolePermission)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Permissions = make([]Groups_MemberRolePermission, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Groups_MemberRolePermission(&(*(*o).Permissions)[i0])
	}
	(*o).Role = new(Groups_MemberRoleStatus)
	fillRandomly_Groups_MemberRoleStatus((*o).Role)
}

func fillRandomly_Groups_MemberRolePermission(o *Groups_MemberRolePermission) {
	switch randIntn(1) {
	case 0:
		*o = "ads"
	}
}

func fillRandomly_Groups_MemberRoleStatus(o *Groups_MemberRoleStatus) {
	switch randIntn(5) {
	case 0:
		*o = "moderator"
	case 1:
		*o = "editor"
	case 2:
		*o = "administrator"
	case 3:
		*o = "creator"
	case 4:
		*o = "advertiser"
	}
}

func fillRandomly_Groups_MemberStatus(o *Groups_MemberStatus) {
	fillRandomly_Base_BoolInt(&(*o).Member)
	(*o).UserId = randInt()
}

func fillRandomly_Groups_MemberStatusFull(o *Groups_MemberStatusFull) {
	(*o).CanInvite = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanInvite)
	(*o).CanRecall = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanRecall)
	(*o).Invitation = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Invitation)
	fillRandomly_Base_BoolInt(&(*o).Member)
	(*o).Request = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Request)
	(*o).UserId = randInt()
}

func fillRandomly_Groups_OnlineStatus(o *Groups_OnlineStatus) {
	(*o).Minutes = new(int)
	*(*o).Minutes = randInt()
	fillRandomly_Groups_OnlineStatusType(&(*o).Status)
}

func fillRandomly_Groups_OnlineStatusType(o *Groups_OnlineStatusType) {
	switch randIntn(3) {
	case 0:
		*o = "none"
	case 1:
		*o = "online"
	case 2:
		*o = "answer_mark"
	}
}

func fillRandomly_Groups_OwnerXtrBanInfo(o *Groups_OwnerXtrBanInfo) {
	(*o).BanInfo = new(Groups_BanInfo)
	fillRandomly_Groups_BanInfo((*o).BanInfo)
	(*o).Group = new(Groups_Group)
	fillRandomly_Groups_Group((*o).Group)
	(*o).Profile = new(Users_User)
	fillRandomly_Users_User((*o).Profile)
	(*o).Type = new(Groups_OwnerXtrBanInfoType)
	fillRandomly_Groups_OwnerXtrBanInfoType((*o).Type)
}

func fillRandomly_Groups_OwnerXtrBanInfoType(o *Groups_OwnerXtrBanInfoType) {
	switch randIntn(2) {
	case 0:
		*o = "group"
	case 1:
		*o = "profile"
	}
}

func fillRandomly_Groups_PhotoSize(o *Groups_PhotoSize) {
	(*o).Height = randInt()
	(*o).Width = randInt()
}

func fillRandomly_Groups_RoleOptions(o *Groups_RoleOptions) {
	switch randIntn(4) {
	case 0:
		*o = "moderator"
	case 1:
		*o = "editor"
	case 2:
		*o = "administrator"
	case 3:
		*o = "creator"
	}
}

func fillRandomly_Groups_SectionsListItem(o *Groups_SectionsListItem) {
	l0 := randIntn(maxArrayLength + 1)
	*o = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*o)[i0] = randString()
	}
}

func fillRandomly_Groups_SettingsTwitter_Status(o *Groups_SettingsTwitter_Status) {
	switch randIntn(2) {
	case 0:
		*o = "loading"
	case 1:
		*o = "sync"
	}
}

func fillRandomly_Groups_SettingsTwitter(o *Groups_SettingsTwitter) {
	(*o).Name = new(string)
	*(*o).Name = randString()
	fillRandomly_Groups_SettingsTwitter_Status(&(*o).Status)
}

func fillRandomly_Groups_SubjectItem(o *Groups_SubjectItem) {
	(*o).Id = randInt()
	(*o).Name = randString()
}

func fillRandomly_Groups_TokenPermissionSetting(o *Groups_TokenPermissionSetting) {
	(*o).Name = randString()
	(*o).Setting = randInt()
}

func fillRandomly_Groups_UserXtrRole(o *Groups_UserXtrRole) {
	fillRandomly_Users_UserFull(&(*o).Users_UserFull)
	(*o).Role = new(Groups_RoleOptions)
	fillRandomly_Groups_RoleOptions((*o).Role)
}

func fillRandomly_LeadForms_Answer_Answer(o *LeadForms_Answer_Answer) {
	var rawJSON []byte
	switch randIntn(2) {
	case 0:
		r := new(LeadForms_AnswerItem)
		fillRandomly_LeadForms_AnswerItem(r)
		rawJSON, _ = json.Marshal(*r)
	case 1:
		l0 := randIntn(maxArrayLength + 1)
		r := make([]LeadForms_AnswerItem, l0)
		for i0 := 0; i0 < l0; i0++ {
			fillRandomly_LeadForms_AnswerItem(&(r[i0]))
		}
		rawJSON, _ = json.Marshal(r)
	}
	o.raw = rawJSON
}

func fillRandomly_LeadForms_Answer(o *LeadForms_Answer) {
	fillRandomly_LeadForms_Answer_Answer(&(*o).Answer)
	(*o).Key = randString()
}

func fillRandomly_LeadForms_AnswerItem(o *LeadForms_AnswerItem) {
	(*o).Key = new(string)
	*(*o).Key = randString()
	(*o).Value = randString()
}

func fillRandomly_LeadForms_Form(o *LeadForms_Form) {
	(*o).Active = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Active)
	(*o).Confirmation = new(string)
	*(*o).Confirmation = randString()
	(*o).Description = new(string)
	*(*o).Description = randString()
	(*o).FormId = randInt()
	(*o).GroupId = randInt()
	(*o).LeadsCount = randInt()
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).NotifyAdmins = new(string)
	*(*o).NotifyAdmins = randString()
	(*o).NotifyEmails = new(string)
	*(*o).NotifyEmails = randString()
	(*o).OncePerUser = new(int)
	*(*o).OncePerUser = randInt()
	(*o).Photo = new(string)
	*(*o).Photo = randString()
	(*o).PixelCode = new(string)
	*(*o).PixelCode = randString()
	(*o).PolicyLinkUrl = new(string)
	*(*o).PolicyLinkUrl = randString()
	(*o).Questions = new([]LeadForms_QuestionItem)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Questions = make([]LeadForms_QuestionItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_LeadForms_QuestionItem(&(*(*o).Questions)[i0])
	}
	(*o).SiteLinkUrl = new(string)
	*(*o).SiteLinkUrl = randString()
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).Url = randString()
}

func fillRandomly_LeadForms_Lead(o *LeadForms_Lead) {
	(*o).AdId = new(int)
	*(*o).AdId = randInt()
	l0 := randIntn(maxArrayLength + 1)
	(*o).Answers = make([]LeadForms_Answer, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_LeadForms_Answer(&((*o).Answers)[i0])
	}
	(*o).Date = randInt()
	(*o).LeadId = randInt()
	(*o).UserId = randInt()
}

func fillRandomly_LeadForms_QuestionItem_Type(o *LeadForms_QuestionItem_Type) {
	switch randIntn(5) {
	case 0:
		*o = "input"
	case 1:
		*o = "textarea"
	case 2:
		*o = "radio"
	case 3:
		*o = "checkbox"
	case 4:
		*o = "select"
	}
}

func fillRandomly_LeadForms_QuestionItem(o *LeadForms_QuestionItem) {
	(*o).Key = randString()
	(*o).Label = new(string)
	*(*o).Label = randString()
	(*o).Options = new([]LeadForms_QuestionItemOption)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Options = make([]LeadForms_QuestionItemOption, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_LeadForms_QuestionItemOption(&(*(*o).Options)[i0])
	}
	fillRandomly_LeadForms_QuestionItem_Type(&(*o).Type)
}

func fillRandomly_LeadForms_QuestionItemOption(o *LeadForms_QuestionItemOption) {
	(*o).Key = new(string)
	*(*o).Key = randString()
	(*o).Label = randString()
}

func fillRandomly_Likes_Type(o *Likes_Type) {
	switch randIntn(13) {
	case 0:
		*o = "post"
	case 1:
		*o = "comment"
	case 2:
		*o = "photo"
	case 3:
		*o = "audio"
	case 4:
		*o = "video"
	case 5:
		*o = "note"
	case 6:
		*o = "market"
	case 7:
		*o = "photo_comment"
	case 8:
		*o = "video_comment"
	case 9:
		*o = "topic_comment"
	case 10:
		*o = "market_comment"
	case 11:
		*o = "sitepage"
	case 12:
		*o = "textpost"
	}
}

func fillRandomly_Link_TargetObject(o *Link_TargetObject) {
	(*o).ItemId = new(int)
	*(*o).ItemId = randInt()
	(*o).OwnerId = new(int)
	*(*o).OwnerId = randInt()
	(*o).Type = new(string)
	*(*o).Type = randString()
}

func fillRandomly_Market_Currency(o *Market_Currency) {
	(*o).Id = randInt()
	(*o).Name = randString()
	(*o).Title = randString()
}

func fillRandomly_Market_MarketAlbum(o *Market_MarketAlbum) {
	(*o).Count = randInt()
	(*o).Id = randInt()
	(*o).IsHidden = new(bool)
	*(*o).IsHidden = randBool()
	(*o).IsMain = new(bool)
	*(*o).IsMain = randBool()
	(*o).OwnerId = randInt()
	(*o).Photo = new(Photos_Photo)
	fillRandomly_Photos_Photo((*o).Photo)
	(*o).Title = randString()
	(*o).UpdatedTime = randInt()
}

func fillRandomly_Market_MarketCategory(o *Market_MarketCategory) {
	r := Market_MarketCategoryOld(*o)
	fillRandomly_Market_MarketCategoryOld(&r)
	*o = Market_MarketCategory(r)
}

func fillRandomly_Market_MarketCategoryNested(o *Market_MarketCategoryNested) {
	(*o).Id = randInt()
	(*o).Name = randString()
	(*o).Parent = new(Market_MarketCategoryNested)
	//fillRandomly_Market_MarketCategoryNested((*o).Parent)
}

func fillRandomly_Market_MarketCategoryOld(o *Market_MarketCategoryOld) {
	(*o).Id = randInt()
	(*o).Name = randString()
	fillRandomly_Market_Section(&(*o).Section)
}

func fillRandomly_Market_MarketCategoryTree(o *Market_MarketCategoryTree) {
	(*o).Children = new([]Market_MarketCategoryTree)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Children = make([]Market_MarketCategoryTree, l0)
	for i0 := 0; i0 < l0; i0++ {
		//fillRandomly_Market_MarketCategoryTree(&(*(*o).Children)[i0])
	}
	(*o).Id = randInt()
	(*o).Name = randString()
}

func fillRandomly_Market_MarketItem(o *Market_MarketItem) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	fillRandomly_Market_MarketItemAvailability(&(*o).Availability)
	(*o).ButtonTitle = new(string)
	*(*o).ButtonTitle = randString()
	fillRandomly_Market_MarketCategory(&(*o).Category)
	(*o).Date = new(int)
	*(*o).Date = randInt()
	(*o).Description = randString()
	(*o).ExternalId = new(string)
	*(*o).ExternalId = randString()
	(*o).Id = randInt()
	(*o).IsFavorite = new(bool)
	*(*o).IsFavorite = randBool()
	(*o).IsMainVariant = new(bool)
	*(*o).IsMainVariant = randBool()
	(*o).OwnerId = randInt()
	fillRandomly_Market_Price(&(*o).Price)
	(*o).Sku = new(string)
	*(*o).Sku = randString()
	(*o).ThumbPhoto = new(string)
	*(*o).ThumbPhoto = randString()
	(*o).Title = randString()
	(*o).Url = new(string)
	*(*o).Url = randString()
	(*o).VariantsGroupingId = new(int)
	*(*o).VariantsGroupingId = randInt()
}

func fillRandomly_Market_MarketItemAvailability(o *Market_MarketItemAvailability) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Market_MarketItemFull(o *Market_MarketItemFull) {
	fillRandomly_Market_MarketItem(&(*o).Market_MarketItem)
	(*o).AdId = new(int)
	*(*o).AdId = randInt()
	(*o).AlbumsIds = new([]int)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).AlbumsIds = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).AlbumsIds)[i0] = randInt()
	}
	(*o).CanComment = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanComment)
	(*o).CanRepost = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanRepost)
	(*o).CancelInfo = new(Base_Link)
	fillRandomly_Base_Link((*o).CancelInfo)
	(*o).Likes = new(Base_Likes)
	fillRandomly_Base_Likes((*o).Likes)
	(*o).Photos = new([]Photos_Photo)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Photos = make([]Photos_Photo, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Photos_Photo(&(*(*o).Photos)[i0])
	}
	(*o).Reposts = new(Base_RepostsInfo)
	fillRandomly_Base_RepostsInfo((*o).Reposts)
	(*o).UserAgreementInfo = new(string)
	*(*o).UserAgreementInfo = randString()
	(*o).ViewsCount = new(int)
	*(*o).ViewsCount = randInt()
	(*o).WishlistItemId = new(int)
	*(*o).WishlistItemId = randInt()
}

func fillRandomly_Market_Order(o *Market_Order) {
	(*o).Address = new(string)
	*(*o).Address = randString()
	(*o).CancelInfo = new(Base_Link)
	fillRandomly_Base_Link((*o).CancelInfo)
	(*o).Comment = new(string)
	*(*o).Comment = randString()
	(*o).Date = randInt()
	(*o).DisplayOrderId = new(string)
	*(*o).DisplayOrderId = randString()
	(*o).GroupId = randInt()
	(*o).Id = randInt()
	(*o).ItemsCount = randInt()
	(*o).MerchantComment = new(string)
	*(*o).MerchantComment = randString()
	(*o).PreviewOrderItems = new([]Market_OrderItem)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).PreviewOrderItems = make([]Market_OrderItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Market_OrderItem(&(*(*o).PreviewOrderItems)[i0])
	}
	(*o).Status = randInt()
	fillRandomly_Market_Price(&(*o).TotalPrice)
	(*o).TrackLink = new(string)
	*(*o).TrackLink = randString()
	(*o).TrackNumber = new(string)
	*(*o).TrackNumber = randString()
	(*o).UserId = randInt()
	(*o).Weight = new(int)
	*(*o).Weight = randInt()
}

func fillRandomly_Market_OrderItem(o *Market_OrderItem) {
	fillRandomly_Market_MarketItem(&(*o).Item)
	(*o).ItemId = randInt()
	(*o).OwnerId = randInt()
	(*o).Photo = new(Photos_Photo)
	fillRandomly_Photos_Photo((*o).Photo)
	fillRandomly_Market_Price(&(*o).Price)
	(*o).Quantity = randInt()
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).Variants = new([]string)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Variants = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Variants)[i0] = randString()
	}
}

func fillRandomly_Market_Price(o *Market_Price) {
	(*o).Amount = randString()
	fillRandomly_Market_Currency(&(*o).Currency)
	(*o).DiscountRate = new(int)
	*(*o).DiscountRate = randInt()
	(*o).OldAmount = new(string)
	*(*o).OldAmount = randString()
	(*o).OldAmountText = new(string)
	*(*o).OldAmountText = randString()
	(*o).Text = randString()
}

func fillRandomly_Market_Section(o *Market_Section) {
	(*o).Id = randInt()
	(*o).Name = randString()
}

func fillRandomly_Market_ServicesViewType(o *Market_ServicesViewType) {
	switch randIntn(2) {
	case 0:
		*o = 1
	case 1:
		*o = 2
	}
}

func fillRandomly_Messages_AudioMessage(o *Messages_AudioMessage) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).Duration = randInt()
	(*o).Id = randInt()
	(*o).LinkMp3 = randString()
	(*o).LinkOgg = randString()
	(*o).OwnerId = randInt()
	(*o).TranscriptError = new(int)
	*(*o).TranscriptError = randInt()
	l0 := randIntn(maxArrayLength + 1)
	(*o).Waveform = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Waveform)[i0] = randInt()
	}
}

func fillRandomly_Messages_Chat(o *Messages_Chat) {
	(*o).AdminId = randInt()
	(*o).Id = randInt()
	(*o).IsDefaultPhoto = new(bool)
	*(*o).IsDefaultPhoto = randBool()
	(*o).IsGroupChannel = new(bool)
	*(*o).IsGroupChannel = randBool()
	(*o).Kicked = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Kicked)
	(*o).Left = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Left)
	(*o).MembersCount = randInt()
	(*o).Photo100 = new(string)
	*(*o).Photo100 = randString()
	(*o).Photo200 = new(string)
	*(*o).Photo200 = randString()
	(*o).Photo50 = new(string)
	*(*o).Photo50 = randString()
	(*o).PushSettings = new(Messages_ChatPushSettings)
	fillRandomly_Messages_ChatPushSettings((*o).PushSettings)
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).Type = randString()
	l0 := randIntn(maxArrayLength + 1)
	(*o).Users = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Users)[i0] = randInt()
	}
}

func fillRandomly_Messages_ChatFull(o *Messages_ChatFull) {
	(*o).AdminId = randInt()
	(*o).Id = randInt()
	(*o).Kicked = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Kicked)
	(*o).Left = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Left)
	(*o).Photo100 = new(string)
	*(*o).Photo100 = randString()
	(*o).Photo200 = new(string)
	*(*o).Photo200 = randString()
	(*o).Photo50 = new(string)
	*(*o).Photo50 = randString()
	(*o).PushSettings = new(Messages_ChatPushSettings)
	fillRandomly_Messages_ChatPushSettings((*o).PushSettings)
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).Type = randString()
	l0 := randIntn(maxArrayLength + 1)
	(*o).Users = make([]Messages_UserXtrInvitedBy, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Messages_UserXtrInvitedBy(&((*o).Users)[i0])
	}
}

func fillRandomly_Messages_ChatPreview(o *Messages_ChatPreview) {
	(*o).AdminId = new(int)
	*(*o).AdminId = randInt()
	(*o).Button = new(Base_LinkButton)
	fillRandomly_Base_LinkButton((*o).Button)
	(*o).IsDon = new(bool)
	*(*o).IsDon = randBool()
	(*o).IsGroupChannel = new(bool)
	*(*o).IsGroupChannel = randBool()
	(*o).IsMember = new(bool)
	*(*o).IsMember = randBool()
	(*o).Joined = new(bool)
	*(*o).Joined = randBool()
	(*o).LocalId = new(int)
	*(*o).LocalId = randInt()
	(*o).Members = new([]int)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Members = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Members)[i0] = randInt()
	}
	(*o).MembersCount = new(int)
	*(*o).MembersCount = randInt()
	(*o).Photo = new(Messages_ChatSettingsPhoto)
	fillRandomly_Messages_ChatSettingsPhoto((*o).Photo)
	(*o).Title = new(string)
	*(*o).Title = randString()
}

func fillRandomly_Messages_ChatPushSettings(o *Messages_ChatPushSettings) {
	(*o).DisabledUntil = new(int)
	*(*o).DisabledUntil = randInt()
	(*o).Sound = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Sound)
}

func fillRandomly_Messages_ChatRestrictions(o *Messages_ChatRestrictions) {
	(*o).AdminsPromoteUsers = new(bool)
	*(*o).AdminsPromoteUsers = randBool()
	(*o).OnlyAdminsEditInfo = new(bool)
	*(*o).OnlyAdminsEditInfo = randBool()
	(*o).OnlyAdminsEditPin = new(bool)
	*(*o).OnlyAdminsEditPin = randBool()
	(*o).OnlyAdminsInvite = new(bool)
	*(*o).OnlyAdminsInvite = randBool()
	(*o).OnlyAdminsKick = new(bool)
	*(*o).OnlyAdminsKick = randBool()
}

func fillRandomly_Messages_ChatSettings(o *Messages_ChatSettings) {
	fillRandomly_Messages_ChatSettingsAcl(&(*o).Acl)
	l0 := randIntn(maxArrayLength + 1)
	(*o).ActiveIds = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).ActiveIds)[i0] = randInt()
	}
	(*o).AdminIds = new([]int)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).AdminIds = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).AdminIds)[i0] = randInt()
	}
	(*o).DisappearingChatLink = new(string)
	*(*o).DisappearingChatLink = randString()
	(*o).FriendsCount = new(int)
	*(*o).FriendsCount = randInt()
	(*o).IsDisappearing = new(bool)
	*(*o).IsDisappearing = randBool()
	(*o).IsGroupChannel = new(bool)
	*(*o).IsGroupChannel = randBool()
	(*o).IsService = new(bool)
	*(*o).IsService = randBool()
	(*o).MembersCount = new(int)
	*(*o).MembersCount = randInt()
	(*o).OwnerId = randInt()
	(*o).Permissions = new(Messages_ChatSettingsPermissions)
	fillRandomly_Messages_ChatSettingsPermissions((*o).Permissions)
	(*o).Photo = new(Messages_ChatSettingsPhoto)
	fillRandomly_Messages_ChatSettingsPhoto((*o).Photo)
	(*o).PinnedMessage = new(Messages_PinnedMessage)
	fillRandomly_Messages_PinnedMessage((*o).PinnedMessage)
	fillRandomly_Messages_ChatSettingsState(&(*o).State)
	(*o).Theme = new(string)
	*(*o).Theme = randString()
	(*o).Title = randString()
}

func fillRandomly_Messages_ChatSettingsAcl(o *Messages_ChatSettingsAcl) {
	(*o).CanCall = randBool()
	(*o).CanChangeInfo = randBool()
	(*o).CanChangeInviteLink = randBool()
	(*o).CanChangePin = randBool()
	(*o).CanChangeServiceType = new(bool)
	*(*o).CanChangeServiceType = randBool()
	(*o).CanCopyChat = randBool()
	(*o).CanInvite = randBool()
	(*o).CanModerate = randBool()
	(*o).CanPromoteUsers = randBool()
	(*o).CanSeeInviteLink = randBool()
	(*o).CanUseMassMentions = randBool()
}

func fillRandomly_Messages_ChatSettingsPermissions_Call(o *Messages_ChatSettingsPermissions_Call) {
	switch randIntn(3) {
	case 0:
		*o = "owner"
	case 1:
		*o = "owner_and_admins"
	case 2:
		*o = "all"
	}
}

func fillRandomly_Messages_ChatSettingsPermissions_ChangeAdmins(o *Messages_ChatSettingsPermissions_ChangeAdmins) {
	switch randIntn(2) {
	case 0:
		*o = "owner"
	case 1:
		*o = "owner_and_admins"
	}
}

func fillRandomly_Messages_ChatSettingsPermissions_ChangeInfo(o *Messages_ChatSettingsPermissions_ChangeInfo) {
	switch randIntn(3) {
	case 0:
		*o = "owner"
	case 1:
		*o = "owner_and_admins"
	case 2:
		*o = "all"
	}
}

func fillRandomly_Messages_ChatSettingsPermissions_ChangePin(o *Messages_ChatSettingsPermissions_ChangePin) {
	switch randIntn(3) {
	case 0:
		*o = "owner"
	case 1:
		*o = "owner_and_admins"
	case 2:
		*o = "all"
	}
}

func fillRandomly_Messages_ChatSettingsPermissions_Invite(o *Messages_ChatSettingsPermissions_Invite) {
	switch randIntn(3) {
	case 0:
		*o = "owner"
	case 1:
		*o = "owner_and_admins"
	case 2:
		*o = "all"
	}
}

func fillRandomly_Messages_ChatSettingsPermissions_SeeInviteLink(o *Messages_ChatSettingsPermissions_SeeInviteLink) {
	switch randIntn(3) {
	case 0:
		*o = "owner"
	case 1:
		*o = "owner_and_admins"
	case 2:
		*o = "all"
	}
}

func fillRandomly_Messages_ChatSettingsPermissions_UseMassMentions(o *Messages_ChatSettingsPermissions_UseMassMentions) {
	switch randIntn(3) {
	case 0:
		*o = "owner"
	case 1:
		*o = "owner_and_admins"
	case 2:
		*o = "all"
	}
}

func fillRandomly_Messages_ChatSettingsPermissions(o *Messages_ChatSettingsPermissions) {
	(*o).Call = new(Messages_ChatSettingsPermissions_Call)
	fillRandomly_Messages_ChatSettingsPermissions_Call((*o).Call)
	(*o).ChangeAdmins = new(Messages_ChatSettingsPermissions_ChangeAdmins)
	fillRandomly_Messages_ChatSettingsPermissions_ChangeAdmins((*o).ChangeAdmins)
	(*o).ChangeInfo = new(Messages_ChatSettingsPermissions_ChangeInfo)
	fillRandomly_Messages_ChatSettingsPermissions_ChangeInfo((*o).ChangeInfo)
	(*o).ChangePin = new(Messages_ChatSettingsPermissions_ChangePin)
	fillRandomly_Messages_ChatSettingsPermissions_ChangePin((*o).ChangePin)
	(*o).Invite = new(Messages_ChatSettingsPermissions_Invite)
	fillRandomly_Messages_ChatSettingsPermissions_Invite((*o).Invite)
	(*o).SeeInviteLink = new(Messages_ChatSettingsPermissions_SeeInviteLink)
	fillRandomly_Messages_ChatSettingsPermissions_SeeInviteLink((*o).SeeInviteLink)
	(*o).UseMassMentions = new(Messages_ChatSettingsPermissions_UseMassMentions)
	fillRandomly_Messages_ChatSettingsPermissions_UseMassMentions((*o).UseMassMentions)
}

func fillRandomly_Messages_ChatSettingsPhoto(o *Messages_ChatSettingsPhoto) {
	(*o).IsDefaultCallPhoto = new(bool)
	*(*o).IsDefaultCallPhoto = randBool()
	(*o).IsDefaultPhoto = new(bool)
	*(*o).IsDefaultPhoto = randBool()
	(*o).Photo100 = new(string)
	*(*o).Photo100 = randString()
	(*o).Photo200 = new(string)
	*(*o).Photo200 = randString()
	(*o).Photo50 = new(string)
	*(*o).Photo50 = randString()
}

func fillRandomly_Messages_ChatSettingsState(o *Messages_ChatSettingsState) {
	switch randIntn(3) {
	case 0:
		*o = "in"
	case 1:
		*o = "kicked"
	case 2:
		*o = "left"
	}
}

func fillRandomly_Messages_Conversation_SpecialServiceType(o *Messages_Conversation_SpecialServiceType) {
	switch randIntn(1) {
	case 0:
		*o = "business_notify"
	}
}

func fillRandomly_Messages_Conversation(o *Messages_Conversation) {
	(*o).CanWrite = new(Messages_ConversationCanWrite)
	fillRandomly_Messages_ConversationCanWrite((*o).CanWrite)
	(*o).ChatSettings = new(Messages_ChatSettings)
	fillRandomly_Messages_ChatSettings((*o).ChatSettings)
	(*o).CurrentKeyboard = new(Messages_Keyboard)
	fillRandomly_Messages_Keyboard((*o).CurrentKeyboard)
	(*o).Important = new(bool)
	*(*o).Important = randBool()
	(*o).InRead = randInt()
	(*o).IsMarkedUnread = new(bool)
	*(*o).IsMarkedUnread = randBool()
	(*o).LastConversationMessageId = new(int)
	*(*o).LastConversationMessageId = randInt()
	(*o).LastMessageId = randInt()
	(*o).Mentions = new([]int)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Mentions = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Mentions)[i0] = randInt()
	}
	(*o).MessageRequestData = new(Messages_MessageRequestData)
	fillRandomly_Messages_MessageRequestData((*o).MessageRequestData)
	(*o).OutRead = randInt()
	(*o).OutReadBy = new(Messages_OutReadBy)
	fillRandomly_Messages_OutReadBy((*o).OutReadBy)
	fillRandomly_Messages_ConversationPeer(&(*o).Peer)
	(*o).PushSettings = new(Messages_PushSettings)
	fillRandomly_Messages_PushSettings((*o).PushSettings)
	(*o).SortId = new(Messages_ConversationSortId)
	fillRandomly_Messages_ConversationSortId((*o).SortId)
	(*o).SpecialServiceType = new(Messages_Conversation_SpecialServiceType)
	fillRandomly_Messages_Conversation_SpecialServiceType((*o).SpecialServiceType)
	(*o).Unanswered = new(bool)
	*(*o).Unanswered = randBool()
	(*o).UnreadCount = new(int)
	*(*o).UnreadCount = randInt()
}

func fillRandomly_Messages_ConversationCanWrite(o *Messages_ConversationCanWrite) {
	(*o).Allowed = randBool()
	(*o).Reason = new(int)
	*(*o).Reason = randInt()
}

func fillRandomly_Messages_ConversationMember(o *Messages_ConversationMember) {
	(*o).CanKick = new(bool)
	*(*o).CanKick = randBool()
	(*o).InvitedBy = new(int)
	*(*o).InvitedBy = randInt()
	(*o).IsAdmin = new(bool)
	*(*o).IsAdmin = randBool()
	(*o).IsMessageRequest = new(bool)
	*(*o).IsMessageRequest = randBool()
	(*o).IsOwner = new(bool)
	*(*o).IsOwner = randBool()
	(*o).JoinDate = new(int)
	*(*o).JoinDate = randInt()
	(*o).MemberId = randInt()
	(*o).RequestDate = new(int)
	*(*o).RequestDate = randInt()
}

func fillRandomly_Messages_ConversationPeer(o *Messages_ConversationPeer) {
	(*o).Id = randInt()
	(*o).LocalId = new(int)
	*(*o).LocalId = randInt()
	fillRandomly_Messages_ConversationPeerType(&(*o).Type)
}

func fillRandomly_Messages_ConversationPeerType(o *Messages_ConversationPeerType) {
	switch randIntn(4) {
	case 0:
		*o = "chat"
	case 1:
		*o = "email"
	case 2:
		*o = "user"
	case 3:
		*o = "group"
	}
}

func fillRandomly_Messages_ConversationSortId(o *Messages_ConversationSortId) {
	(*o).MajorId = randInt()
	(*o).MinorId = randInt()
}

func fillRandomly_Messages_ConversationWithMessage(o *Messages_ConversationWithMessage) {
	fillRandomly_Messages_Conversation(&(*o).Conversation)
	(*o).LastMessage = new(Messages_Message)
	fillRandomly_Messages_Message((*o).LastMessage)
}

func fillRandomly_Messages_ForeignMessage(o *Messages_ForeignMessage) {
	(*o).Attachments = new([]Messages_MessageAttachment)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Attachments = make([]Messages_MessageAttachment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Messages_MessageAttachment(&(*(*o).Attachments)[i0])
	}
	(*o).ConversationMessageId = new(int)
	*(*o).ConversationMessageId = randInt()
	(*o).Date = randInt()
	(*o).FromId = randInt()
	(*o).FwdMessages = new([]Messages_ForeignMessage)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).FwdMessages = make([]Messages_ForeignMessage, l0)
	for i0 := 0; i0 < l0; i0++ {
		//fillRandomly_Messages_ForeignMessage(&(*(*o).FwdMessages)[i0])
	}
	(*o).Geo = new(Base_Geo)
	fillRandomly_Base_Geo((*o).Geo)
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Payload = new(string)
	*(*o).Payload = randString()
	(*o).PeerId = new(int)
	*(*o).PeerId = randInt()
	(*o).ReplyMessage = new(Messages_ForeignMessage)
	//fillRandomly_Messages_ForeignMessage((*o).ReplyMessage)
	(*o).Text = randString()
	(*o).UpdateTime = new(int)
	*(*o).UpdateTime = randInt()
	(*o).WasListened = new(bool)
	*(*o).WasListened = randBool()
}

func fillRandomly_Messages_Forward(o *Messages_Forward) {
	(*o).ConversationMessageIds = new([]int)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).ConversationMessageIds = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).ConversationMessageIds)[i0] = randInt()
	}
	(*o).IsReply = new(bool)
	*(*o).IsReply = randBool()
	(*o).MessageIds = new([]int)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).MessageIds = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).MessageIds)[i0] = randInt()
	}
	(*o).OwnerId = new(int)
	*(*o).OwnerId = randInt()
	(*o).PeerId = new(int)
	*(*o).PeerId = randInt()
}

func fillRandomly_Messages_GetConversationById(o *Messages_GetConversationById) {
	(*o).Count = randInt()
	l0 := randIntn(maxArrayLength + 1)
	(*o).Items = make([]Messages_Conversation, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Messages_Conversation(&((*o).Items)[i0])
	}
}

func fillRandomly_Messages_GetConversationByIdExtended(o *Messages_GetConversationByIdExtended) {
	fillRandomly_Messages_GetConversationById(&(*o).Messages_GetConversationById)
	(*o).Groups = new([]Groups_GroupFull)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Groups = make([]Groups_GroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Groups_GroupFull(&(*(*o).Groups)[i0])
	}
	(*o).Profiles = new([]Users_UserFull)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Profiles = make([]Users_UserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Users_UserFull(&(*(*o).Profiles)[i0])
	}
}

func fillRandomly_Messages_GetConversationMembers(o *Messages_GetConversationMembers) {
	(*o).ChatRestrictions = new(Messages_ChatRestrictions)
	fillRandomly_Messages_ChatRestrictions((*o).ChatRestrictions)
	(*o).Count = randInt()
	(*o).Groups = new([]Groups_GroupFull)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Groups = make([]Groups_GroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Groups_GroupFull(&(*(*o).Groups)[i0])
	}
	l0 = randIntn(maxArrayLength + 1)
	(*o).Items = make([]Messages_ConversationMember, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Messages_ConversationMember(&((*o).Items)[i0])
	}
	(*o).Profiles = new([]Users_UserFull)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Profiles = make([]Users_UserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Users_UserFull(&(*(*o).Profiles)[i0])
	}
}

func fillRandomly_Messages_Graffiti(o *Messages_Graffiti) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).Height = randInt()
	(*o).Id = randInt()
	(*o).OwnerId = randInt()
	(*o).Url = randString()
	(*o).Width = randInt()
}

func fillRandomly_Messages_HistoryAttachment(o *Messages_HistoryAttachment) {
	fillRandomly_Messages_HistoryMessageAttachment(&(*o).Attachment)
	(*o).ForwardLevel = new(int)
	*(*o).ForwardLevel = randInt()
	(*o).FromId = randInt()
	(*o).MessageId = randInt()
	(*o).WasListened = new(bool)
	*(*o).WasListened = randBool()
}

func fillRandomly_Messages_HistoryMessageAttachment(o *Messages_HistoryMessageAttachment) {
	(*o).Audio = new(Audio_Audio)
	fillRandomly_Audio_Audio((*o).Audio)
	(*o).AudioMessage = new(Messages_AudioMessage)
	fillRandomly_Messages_AudioMessage((*o).AudioMessage)
	(*o).Doc = new(Docs_Doc)
	fillRandomly_Docs_Doc((*o).Doc)
	(*o).Graffiti = new(Messages_Graffiti)
	fillRandomly_Messages_Graffiti((*o).Graffiti)
	(*o).Link = new(Base_Link)
	fillRandomly_Base_Link((*o).Link)
	(*o).Market = new(Market_MarketItem)
	fillRandomly_Market_MarketItem((*o).Market)
	(*o).Photo = new(Photos_Photo)
	fillRandomly_Photos_Photo((*o).Photo)
	fillRandomly_Messages_HistoryMessageAttachmentType(&(*o).Type)
	(*o).Video = new(Video_Video)
	fillRandomly_Video_Video((*o).Video)
	(*o).Wall = new(Wall_WallpostFull)
	fillRandomly_Wall_WallpostFull((*o).Wall)
}

func fillRandomly_Messages_HistoryMessageAttachmentType(o *Messages_HistoryMessageAttachmentType) {
	switch randIntn(10) {
	case 0:
		*o = "photo"
	case 1:
		*o = "video"
	case 2:
		*o = "audio"
	case 3:
		*o = "doc"
	case 4:
		*o = "link"
	case 5:
		*o = "market"
	case 6:
		*o = "wall"
	case 7:
		*o = "share"
	case 8:
		*o = "graffiti"
	case 9:
		*o = "audio_message"
	}
}

func fillRandomly_Messages_Keyboard(o *Messages_Keyboard) {
	(*o).AuthorId = new(int)
	*(*o).AuthorId = randInt()
	l0 := randIntn(maxArrayLength + 1)
	(*o).Buttons = make([][]Messages_KeyboardButton, l0)
	for i0 := 0; i0 < l0; i0++ {
		l1 := randIntn(maxArrayLength + 1)
		((*o).Buttons)[i0] = make([]Messages_KeyboardButton, l1)
		for i1 := 0; i1 < l1; i1++ {
			fillRandomly_Messages_KeyboardButton(&((*o).Buttons)[i0][i1])
		}
	}
	(*o).Inline = new(bool)
	*(*o).Inline = randBool()
	(*o).OneTime = randBool()
}

func fillRandomly_Messages_KeyboardButton_Color(o *Messages_KeyboardButton_Color) {
	switch randIntn(4) {
	case 0:
		*o = "default"
	case 1:
		*o = "positive"
	case 2:
		*o = "negative"
	case 3:
		*o = "primary"
	}
}

func fillRandomly_Messages_KeyboardButton(o *Messages_KeyboardButton) {
	fillRandomly_Messages_KeyboardButtonPropertyAction(&(*o).Action)
	(*o).Color = new(Messages_KeyboardButton_Color)
	fillRandomly_Messages_KeyboardButton_Color((*o).Color)
}

func fillRandomly_Messages_KeyboardButtonActionCallback_Type(o *Messages_KeyboardButtonActionCallback_Type) {
	switch randIntn(1) {
	case 0:
		*o = "callback"
	}
}

func fillRandomly_Messages_KeyboardButtonActionCallback(o *Messages_KeyboardButtonActionCallback) {
	(*o).Label = randString()
	(*o).Payload = new(string)
	*(*o).Payload = randString()
	fillRandomly_Messages_KeyboardButtonActionCallback_Type(&(*o).Type)
}

func fillRandomly_Messages_KeyboardButtonActionLocation_Type(o *Messages_KeyboardButtonActionLocation_Type) {
	switch randIntn(1) {
	case 0:
		*o = "location"
	}
}

func fillRandomly_Messages_KeyboardButtonActionLocation(o *Messages_KeyboardButtonActionLocation) {
	(*o).Payload = new(string)
	*(*o).Payload = randString()
	fillRandomly_Messages_KeyboardButtonActionLocation_Type(&(*o).Type)
}

func fillRandomly_Messages_KeyboardButtonActionOpenApp_Type(o *Messages_KeyboardButtonActionOpenApp_Type) {
	switch randIntn(1) {
	case 0:
		*o = "open_app"
	}
}

func fillRandomly_Messages_KeyboardButtonActionOpenApp(o *Messages_KeyboardButtonActionOpenApp) {
	(*o).AppId = randInt()
	(*o).Hash = new(string)
	*(*o).Hash = randString()
	(*o).Label = randString()
	(*o).OwnerId = randInt()
	(*o).Payload = new(string)
	*(*o).Payload = randString()
	fillRandomly_Messages_KeyboardButtonActionOpenApp_Type(&(*o).Type)
}

func fillRandomly_Messages_KeyboardButtonActionOpenLink_Type(o *Messages_KeyboardButtonActionOpenLink_Type) {
	switch randIntn(1) {
	case 0:
		*o = "open_link"
	}
}

func fillRandomly_Messages_KeyboardButtonActionOpenLink(o *Messages_KeyboardButtonActionOpenLink) {
	(*o).Label = randString()
	(*o).Link = randString()
	(*o).Payload = new(string)
	*(*o).Payload = randString()
	fillRandomly_Messages_KeyboardButtonActionOpenLink_Type(&(*o).Type)
}

func fillRandomly_Messages_KeyboardButtonActionOpenPhoto_Type(o *Messages_KeyboardButtonActionOpenPhoto_Type) {
	switch randIntn(1) {
	case 0:
		*o = "open_photo"
	}
}

func fillRandomly_Messages_KeyboardButtonActionOpenPhoto(o *Messages_KeyboardButtonActionOpenPhoto) {
	fillRandomly_Messages_KeyboardButtonActionOpenPhoto_Type(&(*o).Type)
}

func fillRandomly_Messages_KeyboardButtonActionText_Type(o *Messages_KeyboardButtonActionText_Type) {
	switch randIntn(1) {
	case 0:
		*o = "text"
	}
}

func fillRandomly_Messages_KeyboardButtonActionText(o *Messages_KeyboardButtonActionText) {
	(*o).Label = randString()
	(*o).Payload = new(string)
	*(*o).Payload = randString()
	fillRandomly_Messages_KeyboardButtonActionText_Type(&(*o).Type)
}

func fillRandomly_Messages_KeyboardButtonActionVkpay_Type(o *Messages_KeyboardButtonActionVkpay_Type) {
	switch randIntn(1) {
	case 0:
		*o = "vkpay"
	}
}

func fillRandomly_Messages_KeyboardButtonActionVkpay(o *Messages_KeyboardButtonActionVkpay) {
	(*o).Hash = randString()
	(*o).Payload = new(string)
	*(*o).Payload = randString()
	fillRandomly_Messages_KeyboardButtonActionVkpay_Type(&(*o).Type)
}

func fillRandomly_Messages_KeyboardButtonPropertyAction(o *Messages_KeyboardButtonPropertyAction) {
	var rawJSON []byte
	switch randIntn(7) {
	case 0:
		r := new(Messages_KeyboardButtonActionLocation)
		fillRandomly_Messages_KeyboardButtonActionLocation(r)
		rawJSON, _ = json.Marshal(*r)
	case 1:
		r := new(Messages_KeyboardButtonActionOpenApp)
		fillRandomly_Messages_KeyboardButtonActionOpenApp(r)
		rawJSON, _ = json.Marshal(*r)
	case 2:
		r := new(Messages_KeyboardButtonActionOpenLink)
		fillRandomly_Messages_KeyboardButtonActionOpenLink(r)
		rawJSON, _ = json.Marshal(*r)
	case 3:
		r := new(Messages_KeyboardButtonActionOpenPhoto)
		fillRandomly_Messages_KeyboardButtonActionOpenPhoto(r)
		rawJSON, _ = json.Marshal(*r)
	case 4:
		r := new(Messages_KeyboardButtonActionText)
		fillRandomly_Messages_KeyboardButtonActionText(r)
		rawJSON, _ = json.Marshal(*r)
	case 5:
		r := new(Messages_KeyboardButtonActionCallback)
		fillRandomly_Messages_KeyboardButtonActionCallback(r)
		rawJSON, _ = json.Marshal(*r)
	case 6:
		r := new(Messages_KeyboardButtonActionVkpay)
		fillRandomly_Messages_KeyboardButtonActionVkpay(r)
		rawJSON, _ = json.Marshal(*r)
	}
	o.raw = rawJSON
}

func fillRandomly_Messages_LastActivity(o *Messages_LastActivity) {
	fillRandomly_Base_BoolInt(&(*o).Online)
	(*o).Time = randInt()
}

func fillRandomly_Messages_LongpollMessages(o *Messages_LongpollMessages) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).Items = new([]Messages_Message)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Items = make([]Messages_Message, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Messages_Message(&(*(*o).Items)[i0])
	}
}

func fillRandomly_Messages_LongpollParams(o *Messages_LongpollParams) {
	(*o).Key = randString()
	(*o).Pts = new(int)
	*(*o).Pts = randInt()
	(*o).Server = randString()
	(*o).Ts = randInt()
}

func fillRandomly_Messages_Message(o *Messages_Message) {
	(*o).Action = new(Messages_MessageAction)
	fillRandomly_Messages_MessageAction((*o).Action)
	(*o).AdminAuthorId = new(int)
	*(*o).AdminAuthorId = randInt()
	(*o).Attachments = new([]Messages_MessageAttachment)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Attachments = make([]Messages_MessageAttachment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Messages_MessageAttachment(&(*(*o).Attachments)[i0])
	}
	(*o).ConversationMessageId = new(int)
	*(*o).ConversationMessageId = randInt()
	(*o).Date = randInt()
	(*o).Deleted = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Deleted)
	(*o).FromId = randInt()
	(*o).FwdMessages = new([]Messages_ForeignMessage)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).FwdMessages = make([]Messages_ForeignMessage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Messages_ForeignMessage(&(*(*o).FwdMessages)[i0])
	}
	(*o).Geo = new(Base_Geo)
	fillRandomly_Base_Geo((*o).Geo)
	(*o).Id = randInt()
	(*o).Important = new(bool)
	*(*o).Important = randBool()
	(*o).IsCropped = new(bool)
	*(*o).IsCropped = randBool()
	(*o).IsHidden = new(bool)
	*(*o).IsHidden = randBool()
	(*o).IsSilent = new(bool)
	*(*o).IsSilent = randBool()
	(*o).Keyboard = new(Messages_Keyboard)
	fillRandomly_Messages_Keyboard((*o).Keyboard)
	(*o).MembersCount = new(int)
	*(*o).MembersCount = randInt()
	fillRandomly_Base_BoolInt(&(*o).Out)
	(*o).Payload = new(string)
	*(*o).Payload = randString()
	(*o).PeerId = randInt()
	(*o).PinnedAt = new(int)
	*(*o).PinnedAt = randInt()
	(*o).RandomId = new(int)
	*(*o).RandomId = randInt()
	(*o).Ref = new(string)
	*(*o).Ref = randString()
	(*o).RefSource = new(string)
	*(*o).RefSource = randString()
	(*o).ReplyMessage = new(Messages_ForeignMessage)
	fillRandomly_Messages_ForeignMessage((*o).ReplyMessage)
	(*o).Text = randString()
	(*o).UpdateTime = new(int)
	*(*o).UpdateTime = randInt()
	(*o).WasListened = new(bool)
	*(*o).WasListened = randBool()
}

func fillRandomly_Messages_MessageAction(o *Messages_MessageAction) {
	(*o).ConversationMessageId = new(int)
	*(*o).ConversationMessageId = randInt()
	(*o).Email = new(string)
	*(*o).Email = randString()
	(*o).MemberId = new(int)
	*(*o).MemberId = randInt()
	(*o).Message = new(string)
	*(*o).Message = randString()
	(*o).Photo = new(Messages_MessageActionPhoto)
	fillRandomly_Messages_MessageActionPhoto((*o).Photo)
	(*o).Text = new(string)
	*(*o).Text = randString()
	fillRandomly_Messages_MessageActionStatus(&(*o).Type)
}

func fillRandomly_Messages_MessageActionPhoto(o *Messages_MessageActionPhoto) {
	(*o).Photo100 = randString()
	(*o).Photo200 = randString()
	(*o).Photo50 = randString()
}

func fillRandomly_Messages_MessageActionStatus(o *Messages_MessageActionStatus) {
	switch randIntn(11) {
	case 0:
		*o = "chat_photo_update"
	case 1:
		*o = "chat_photo_remove"
	case 2:
		*o = "chat_create"
	case 3:
		*o = "chat_title_update"
	case 4:
		*o = "chat_invite_user"
	case 5:
		*o = "chat_kick_user"
	case 6:
		*o = "chat_pin_message"
	case 7:
		*o = "chat_unpin_message"
	case 8:
		*o = "chat_invite_user_by_link"
	case 9:
		*o = "chat_invite_user_by_message_request"
	case 10:
		*o = "chat_screenshot"
	}
}

func fillRandomly_Messages_MessageAttachment(o *Messages_MessageAttachment) {
	(*o).Audio = new(Audio_Audio)
	fillRandomly_Audio_Audio((*o).Audio)
	(*o).AudioMessage = new(Messages_AudioMessage)
	fillRandomly_Messages_AudioMessage((*o).AudioMessage)
	(*o).Call = new(Calls_Call)
	fillRandomly_Calls_Call((*o).Call)
	(*o).Doc = new(Docs_Doc)
	fillRandomly_Docs_Doc((*o).Doc)
	(*o).Gift = new(Gifts_Layout)
	fillRandomly_Gifts_Layout((*o).Gift)
	(*o).Graffiti = new(Messages_Graffiti)
	fillRandomly_Messages_Graffiti((*o).Graffiti)
	(*o).Market = new(Market_MarketItem)
	fillRandomly_Market_MarketItem((*o).Market)
	(*o).MarketMarketAlbum = new(Market_MarketAlbum)
	fillRandomly_Market_MarketAlbum((*o).MarketMarketAlbum)
	(*o).Photo = new(Photos_Photo)
	fillRandomly_Photos_Photo((*o).Photo)
	(*o).Poll = new(Polls_Poll)
	fillRandomly_Polls_Poll((*o).Poll)
	(*o).Sticker = new(Base_Sticker)
	fillRandomly_Base_Sticker((*o).Sticker)
	(*o).Story = new(Stories_Story)
	fillRandomly_Stories_Story((*o).Story)
	fillRandomly_Messages_MessageAttachmentType(&(*o).Type)
	(*o).Video = new(Video_VideoFull)
	fillRandomly_Video_VideoFull((*o).Video)
	(*o).WallReply = new(Wall_WallComment)
	fillRandomly_Wall_WallComment((*o).WallReply)
}

func fillRandomly_Messages_MessageAttachmentType(o *Messages_MessageAttachmentType) {
	switch randIntn(16) {
	case 0:
		*o = "photo"
	case 1:
		*o = "audio"
	case 2:
		*o = "video"
	case 3:
		*o = "doc"
	case 4:
		*o = "link"
	case 5:
		*o = "market"
	case 6:
		*o = "market_album"
	case 7:
		*o = "gift"
	case 8:
		*o = "sticker"
	case 9:
		*o = "wall"
	case 10:
		*o = "wall_reply"
	case 11:
		*o = "article"
	case 12:
		*o = "poll"
	case 13:
		*o = "call"
	case 14:
		*o = "graffiti"
	case 15:
		*o = "audio_message"
	}
}

func fillRandomly_Messages_MessageRequestData(o *Messages_MessageRequestData) {
	(*o).InviterId = new(int)
	*(*o).InviterId = randInt()
	(*o).RequestDate = new(int)
	*(*o).RequestDate = randInt()
	(*o).Status = new(string)
	*(*o).Status = randString()
}

func fillRandomly_Messages_MessagesArray(o *Messages_MessagesArray) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).Items = new([]Messages_Message)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Items = make([]Messages_Message, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Messages_Message(&(*(*o).Items)[i0])
	}
}

func fillRandomly_Messages_OutReadBy(o *Messages_OutReadBy) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).MemberIds = new([]int)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).MemberIds = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).MemberIds)[i0] = randInt()
	}
}

func fillRandomly_Messages_PinnedMessage(o *Messages_PinnedMessage) {
	(*o).Attachments = new([]Messages_MessageAttachment)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Attachments = make([]Messages_MessageAttachment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Messages_MessageAttachment(&(*(*o).Attachments)[i0])
	}
	(*o).ConversationMessageId = new(int)
	*(*o).ConversationMessageId = randInt()
	(*o).Date = randInt()
	(*o).FromId = randInt()
	(*o).FwdMessages = new([]Messages_ForeignMessage)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).FwdMessages = make([]Messages_ForeignMessage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Messages_ForeignMessage(&(*(*o).FwdMessages)[i0])
	}
	(*o).Geo = new(Base_Geo)
	fillRandomly_Base_Geo((*o).Geo)
	(*o).Id = randInt()
	(*o).Keyboard = new(Messages_Keyboard)
	fillRandomly_Messages_Keyboard((*o).Keyboard)
	(*o).PeerId = randInt()
	(*o).ReplyMessage = new(Messages_ForeignMessage)
	fillRandomly_Messages_ForeignMessage((*o).ReplyMessage)
	(*o).Text = randString()
}

func fillRandomly_Messages_PushSettings(o *Messages_PushSettings) {
	(*o).DisabledForever = randBool()
	(*o).DisabledMassMentions = new(bool)
	*(*o).DisabledMassMentions = randBool()
	(*o).DisabledMentions = new(bool)
	*(*o).DisabledMentions = randBool()
	(*o).DisabledUntil = new(int)
	*(*o).DisabledUntil = randInt()
	(*o).NoSound = randBool()
}

func fillRandomly_Messages_SendUserIdsResponseItem(o *Messages_SendUserIdsResponseItem) {
	(*o).ConversationMessageId = new(int)
	*(*o).ConversationMessageId = randInt()
	(*o).Error = new(Base_MessageError)
	fillRandomly_Base_MessageError((*o).Error)
	(*o).MessageId = randInt()
	(*o).PeerId = randInt()
}

func fillRandomly_Messages_TemplateActionTypeNames(o *Messages_TemplateActionTypeNames) {
	switch randIntn(10) {
	case 0:
		*o = "text"
	case 1:
		*o = "start"
	case 2:
		*o = "location"
	case 3:
		*o = "vkpay"
	case 4:
		*o = "open_app"
	case 5:
		*o = "open_photo"
	case 6:
		*o = "open_link"
	case 7:
		*o = "callback"
	case 8:
		*o = "intent_subscribe"
	case 9:
		*o = "intent_unsubscribe"
	}
}

func fillRandomly_Messages_UserXtrInvitedBy(o *Messages_UserXtrInvitedBy) {
	fillRandomly_Users_UserXtrType(&(*o).Users_UserXtrType)
	(*o).InvitedBy = new(int)
	*(*o).InvitedBy = randInt()
}

func fillRandomly_Newsfeed_CommentsFilters(o *Newsfeed_CommentsFilters) {
	switch randIntn(5) {
	case 0:
		*o = "post"
	case 1:
		*o = "photo"
	case 2:
		*o = "video"
	case 3:
		*o = "topic"
	case 4:
		*o = "note"
	}
}

func fillRandomly_Newsfeed_IgnoreItemType(o *Newsfeed_IgnoreItemType) {
	switch randIntn(6) {
	case 0:
		*o = "wall"
	case 1:
		*o = "tag"
	case 2:
		*o = "profilephoto"
	case 3:
		*o = "video"
	case 4:
		*o = "photo"
	case 5:
		*o = "audio"
	}
}

func fillRandomly_Newsfeed_ItemAudio(o *Newsfeed_ItemAudio) {
	fillRandomly_Newsfeed_ItemBase(&(*o).Newsfeed_ItemBase)
	(*o).Audio = new(Newsfeed_ItemAudioAudio)
	fillRandomly_Newsfeed_ItemAudioAudio((*o).Audio)
	(*o).PostId = new(int)
	*(*o).PostId = randInt()
}

func fillRandomly_Newsfeed_ItemAudioAudio(o *Newsfeed_ItemAudioAudio) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).Items = new([]Audio_Audio)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Items = make([]Audio_Audio, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Audio_Audio(&(*(*o).Items)[i0])
	}
}

func fillRandomly_Newsfeed_ItemBase(o *Newsfeed_ItemBase) {
	(*o).Date = randInt()
	(*o).SourceId = randInt()
	fillRandomly_Newsfeed_NewsfeedItemType(&(*o).Type)
}

func fillRandomly_Newsfeed_ItemDigest_Template(o *Newsfeed_ItemDigest_Template) {
	switch randIntn(3) {
	case 0:
		*o = "list"
	case 1:
		*o = "grid"
	case 2:
		*o = "single"
	}
}

func fillRandomly_Newsfeed_ItemDigest(o *Newsfeed_ItemDigest) {
	fillRandomly_Newsfeed_ItemBase(&(*o).Newsfeed_ItemBase)
	(*o).FeedId = new(string)
	*(*o).FeedId = randString()
	(*o).Footer = new(Newsfeed_ItemDigestFooter)
	fillRandomly_Newsfeed_ItemDigestFooter((*o).Footer)
	(*o).Header = new(Newsfeed_ItemDigestHeader)
	fillRandomly_Newsfeed_ItemDigestHeader((*o).Header)
	(*o).Items = new([]Newsfeed_ItemDigestItem)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Items = make([]Newsfeed_ItemDigestItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Newsfeed_ItemDigestItem(&(*(*o).Items)[i0])
	}
	(*o).MainPostIds = new([]string)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).MainPostIds = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).MainPostIds)[i0] = randString()
	}
	(*o).Template = new(Newsfeed_ItemDigest_Template)
	fillRandomly_Newsfeed_ItemDigest_Template((*o).Template)
	(*o).TrackCode = new(string)
	*(*o).TrackCode = randString()
}

func fillRandomly_Newsfeed_ItemDigestButton_Style(o *Newsfeed_ItemDigestButton_Style) {
	switch randIntn(1) {
	case 0:
		*o = "primary"
	}
}

func fillRandomly_Newsfeed_ItemDigestButton(o *Newsfeed_ItemDigestButton) {
	(*o).Style = new(Newsfeed_ItemDigestButton_Style)
	fillRandomly_Newsfeed_ItemDigestButton_Style((*o).Style)
	(*o).Title = randString()
}

func fillRandomly_Newsfeed_ItemDigestFooter_Style(o *Newsfeed_ItemDigestFooter_Style) {
	switch randIntn(2) {
	case 0:
		*o = "text"
	case 1:
		*o = "button"
	}
}

func fillRandomly_Newsfeed_ItemDigestFooter(o *Newsfeed_ItemDigestFooter) {
	(*o).Button = new(Newsfeed_ItemDigestButton)
	fillRandomly_Newsfeed_ItemDigestButton((*o).Button)
	fillRandomly_Newsfeed_ItemDigestFooter_Style(&(*o).Style)
	(*o).Text = randString()
}

func fillRandomly_Newsfeed_ItemDigestFullItem_Style(o *Newsfeed_ItemDigestFullItem_Style) {
	switch randIntn(3) {
	case 0:
		*o = "default"
	case 1:
		*o = "inversed"
	case 2:
		*o = "spotlight"
	}
}

func fillRandomly_Newsfeed_ItemDigestFullItem(o *Newsfeed_ItemDigestFullItem) {
	(*o).Attachment = new(Wall_WallpostAttachment)
	fillRandomly_Wall_WallpostAttachment((*o).Attachment)
	(*o).AttachmentIndex = new(int)
	*(*o).AttachmentIndex = randInt()
	fillRandomly_Wall_Wallpost(&(*o).Post)
	(*o).SourceName = new(string)
	*(*o).SourceName = randString()
	(*o).Style = new(Newsfeed_ItemDigestFullItem_Style)
	fillRandomly_Newsfeed_ItemDigestFullItem_Style((*o).Style)
	(*o).Text = new(string)
	*(*o).Text = randString()
}

func fillRandomly_Newsfeed_ItemDigestHeader_Style(o *Newsfeed_ItemDigestHeader_Style) {
	switch randIntn(2) {
	case 0:
		*o = "singleline"
	case 1:
		*o = "multiline"
	}
}

func fillRandomly_Newsfeed_ItemDigestHeader(o *Newsfeed_ItemDigestHeader) {
	(*o).Button = new(Newsfeed_ItemDigestButton)
	fillRandomly_Newsfeed_ItemDigestButton((*o).Button)
	fillRandomly_Newsfeed_ItemDigestHeader_Style(&(*o).Style)
	(*o).Subtitle = new(string)
	*(*o).Subtitle = randString()
	(*o).Title = randString()
}

func fillRandomly_Newsfeed_ItemDigestItem(o *Newsfeed_ItemDigestItem) {
	r := Wall_Wallpost(*o)
	fillRandomly_Wall_Wallpost(&r)
	*o = Newsfeed_ItemDigestItem(r)
}

func fillRandomly_Newsfeed_ItemFriend(o *Newsfeed_ItemFriend) {
	fillRandomly_Newsfeed_ItemBase(&(*o).Newsfeed_ItemBase)
	(*o).Friends = new(Newsfeed_ItemFriendFriends)
	fillRandomly_Newsfeed_ItemFriendFriends((*o).Friends)
}

func fillRandomly_Newsfeed_ItemFriendFriends(o *Newsfeed_ItemFriendFriends) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).Items = new([]Base_UserId)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Items = make([]Base_UserId, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Base_UserId(&(*(*o).Items)[i0])
	}
}

func fillRandomly_Newsfeed_ItemHolidayRecommendationsBlockHeader(o *Newsfeed_ItemHolidayRecommendationsBlockHeader) {
	(*o).Action = new(Base_LinkButtonAction)
	fillRandomly_Base_LinkButtonAction((*o).Action)
	(*o).Image = new([]Base_Image)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Image = make([]Base_Image, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Base_Image(&(*(*o).Image)[i0])
	}
	(*o).Subtitle = new(string)
	*(*o).Subtitle = randString()
	(*o).Title = new(string)
	*(*o).Title = randString()
}

func fillRandomly_Newsfeed_ItemPhoto(o *Newsfeed_ItemPhoto) {
	fillRandomly_Wall_CarouselBase(&(*o).Wall_CarouselBase)
	fillRandomly_Newsfeed_ItemBase(&(*o).Newsfeed_ItemBase)
	(*o).Photos = new(Newsfeed_ItemPhotoPhotos)
	fillRandomly_Newsfeed_ItemPhotoPhotos((*o).Photos)
	(*o).PostId = new(int)
	*(*o).PostId = randInt()
}

func fillRandomly_Newsfeed_ItemPhotoPhotos(o *Newsfeed_ItemPhotoPhotos) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).Items = new([]Newsfeed_NewsfeedPhoto)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Items = make([]Newsfeed_NewsfeedPhoto, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Newsfeed_NewsfeedPhoto(&(*(*o).Items)[i0])
	}
}

func fillRandomly_Newsfeed_ItemPhotoTag(o *Newsfeed_ItemPhotoTag) {
	fillRandomly_Wall_CarouselBase(&(*o).Wall_CarouselBase)
	fillRandomly_Newsfeed_ItemBase(&(*o).Newsfeed_ItemBase)
	(*o).PhotoTags = new(Newsfeed_ItemPhotoTagPhotoTags)
	fillRandomly_Newsfeed_ItemPhotoTagPhotoTags((*o).PhotoTags)
	(*o).PostId = new(int)
	*(*o).PostId = randInt()
}

func fillRandomly_Newsfeed_ItemPhotoTagPhotoTags(o *Newsfeed_ItemPhotoTagPhotoTags) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).Items = new([]Newsfeed_NewsfeedPhoto)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Items = make([]Newsfeed_NewsfeedPhoto, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Newsfeed_NewsfeedPhoto(&(*(*o).Items)[i0])
	}
}

func fillRandomly_Newsfeed_ItemPromoButton(o *Newsfeed_ItemPromoButton) {
	fillRandomly_Newsfeed_ItemBase(&(*o).Newsfeed_ItemBase)
	(*o).Action = new(Newsfeed_ItemPromoButtonAction)
	fillRandomly_Newsfeed_ItemPromoButtonAction((*o).Action)
	(*o).Images = new([]Newsfeed_ItemPromoButtonImage)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Images = make([]Newsfeed_ItemPromoButtonImage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Newsfeed_ItemPromoButtonImage(&(*(*o).Images)[i0])
	}
	(*o).Text = new(string)
	*(*o).Text = randString()
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).TrackCode = new(string)
	*(*o).TrackCode = randString()
}

func fillRandomly_Newsfeed_ItemPromoButtonAction(o *Newsfeed_ItemPromoButtonAction) {
	(*o).Target = new(string)
	*(*o).Target = randString()
	(*o).Type = new(string)
	*(*o).Type = randString()
	(*o).Url = new(string)
	*(*o).Url = randString()
}

func fillRandomly_Newsfeed_ItemPromoButtonImage(o *Newsfeed_ItemPromoButtonImage) {
	(*o).Height = new(int)
	*(*o).Height = randInt()
	(*o).Url = new(string)
	*(*o).Url = randString()
	(*o).Width = new(int)
	*(*o).Width = randInt()
}

func fillRandomly_Newsfeed_ItemTopic(o *Newsfeed_ItemTopic) {
	fillRandomly_Newsfeed_ItemBase(&(*o).Newsfeed_ItemBase)
	(*o).Comments = new(Base_CommentsInfo)
	fillRandomly_Base_CommentsInfo((*o).Comments)
	(*o).Likes = new(Base_LikesInfo)
	fillRandomly_Base_LikesInfo((*o).Likes)
	(*o).PostId = randInt()
	(*o).Text = randString()
}

func fillRandomly_Newsfeed_ItemVideo(o *Newsfeed_ItemVideo) {
	fillRandomly_Wall_CarouselBase(&(*o).Wall_CarouselBase)
	fillRandomly_Newsfeed_ItemBase(&(*o).Newsfeed_ItemBase)
	(*o).Video = new(Newsfeed_ItemVideoVideo)
	fillRandomly_Newsfeed_ItemVideoVideo((*o).Video)
}

func fillRandomly_Newsfeed_ItemVideoVideo(o *Newsfeed_ItemVideoVideo) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).Items = new([]Video_Video)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Items = make([]Video_Video, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Video_Video(&(*(*o).Items)[i0])
	}
}

func fillRandomly_Newsfeed_ItemWallpost(o *Newsfeed_ItemWallpost) {
	fillRandomly_Wall_CarouselBase(&(*o).Wall_CarouselBase)
	fillRandomly_Newsfeed_ItemBase(&(*o).Newsfeed_ItemBase)
	fillRandomly_Wall_WallpostFull(&(*o).Wall_WallpostFull)
	(*o).Feedback = new(Newsfeed_ItemWallpostFeedback)
	fillRandomly_Newsfeed_ItemWallpostFeedback((*o).Feedback)
}

func fillRandomly_Newsfeed_ItemWallpostFeedback(o *Newsfeed_ItemWallpostFeedback) {
	(*o).Answers = new([]Newsfeed_ItemWallpostFeedbackAnswer)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Answers = make([]Newsfeed_ItemWallpostFeedbackAnswer, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Newsfeed_ItemWallpostFeedbackAnswer(&(*(*o).Answers)[i0])
	}
	(*o).Gratitude = new(string)
	*(*o).Gratitude = randString()
	(*o).Question = randString()
	(*o).StarsCount = new(int)
	*(*o).StarsCount = randInt()
	fillRandomly_Newsfeed_ItemWallpostFeedbackType(&(*o).Type)
}

func fillRandomly_Newsfeed_ItemWallpostFeedbackAnswer(o *Newsfeed_ItemWallpostFeedbackAnswer) {
	(*o).Id = randString()
	(*o).Title = randString()
}

func fillRandomly_Newsfeed_ItemWallpostFeedbackType(o *Newsfeed_ItemWallpostFeedbackType) {
	switch randIntn(2) {
	case 0:
		*o = "buttons"
	case 1:
		*o = "stars"
	}
}

func fillRandomly_Newsfeed_List(o *Newsfeed_List) {
	(*o).Id = randInt()
	(*o).Title = randString()
}

func fillRandomly_Newsfeed_ListFull(o *Newsfeed_ListFull) {
	fillRandomly_Newsfeed_List(&(*o).Newsfeed_List)
	(*o).NoReposts = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).NoReposts)
	(*o).SourceIds = new([]int)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).SourceIds = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).SourceIds)[i0] = randInt()
	}
}

func fillRandomly_Newsfeed_NewsfeedItem(o *Newsfeed_NewsfeedItem) {
	var rawJSON []byte
	switch randIntn(9) {
	case 0:
		r := new(Newsfeed_ItemWallpost)
		fillRandomly_Newsfeed_ItemWallpost(r)
		rawJSON, _ = json.Marshal(*r)
	case 1:
		r := new(Newsfeed_ItemPhoto)
		fillRandomly_Newsfeed_ItemPhoto(r)
		rawJSON, _ = json.Marshal(*r)
	case 2:
		r := new(Newsfeed_ItemPhotoTag)
		fillRandomly_Newsfeed_ItemPhotoTag(r)
		rawJSON, _ = json.Marshal(*r)
	case 3:
		r := new(Newsfeed_ItemFriend)
		fillRandomly_Newsfeed_ItemFriend(r)
		rawJSON, _ = json.Marshal(*r)
	case 4:
		r := new(Newsfeed_ItemAudio)
		fillRandomly_Newsfeed_ItemAudio(r)
		rawJSON, _ = json.Marshal(*r)
	case 5:
		r := new(Newsfeed_ItemVideo)
		fillRandomly_Newsfeed_ItemVideo(r)
		rawJSON, _ = json.Marshal(*r)
	case 6:
		r := new(Newsfeed_ItemTopic)
		fillRandomly_Newsfeed_ItemTopic(r)
		rawJSON, _ = json.Marshal(*r)
	case 7:
		r := new(Newsfeed_ItemDigest)
		fillRandomly_Newsfeed_ItemDigest(r)
		rawJSON, _ = json.Marshal(*r)
	case 8:
		r := new(Newsfeed_ItemPromoButton)
		fillRandomly_Newsfeed_ItemPromoButton(r)
		rawJSON, _ = json.Marshal(*r)
	}
	o.raw = rawJSON
}

func fillRandomly_Newsfeed_NewsfeedItemType(o *Newsfeed_NewsfeedItemType) {
	switch randIntn(13) {
	case 0:
		*o = "post"
	case 1:
		*o = "photo"
	case 2:
		*o = "photo_tag"
	case 3:
		*o = "wall_photo"
	case 4:
		*o = "friend"
	case 5:
		*o = "audio"
	case 6:
		*o = "video"
	case 7:
		*o = "topic"
	case 8:
		*o = "digest"
	case 9:
		*o = "stories"
	case 10:
		*o = "note"
	case 11:
		*o = "audio_playlist"
	case 12:
		*o = "clip"
	}
}

func fillRandomly_Newsfeed_NewsfeedPhoto(o *Newsfeed_NewsfeedPhoto) {
	fillRandomly_Photos_Photo(&(*o).Photos_Photo)
	(*o).CanRepost = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanRepost)
	(*o).Comments = new(Base_ObjectCount)
	fillRandomly_Base_ObjectCount((*o).Comments)
	(*o).Likes = new(Base_Likes)
	fillRandomly_Base_Likes((*o).Likes)
}

func fillRandomly_Notes_Note(o *Notes_Note) {
	(*o).CanComment = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanComment)
	(*o).Comments = randInt()
	(*o).Date = randInt()
	(*o).Id = randInt()
	(*o).OwnerId = randInt()
	(*o).PrivacyComment = new([]string)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).PrivacyComment = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).PrivacyComment)[i0] = randString()
	}
	(*o).PrivacyView = new([]string)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).PrivacyView = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).PrivacyView)[i0] = randString()
	}
	(*o).ReadComments = new(int)
	*(*o).ReadComments = randInt()
	(*o).Text = new(string)
	*(*o).Text = randString()
	(*o).TextWiki = new(string)
	*(*o).TextWiki = randString()
	(*o).Title = randString()
	(*o).ViewUrl = randString()
}

func fillRandomly_Notes_NoteComment(o *Notes_NoteComment) {
	(*o).Date = randInt()
	(*o).Id = randInt()
	(*o).Message = randString()
	(*o).Nid = randInt()
	(*o).Oid = randInt()
	(*o).ReplyTo = new(int)
	*(*o).ReplyTo = randInt()
	(*o).Uid = randInt()
}

func fillRandomly_Notifications_Feedback(o *Notifications_Feedback) {
	(*o).Attachments = new([]Wall_WallpostAttachment)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Attachments = make([]Wall_WallpostAttachment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Wall_WallpostAttachment(&(*(*o).Attachments)[i0])
	}
	(*o).FromId = new(int)
	*(*o).FromId = randInt()
	(*o).Geo = new(Base_Geo)
	fillRandomly_Base_Geo((*o).Geo)
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Likes = new(Base_LikesInfo)
	fillRandomly_Base_LikesInfo((*o).Likes)
	(*o).Text = new(string)
	*(*o).Text = randString()
	(*o).ToId = new(int)
	*(*o).ToId = randInt()
}

func fillRandomly_Notifications_Notification(o *Notifications_Notification) {
	(*o).Date = new(int)
	*(*o).Date = randInt()
	(*o).Feedback = new(Notifications_Feedback)
	fillRandomly_Notifications_Feedback((*o).Feedback)
	(*o).Parent = new(Notifications_Notification)
	//fillRandomly_Notifications_Notification((*o).Parent)
	(*o).Reply = new(Notifications_Reply)
	fillRandomly_Notifications_Reply((*o).Reply)
	(*o).Type = new(string)
	*(*o).Type = randString()
}

func fillRandomly_Notifications_NotificationItem(o *Notifications_NotificationItem) {
	r := Notifications_Notification(*o)
	fillRandomly_Notifications_Notification(&r)
	*o = Notifications_NotificationItem(r)
}

func fillRandomly_Notifications_NotificationParent(o *Notifications_NotificationParent) {
	fillRandomly_Wall_WallpostToId(&(*o).Wall_WallpostToId)
	fillRandomly_Photos_Photo(&(*o).Photos_Photo)
	fillRandomly_Board_Topic(&(*o).Board_Topic)
	fillRandomly_Video_Video(&(*o).Video_Video)
	fillRandomly_Notifications_NotificationsComment(&(*o).Notifications_NotificationsComment)
}

func fillRandomly_Notifications_NotificationsComment(o *Notifications_NotificationsComment) {
	(*o).Date = new(int)
	*(*o).Date = randInt()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).OwnerId = new(int)
	*(*o).OwnerId = randInt()
	(*o).Photo = new(Photos_Photo)
	fillRandomly_Photos_Photo((*o).Photo)
	(*o).Post = new(Wall_Wallpost)
	fillRandomly_Wall_Wallpost((*o).Post)
	(*o).Text = new(string)
	*(*o).Text = randString()
	(*o).Topic = new(Board_Topic)
	fillRandomly_Board_Topic((*o).Topic)
	(*o).Video = new(Video_Video)
	fillRandomly_Video_Video((*o).Video)
}

func fillRandomly_Notifications_Reply(o *Notifications_Reply) {
	(*o).Date = new(int)
	*(*o).Date = randInt()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Text = new(int)
	*(*o).Text = randInt()
}

func fillRandomly_Notifications_SendMessageError_Code(o *Notifications_SendMessageError_Code) {
	switch randIntn(4) {
	case 0:
		*o = 1
	case 1:
		*o = 2
	case 2:
		*o = 3
	case 3:
		*o = 4
	}
}

func fillRandomly_Notifications_SendMessageError(o *Notifications_SendMessageError) {
	(*o).Code = new(Notifications_SendMessageError_Code)
	fillRandomly_Notifications_SendMessageError_Code((*o).Code)
	(*o).Description = new(string)
	*(*o).Description = randString()
}

func fillRandomly_Notifications_SendMessageItem(o *Notifications_SendMessageItem) {
	(*o).Error = new(Notifications_SendMessageError)
	fillRandomly_Notifications_SendMessageError((*o).Error)
	(*o).Status = new(bool)
	*(*o).Status = randBool()
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
}

func fillRandomly_Oauth_Error(o *Oauth_Error) {
	(*o).Error = randString()
	(*o).ErrorDescription = randString()
	(*o).RedirectUri = new(string)
	*(*o).RedirectUri = randString()
}

func fillRandomly_Orders_Amount(o *Orders_Amount) {
	(*o).Amounts = new([]Orders_AmountItem)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Amounts = make([]Orders_AmountItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Orders_AmountItem(&(*(*o).Amounts)[i0])
	}
	(*o).Currency = new(string)
	*(*o).Currency = randString()
}

func fillRandomly_Orders_AmountItem(o *Orders_AmountItem) {
	(*o).Amount = new(float64)
	*(*o).Amount = randFloat()
	(*o).Description = new(string)
	*(*o).Description = randString()
	(*o).Votes = new(string)
	*(*o).Votes = randString()
}

func fillRandomly_Orders_Order_Status(o *Orders_Order_Status) {
	switch randIntn(6) {
	case 0:
		*o = "created"
	case 1:
		*o = "charged"
	case 2:
		*o = "refunded"
	case 3:
		*o = "chargeable"
	case 4:
		*o = "cancelled"
	case 5:
		*o = "declined"
	}
}

func fillRandomly_Orders_Order(o *Orders_Order) {
	(*o).Amount = randString()
	(*o).AppOrderId = randString()
	(*o).CancelTransactionId = new(string)
	*(*o).CancelTransactionId = randString()
	(*o).Date = randString()
	(*o).Id = randString()
	(*o).Item = randString()
	(*o).ReceiverId = randString()
	fillRandomly_Orders_Order_Status(&(*o).Status)
	(*o).TransactionId = new(string)
	*(*o).TransactionId = randString()
	(*o).UserId = randString()
}

func fillRandomly_Orders_Subscription(o *Orders_Subscription) {
	(*o).AppId = new(int)
	*(*o).AppId = randInt()
	(*o).ApplicationName = new(string)
	*(*o).ApplicationName = randString()
	(*o).CancelReason = new(string)
	*(*o).CancelReason = randString()
	(*o).CreateTime = randInt()
	(*o).ExpireTime = new(int)
	*(*o).ExpireTime = randInt()
	(*o).Id = randInt()
	(*o).ItemId = randString()
	(*o).NextBillTime = new(int)
	*(*o).NextBillTime = randInt()
	(*o).PendingCancel = new(bool)
	*(*o).PendingCancel = randBool()
	(*o).Period = randInt()
	(*o).PeriodStartTime = randInt()
	(*o).PhotoUrl = new(string)
	*(*o).PhotoUrl = randString()
	(*o).Price = randInt()
	(*o).Status = randString()
	(*o).TestMode = new(bool)
	*(*o).TestMode = randBool()
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).TrialExpireTime = new(int)
	*(*o).TrialExpireTime = randInt()
	(*o).UpdateTime = randInt()
}

func fillRandomly_Owner_State_State(o *Owner_State_State) {
	switch randIntn(5) {
	case 0:
		*o = 1
	case 1:
		*o = 2
	case 2:
		*o = 3
	case 3:
		*o = 4
	case 4:
		*o = 5
	}
}

func fillRandomly_Owner_State(o *Owner_State) {
	(*o).Description = new(string)
	*(*o).Description = randString()
	(*o).State = new(Owner_State_State)
	fillRandomly_Owner_State_State((*o).State)
}

func fillRandomly_Pages_PrivacySettings(o *Pages_PrivacySettings) {
	switch randIntn(3) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	}
}

func fillRandomly_Pages_Wikipage(o *Pages_Wikipage) {
	(*o).CreatorId = new(int)
	*(*o).CreatorId = randInt()
	(*o).CreatorName = new(string)
	*(*o).CreatorName = randString()
	(*o).EditorId = new(int)
	*(*o).EditorId = randInt()
	(*o).EditorName = new(string)
	*(*o).EditorName = randString()
	(*o).GroupId = randInt()
	(*o).Id = randInt()
	(*o).Title = randString()
	(*o).Views = randInt()
	fillRandomly_Pages_PrivacySettings(&(*o).WhoCanEdit)
	fillRandomly_Pages_PrivacySettings(&(*o).WhoCanView)
}

func fillRandomly_Pages_WikipageFull(o *Pages_WikipageFull) {
	(*o).Created = randInt()
	(*o).CreatorId = new(int)
	*(*o).CreatorId = randInt()
	(*o).CurrentUserCanEdit = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CurrentUserCanEdit)
	(*o).CurrentUserCanEditAccess = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CurrentUserCanEditAccess)
	(*o).Edited = randInt()
	(*o).EditorId = new(int)
	*(*o).EditorId = randInt()
	(*o).GroupId = randInt()
	(*o).Html = new(string)
	*(*o).Html = randString()
	(*o).Id = randInt()
	(*o).OwnerId = new(int)
	*(*o).OwnerId = randInt()
	(*o).Parent = new(string)
	*(*o).Parent = randString()
	(*o).Parent2 = new(string)
	*(*o).Parent2 = randString()
	(*o).Source = new(string)
	*(*o).Source = randString()
	(*o).Title = randString()
	(*o).Url = new(string)
	*(*o).Url = randString()
	(*o).ViewUrl = randString()
	(*o).Views = randInt()
	fillRandomly_Pages_PrivacySettings(&(*o).WhoCanEdit)
	fillRandomly_Pages_PrivacySettings(&(*o).WhoCanView)
}

func fillRandomly_Pages_WikipageHistory(o *Pages_WikipageHistory) {
	(*o).Date = randInt()
	(*o).EditorId = randInt()
	(*o).EditorName = randString()
	(*o).Id = randInt()
	(*o).Length = randInt()
}

func fillRandomly_Photos_Image(o *Photos_Image) {
	(*o).Height = new(int)
	*(*o).Height = randInt()
	(*o).Type = new(Photos_ImageType)
	fillRandomly_Photos_ImageType((*o).Type)
	(*o).Url = new(string)
	*(*o).Url = randString()
	(*o).Width = new(int)
	*(*o).Width = randInt()
}

func fillRandomly_Photos_ImageType(o *Photos_ImageType) {
	switch randIntn(11) {
	case 0:
		*o = "s"
	case 1:
		*o = "m"
	case 2:
		*o = "x"
	case 3:
		*o = "l"
	case 4:
		*o = "o"
	case 5:
		*o = "p"
	case 6:
		*o = "q"
	case 7:
		*o = "r"
	case 8:
		*o = "y"
	case 9:
		*o = "z"
	case 10:
		*o = "w"
	}
}

func fillRandomly_Photos_Photo(o *Photos_Photo) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).AlbumId = randInt()
	(*o).CanComment = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanComment)
	(*o).Comments = new(Base_ObjectCount)
	fillRandomly_Base_ObjectCount((*o).Comments)
	(*o).Date = randInt()
	(*o).HasTags = randBool()
	(*o).Height = new(int)
	*(*o).Height = randInt()
	(*o).Id = randInt()
	(*o).Images = new([]Photos_Image)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Images = make([]Photos_Image, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Photos_Image(&(*(*o).Images)[i0])
	}
	(*o).Lat = new(float64)
	*(*o).Lat = randFloat()
	(*o).Likes = new(Base_Likes)
	fillRandomly_Base_Likes((*o).Likes)
	(*o).Long = new(float64)
	*(*o).Long = randFloat()
	(*o).OwnerId = randInt()
	(*o).Photo256 = new(string)
	*(*o).Photo256 = randString()
	(*o).Place = new(string)
	*(*o).Place = randString()
	(*o).PostId = new(int)
	*(*o).PostId = randInt()
	(*o).Reposts = new(Base_RepostsInfo)
	fillRandomly_Base_RepostsInfo((*o).Reposts)
	(*o).Sizes = new([]Photos_PhotoSizes)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Sizes = make([]Photos_PhotoSizes, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Photos_PhotoSizes(&(*(*o).Sizes)[i0])
	}
	(*o).Tags = new(Base_ObjectCount)
	fillRandomly_Base_ObjectCount((*o).Tags)
	(*o).Text = new(string)
	*(*o).Text = randString()
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
	(*o).Width = new(int)
	*(*o).Width = randInt()
}

func fillRandomly_Photos_PhotoAlbum(o *Photos_PhotoAlbum) {
	(*o).Created = randInt()
	(*o).Description = new(string)
	*(*o).Description = randString()
	(*o).Id = randInt()
	(*o).OwnerId = randInt()
	(*o).Size = randInt()
	(*o).Thumb = new(Photos_Photo)
	fillRandomly_Photos_Photo((*o).Thumb)
	(*o).Title = randString()
	(*o).Updated = randInt()
}

func fillRandomly_Photos_PhotoAlbumFull(o *Photos_PhotoAlbumFull) {
	(*o).CanDelete = new(bool)
	*(*o).CanDelete = randBool()
	(*o).CanUpload = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanUpload)
	(*o).CommentsDisabled = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CommentsDisabled)
	(*o).Created = randInt()
	(*o).Description = new(string)
	*(*o).Description = randString()
	(*o).Id = randInt()
	(*o).OwnerId = randInt()
	(*o).Size = randInt()
	(*o).Sizes = new([]Photos_PhotoSizes)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Sizes = make([]Photos_PhotoSizes, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Photos_PhotoSizes(&(*(*o).Sizes)[i0])
	}
	(*o).ThumbId = new(int)
	*(*o).ThumbId = randInt()
	(*o).ThumbIsLast = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).ThumbIsLast)
	(*o).ThumbSrc = new(string)
	*(*o).ThumbSrc = randString()
	(*o).Title = randString()
	(*o).Updated = randInt()
	(*o).UploadByAdminsOnly = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).UploadByAdminsOnly)
}

func fillRandomly_Photos_PhotoFalseable(o *Photos_PhotoFalseable) {
	var rawJSON []byte
	switch randIntn(2) {
	case 0:
		r := randBool()
		rawJSON, _ = json.Marshal(r)
	case 1:
		r := randString()
		rawJSON, _ = json.Marshal(r)
	}
	o.raw = rawJSON
}

func fillRandomly_Photos_PhotoFullXtrRealOffset(o *Photos_PhotoFullXtrRealOffset) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).AlbumId = randInt()
	(*o).CanComment = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanComment)
	(*o).Comments = new(Base_ObjectCount)
	fillRandomly_Base_ObjectCount((*o).Comments)
	(*o).Date = randInt()
	(*o).Height = new(int)
	*(*o).Height = randInt()
	(*o).Hidden = new(Base_PropertyExists)
	fillRandomly_Base_PropertyExists((*o).Hidden)
	(*o).Id = randInt()
	(*o).Lat = new(float64)
	*(*o).Lat = randFloat()
	(*o).Likes = new(Base_Likes)
	fillRandomly_Base_Likes((*o).Likes)
	(*o).Long = new(float64)
	*(*o).Long = randFloat()
	(*o).OwnerId = randInt()
	(*o).Photo1280 = new(string)
	*(*o).Photo1280 = randString()
	(*o).Photo130 = new(string)
	*(*o).Photo130 = randString()
	(*o).Photo2560 = new(string)
	*(*o).Photo2560 = randString()
	(*o).Photo604 = new(string)
	*(*o).Photo604 = randString()
	(*o).Photo75 = new(string)
	*(*o).Photo75 = randString()
	(*o).Photo807 = new(string)
	*(*o).Photo807 = randString()
	(*o).PostId = new(int)
	*(*o).PostId = randInt()
	(*o).RealOffset = new(int)
	*(*o).RealOffset = randInt()
	(*o).Reposts = new(Base_ObjectCount)
	fillRandomly_Base_ObjectCount((*o).Reposts)
	(*o).Sizes = new([]Photos_PhotoSizes)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Sizes = make([]Photos_PhotoSizes, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Photos_PhotoSizes(&(*(*o).Sizes)[i0])
	}
	(*o).Tags = new(Base_ObjectCount)
	fillRandomly_Base_ObjectCount((*o).Tags)
	(*o).Text = new(string)
	*(*o).Text = randString()
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
	(*o).Width = new(int)
	*(*o).Width = randInt()
}

func fillRandomly_Photos_PhotoSizes(o *Photos_PhotoSizes) {
	(*o).Height = randInt()
	(*o).Src = new(string)
	*(*o).Src = randString()
	fillRandomly_Photos_PhotoSizesType(&(*o).Type)
	(*o).Url = randString()
	(*o).Width = randInt()
}

func fillRandomly_Photos_PhotoSizesType(o *Photos_PhotoSizesType) {
	switch randIntn(25) {
	case 0:
		*o = "s"
	case 1:
		*o = "m"
	case 2:
		*o = "x"
	case 3:
		*o = "o"
	case 4:
		*o = "p"
	case 5:
		*o = "q"
	case 6:
		*o = "r"
	case 7:
		*o = "k"
	case 8:
		*o = "l"
	case 9:
		*o = "y"
	case 10:
		*o = "z"
	case 11:
		*o = "c"
	case 12:
		*o = "w"
	case 13:
		*o = "a"
	case 14:
		*o = "b"
	case 15:
		*o = "e"
	case 16:
		*o = "i"
	case 17:
		*o = "d"
	case 18:
		*o = "j"
	case 19:
		*o = "temp"
	case 20:
		*o = "h"
	case 21:
		*o = "g"
	case 22:
		*o = "n"
	case 23:
		*o = "f"
	case 24:
		*o = "max"
	}
}

func fillRandomly_Photos_PhotoTag(o *Photos_PhotoTag) {
	(*o).Date = randInt()
	(*o).Description = new(string)
	*(*o).Description = randString()
	(*o).Id = randInt()
	(*o).PlacerId = randInt()
	(*o).TaggedName = randString()
	(*o).UserId = randInt()
	fillRandomly_Base_BoolInt(&(*o).Viewed)
	(*o).X = randFloat()
	(*o).X2 = randFloat()
	(*o).Y = randFloat()
	(*o).Y2 = randFloat()
}

func fillRandomly_Photos_PhotoUpload(o *Photos_PhotoUpload) {
	(*o).AlbumId = randInt()
	(*o).FallbackUploadUrl = new(string)
	*(*o).FallbackUploadUrl = randString()
	(*o).GroupId = new(int)
	*(*o).GroupId = randInt()
	(*o).UploadUrl = randString()
	(*o).UserId = randInt()
}

func fillRandomly_Photos_PhotoXtrRealOffset(o *Photos_PhotoXtrRealOffset) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).AlbumId = randInt()
	(*o).Date = randInt()
	(*o).Height = new(int)
	*(*o).Height = randInt()
	(*o).Hidden = new(Base_PropertyExists)
	fillRandomly_Base_PropertyExists((*o).Hidden)
	(*o).Id = randInt()
	(*o).Lat = new(float64)
	*(*o).Lat = randFloat()
	(*o).Long = new(float64)
	*(*o).Long = randFloat()
	(*o).OwnerId = randInt()
	(*o).Photo1280 = new(string)
	*(*o).Photo1280 = randString()
	(*o).Photo130 = new(string)
	*(*o).Photo130 = randString()
	(*o).Photo2560 = new(string)
	*(*o).Photo2560 = randString()
	(*o).Photo604 = new(string)
	*(*o).Photo604 = randString()
	(*o).Photo75 = new(string)
	*(*o).Photo75 = randString()
	(*o).Photo807 = new(string)
	*(*o).Photo807 = randString()
	(*o).PostId = new(int)
	*(*o).PostId = randInt()
	(*o).RealOffset = new(int)
	*(*o).RealOffset = randInt()
	(*o).Sizes = new([]Photos_PhotoSizes)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Sizes = make([]Photos_PhotoSizes, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Photos_PhotoSizes(&(*(*o).Sizes)[i0])
	}
	(*o).Text = new(string)
	*(*o).Text = randString()
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
	(*o).Width = new(int)
	*(*o).Width = randInt()
}

func fillRandomly_Photos_PhotoXtrTagInfo(o *Photos_PhotoXtrTagInfo) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).AlbumId = randInt()
	(*o).Date = randInt()
	(*o).Height = new(int)
	*(*o).Height = randInt()
	(*o).Id = randInt()
	(*o).Lat = new(float64)
	*(*o).Lat = randFloat()
	(*o).Long = new(float64)
	*(*o).Long = randFloat()
	(*o).OwnerId = randInt()
	(*o).Photo1280 = new(string)
	*(*o).Photo1280 = randString()
	(*o).Photo130 = new(string)
	*(*o).Photo130 = randString()
	(*o).Photo2560 = new(string)
	*(*o).Photo2560 = randString()
	(*o).Photo604 = new(string)
	*(*o).Photo604 = randString()
	(*o).Photo75 = new(string)
	*(*o).Photo75 = randString()
	(*o).Photo807 = new(string)
	*(*o).Photo807 = randString()
	(*o).PlacerId = new(int)
	*(*o).PlacerId = randInt()
	(*o).PostId = new(int)
	*(*o).PostId = randInt()
	(*o).Sizes = new([]Photos_PhotoSizes)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Sizes = make([]Photos_PhotoSizes, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Photos_PhotoSizes(&(*(*o).Sizes)[i0])
	}
	(*o).TagCreated = new(int)
	*(*o).TagCreated = randInt()
	(*o).TagId = new(int)
	*(*o).TagId = randInt()
	(*o).Text = new(string)
	*(*o).Text = randString()
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
	(*o).Width = new(int)
	*(*o).Width = randInt()
}

func fillRandomly_Photos_TagsSuggestionItem(o *Photos_TagsSuggestionItem) {
	(*o).Buttons = new([]Photos_TagsSuggestionItemButton)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Buttons = make([]Photos_TagsSuggestionItemButton, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Photos_TagsSuggestionItemButton(&(*(*o).Buttons)[i0])
	}
	(*o).Caption = new(string)
	*(*o).Caption = randString()
	(*o).Photo = new(Photos_Photo)
	fillRandomly_Photos_Photo((*o).Photo)
	(*o).Tags = new([]Photos_PhotoTag)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Tags = make([]Photos_PhotoTag, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Photos_PhotoTag(&(*(*o).Tags)[i0])
	}
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).TrackCode = new(string)
	*(*o).TrackCode = randString()
	(*o).Type = new(string)
	*(*o).Type = randString()
}

func fillRandomly_Photos_TagsSuggestionItemButton_Action(o *Photos_TagsSuggestionItemButton_Action) {
	switch randIntn(3) {
	case 0:
		*o = "confirm"
	case 1:
		*o = "decline"
	case 2:
		*o = "show_tags"
	}
}

func fillRandomly_Photos_TagsSuggestionItemButton_Style(o *Photos_TagsSuggestionItemButton_Style) {
	switch randIntn(2) {
	case 0:
		*o = "primary"
	case 1:
		*o = "secondary"
	}
}

func fillRandomly_Photos_TagsSuggestionItemButton(o *Photos_TagsSuggestionItemButton) {
	(*o).Action = new(Photos_TagsSuggestionItemButton_Action)
	fillRandomly_Photos_TagsSuggestionItemButton_Action((*o).Action)
	(*o).Style = new(Photos_TagsSuggestionItemButton_Style)
	fillRandomly_Photos_TagsSuggestionItemButton_Style((*o).Style)
	(*o).Title = new(string)
	*(*o).Title = randString()
}

func fillRandomly_Podcast_Cover(o *Podcast_Cover) {
	(*o).Sizes = new([]Photos_PhotoSizes)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Sizes = make([]Photos_PhotoSizes, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Photos_PhotoSizes(&(*(*o).Sizes)[i0])
	}
}

func fillRandomly_Podcast_ExternalData(o *Podcast_ExternalData) {
	(*o).Cover = new(Podcast_Cover)
	fillRandomly_Podcast_Cover((*o).Cover)
	(*o).OwnerName = new(string)
	*(*o).OwnerName = randString()
	(*o).OwnerUrl = new(string)
	*(*o).OwnerUrl = randString()
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).Url = new(string)
	*(*o).Url = randString()
}

func fillRandomly_Polls_Answer(o *Polls_Answer) {
	(*o).Id = randInt()
	(*o).Rate = randFloat()
	(*o).Text = randString()
	(*o).Votes = randInt()
}

func fillRandomly_Polls_Background_Type(o *Polls_Background_Type) {
	switch randIntn(2) {
	case 0:
		*o = "gradient"
	case 1:
		*o = "tile"
	}
}

func fillRandomly_Polls_Background(o *Polls_Background) {
	(*o).Angle = new(int)
	*(*o).Angle = randInt()
	(*o).Color = new(string)
	*(*o).Color = randString()
	(*o).Height = new(int)
	*(*o).Height = randInt()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Images = new([]Base_Image)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Images = make([]Base_Image, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Base_Image(&(*(*o).Images)[i0])
	}
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).Points = new([]Base_GradientPoint)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Points = make([]Base_GradientPoint, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Base_GradientPoint(&(*(*o).Points)[i0])
	}
	(*o).Type = new(Polls_Background_Type)
	fillRandomly_Polls_Background_Type((*o).Type)
	(*o).Width = new(int)
	*(*o).Width = randInt()
}

func fillRandomly_Polls_Friend(o *Polls_Friend) {
	(*o).Id = randInt()
}

func fillRandomly_Polls_Poll(o *Polls_Poll) {
	(*o).Anonymous = new(Polls_PollAnonymous)
	fillRandomly_Polls_PollAnonymous((*o).Anonymous)
	(*o).AnswerId = new(int)
	*(*o).AnswerId = randInt()
	(*o).AnswerIds = new([]int)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).AnswerIds = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).AnswerIds)[i0] = randInt()
	}
	l0 = randIntn(maxArrayLength + 1)
	(*o).Answers = make([]Polls_Answer, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Polls_Answer(&((*o).Answers)[i0])
	}
	(*o).AuthorId = new(int)
	*(*o).AuthorId = randInt()
	(*o).Background = new(Polls_Background)
	fillRandomly_Polls_Background((*o).Background)
	(*o).CanEdit = randBool()
	(*o).CanReport = randBool()
	(*o).CanShare = randBool()
	(*o).CanVote = randBool()
	(*o).Closed = randBool()
	(*o).Created = randInt()
	(*o).DisableUnvote = randBool()
	(*o).EmbedHash = new(string)
	*(*o).EmbedHash = randString()
	(*o).EndDate = randInt()
	(*o).Friends = new([]Polls_Friend)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Friends = make([]Polls_Friend, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Polls_Friend(&(*(*o).Friends)[i0])
	}
	(*o).Id = randInt()
	(*o).IsBoard = randBool()
	(*o).Multiple = randBool()
	(*o).OwnerId = randInt()
	(*o).Photo = new(Polls_Background)
	fillRandomly_Polls_Background((*o).Photo)
	(*o).Question = randString()
	(*o).Votes = randInt()
}

func fillRandomly_Polls_PollAnonymous(o *Polls_PollAnonymous) {
	*o = Polls_PollAnonymous(randBool())
}

func fillRandomly_Polls_Voters(o *Polls_Voters) {
	(*o).AnswerId = new(int)
	*(*o).AnswerId = randInt()
	(*o).Users = new(Polls_VotersUsers)
	fillRandomly_Polls_VotersUsers((*o).Users)
}

func fillRandomly_Polls_VotersUsers(o *Polls_VotersUsers) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).Items = new([]int)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Items = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Items)[i0] = randInt()
	}
}

func fillRandomly_PrettyCards_PrettyCard_Button(o *PrettyCards_PrettyCard_Button) {
	var rawJSON []byte
	switch randIntn(2) {
	case 0:
		r := new(Base_LinkButton)
		fillRandomly_Base_LinkButton(r)
		rawJSON, _ = json.Marshal(*r)
	case 1:
		r := randString()
		rawJSON, _ = json.Marshal(r)
	}
	o.raw = rawJSON
}

func fillRandomly_PrettyCards_PrettyCard(o *PrettyCards_PrettyCard) {
	(*o).Button = new(PrettyCards_PrettyCard_Button)
	fillRandomly_PrettyCards_PrettyCard_Button((*o).Button)
	(*o).ButtonText = new(string)
	*(*o).ButtonText = randString()
	(*o).CardId = randString()
	(*o).Images = new([]Base_Image)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Images = make([]Base_Image, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Base_Image(&(*(*o).Images)[i0])
	}
	(*o).LinkUrl = randString()
	(*o).Photo = randString()
	(*o).Price = new(string)
	*(*o).Price = randString()
	(*o).PriceOld = new(string)
	*(*o).PriceOld = randString()
	(*o).Title = randString()
}

func fillRandomly_PrettyCards_PrettyCardOrError(o *PrettyCards_PrettyCardOrError) {
	var rawJSON []byte
	switch randIntn(2) {
	case 0:
		r := new(PrettyCards_PrettyCard)
		fillRandomly_PrettyCards_PrettyCard(r)
		rawJSON, _ = json.Marshal(*r)
	case 1:
		r := new(Base_Error)
		fillRandomly_Base_Error(r)
		rawJSON, _ = json.Marshal(*r)
	}
	o.raw = rawJSON
}

func fillRandomly_Search_Hint(o *Search_Hint) {
	(*o).App = new(Apps_App)
	fillRandomly_Apps_App((*o).App)
	(*o).Description = randString()
	(*o).Global = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Global)
	(*o).Group = new(Groups_Group)
	fillRandomly_Groups_Group((*o).Group)
	(*o).Link = new(Base_Link)
	fillRandomly_Base_Link((*o).Link)
	(*o).Profile = new(Users_UserMin)
	fillRandomly_Users_UserMin((*o).Profile)
	(*o).Section = new(Search_HintSection)
	fillRandomly_Search_HintSection((*o).Section)
	fillRandomly_Search_HintType(&(*o).Type)
}

func fillRandomly_Search_HintSection(o *Search_HintSection) {
	switch randIntn(8) {
	case 0:
		*o = "groups"
	case 1:
		*o = "events"
	case 2:
		*o = "publics"
	case 3:
		*o = "correspondents"
	case 4:
		*o = "people"
	case 5:
		*o = "friends"
	case 6:
		*o = "mutual_friends"
	case 7:
		*o = "promo"
	}
}

func fillRandomly_Search_HintType(o *Search_HintType) {
	switch randIntn(6) {
	case 0:
		*o = "group"
	case 1:
		*o = "profile"
	case 2:
		*o = "vk_app"
	case 3:
		*o = "app"
	case 4:
		*o = "html5_game"
	case 5:
		*o = "link"
	}
}

func fillRandomly_Secure_GiveEventStickerItem(o *Secure_GiveEventStickerItem) {
	(*o).Status = new(string)
	*(*o).Status = randString()
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
}

func fillRandomly_Secure_Level(o *Secure_Level) {
	(*o).Level = new(int)
	*(*o).Level = randInt()
	(*o).Uid = new(int)
	*(*o).Uid = randInt()
}

func fillRandomly_Secure_SetCounterItem(o *Secure_SetCounterItem) {
	(*o).Id = randInt()
	fillRandomly_Base_BoolInt(&(*o).Result)
}

func fillRandomly_Secure_SmsNotification(o *Secure_SmsNotification) {
	(*o).AppId = new(string)
	*(*o).AppId = randString()
	(*o).Date = new(string)
	*(*o).Date = randString()
	(*o).Id = new(string)
	*(*o).Id = randString()
	(*o).Message = new(string)
	*(*o).Message = randString()
	(*o).UserId = new(string)
	*(*o).UserId = randString()
}

func fillRandomly_Secure_TokenChecked(o *Secure_TokenChecked) {
	(*o).Date = new(int)
	*(*o).Date = randInt()
	(*o).Expire = new(int)
	*(*o).Expire = randInt()
	(*o).Success = new(int)
	*(*o).Success = randInt()
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
}

func fillRandomly_Secure_Transaction(o *Secure_Transaction) {
	(*o).Date = new(int)
	*(*o).Date = randInt()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).UidFrom = new(int)
	*(*o).UidFrom = randInt()
	(*o).UidTo = new(int)
	*(*o).UidTo = randInt()
	(*o).Votes = new(int)
	*(*o).Votes = randInt()
}

func fillRandomly_Stats_Activity(o *Stats_Activity) {
	(*o).Comments = new(int)
	*(*o).Comments = randInt()
	(*o).Copies = new(int)
	*(*o).Copies = randInt()
	(*o).Hidden = new(int)
	*(*o).Hidden = randInt()
	(*o).Likes = new(int)
	*(*o).Likes = randInt()
	(*o).Subscribed = new(int)
	*(*o).Subscribed = randInt()
	(*o).Unsubscribed = new(int)
	*(*o).Unsubscribed = randInt()
}

func fillRandomly_Stats_City(o *Stats_City) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).Value = new(int)
	*(*o).Value = randInt()
}

func fillRandomly_Stats_Country(o *Stats_Country) {
	(*o).Code = new(string)
	*(*o).Code = randString()
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).Value = new(int)
	*(*o).Value = randInt()
}

func fillRandomly_Stats_Period(o *Stats_Period) {
	(*o).Activity = new(Stats_Activity)
	fillRandomly_Stats_Activity((*o).Activity)
	(*o).PeriodFrom = new(int)
	*(*o).PeriodFrom = randInt()
	(*o).PeriodTo = new(int)
	*(*o).PeriodTo = randInt()
	(*o).Reach = new(Stats_Reach)
	fillRandomly_Stats_Reach((*o).Reach)
	(*o).Visitors = new(Stats_Views)
	fillRandomly_Stats_Views((*o).Visitors)
}

func fillRandomly_Stats_Reach(o *Stats_Reach) {
	(*o).Age = new([]Stats_SexAge)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Age = make([]Stats_SexAge, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Stats_SexAge(&(*(*o).Age)[i0])
	}
	(*o).Cities = new([]Stats_City)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Cities = make([]Stats_City, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Stats_City(&(*(*o).Cities)[i0])
	}
	(*o).Countries = new([]Stats_Country)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Countries = make([]Stats_Country, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Stats_Country(&(*(*o).Countries)[i0])
	}
	(*o).MobileReach = new(int)
	*(*o).MobileReach = randInt()
	(*o).Reach = new(int)
	*(*o).Reach = randInt()
	(*o).ReachSubscribers = new(int)
	*(*o).ReachSubscribers = randInt()
	(*o).Sex = new([]Stats_SexAge)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Sex = make([]Stats_SexAge, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Stats_SexAge(&(*(*o).Sex)[i0])
	}
	(*o).SexAge = new([]Stats_SexAge)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).SexAge = make([]Stats_SexAge, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Stats_SexAge(&(*(*o).SexAge)[i0])
	}
}

func fillRandomly_Stats_SexAge(o *Stats_SexAge) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).CountSubscribers = new(int)
	*(*o).CountSubscribers = randInt()
	(*o).Reach = new(int)
	*(*o).Reach = randInt()
	(*o).ReachSubscribers = new(int)
	*(*o).ReachSubscribers = randInt()
	(*o).Value = randString()
}

func fillRandomly_Stats_Views(o *Stats_Views) {
	(*o).Age = new([]Stats_SexAge)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Age = make([]Stats_SexAge, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Stats_SexAge(&(*(*o).Age)[i0])
	}
	(*o).Cities = new([]Stats_City)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Cities = make([]Stats_City, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Stats_City(&(*(*o).Cities)[i0])
	}
	(*o).Countries = new([]Stats_Country)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Countries = make([]Stats_Country, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Stats_Country(&(*(*o).Countries)[i0])
	}
	(*o).MobileViews = new(int)
	*(*o).MobileViews = randInt()
	(*o).Sex = new([]Stats_SexAge)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Sex = make([]Stats_SexAge, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Stats_SexAge(&(*(*o).Sex)[i0])
	}
	(*o).SexAge = new([]Stats_SexAge)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).SexAge = make([]Stats_SexAge, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Stats_SexAge(&(*(*o).SexAge)[i0])
	}
	(*o).Views = new(int)
	*(*o).Views = randInt()
	(*o).Visitors = new(int)
	*(*o).Visitors = randInt()
}

func fillRandomly_Stats_WallpostStat(o *Stats_WallpostStat) {
	(*o).Hide = new(int)
	*(*o).Hide = randInt()
	(*o).JoinGroup = new(int)
	*(*o).JoinGroup = randInt()
	(*o).Links = new(int)
	*(*o).Links = randInt()
	(*o).PostId = new(int)
	*(*o).PostId = randInt()
	(*o).ReachAds = new(int)
	*(*o).ReachAds = randInt()
	(*o).ReachSubscribers = new(int)
	*(*o).ReachSubscribers = randInt()
	(*o).ReachSubscribersCount = new(int)
	*(*o).ReachSubscribersCount = randInt()
	(*o).ReachTotal = new(int)
	*(*o).ReachTotal = randInt()
	(*o).ReachTotalCount = new(int)
	*(*o).ReachTotalCount = randInt()
	(*o).ReachViral = new(int)
	*(*o).ReachViral = randInt()
	(*o).Report = new(int)
	*(*o).Report = randInt()
	(*o).SexAge = new([]Stats_SexAge)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).SexAge = make([]Stats_SexAge, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Stats_SexAge(&(*(*o).SexAge)[i0])
	}
	(*o).ToGroup = new(int)
	*(*o).ToGroup = randInt()
	(*o).Unsubscribe = new(int)
	*(*o).Unsubscribe = randInt()
}

func fillRandomly_Status_Status(o *Status_Status) {
	(*o).Audio = new(Audio_Audio)
	fillRandomly_Audio_Audio((*o).Audio)
	(*o).Text = randString()
}

func fillRandomly_Stickers_ImageSet(o *Stickers_ImageSet) {
	(*o).BaseUrl = randString()
	(*o).Version = new(int)
	*(*o).Version = randInt()
}

func fillRandomly_Storage_Value(o *Storage_Value) {
	(*o).Key = randString()
	(*o).Value = randString()
}

func fillRandomly_Store_Product_Type(o *Store_Product_Type) {
	switch randIntn(1) {
	case 0:
		*o = "stickers"
	}
}

func fillRandomly_Store_Product(o *Store_Product) {
	(*o).Active = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Active)
	(*o).HasAnimation = new(bool)
	*(*o).HasAnimation = randBool()
	(*o).Icon = new(Store_ProductIcon)
	fillRandomly_Store_ProductIcon((*o).Icon)
	(*o).Id = randInt()
	(*o).IsNew = new(bool)
	*(*o).IsNew = randBool()
	(*o).PaymentRegion = new(string)
	*(*o).PaymentRegion = randString()
	(*o).Previews = new([]Base_Image)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Previews = make([]Base_Image, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Base_Image(&(*(*o).Previews)[i0])
	}
	(*o).Promoted = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Promoted)
	(*o).PurchaseDate = new(int)
	*(*o).PurchaseDate = randInt()
	(*o).Purchased = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Purchased)
	(*o).Stickers = new(Base_StickersList)
	fillRandomly_Base_StickersList((*o).Stickers)
	(*o).StyleStickerIds = new([]int)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).StyleStickerIds = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).StyleStickerIds)[i0] = randInt()
	}
	(*o).Subtitle = new(string)
	*(*o).Subtitle = randString()
	(*o).Title = new(string)
	*(*o).Title = randString()
	fillRandomly_Store_Product_Type(&(*o).Type)
}

func fillRandomly_Store_ProductIcon(o *Store_ProductIcon) {
	l0 := randIntn(maxArrayLength + 1)
	*o = make([]Base_Image, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Base_Image(&(*o)[i0])
	}
}

func fillRandomly_Store_StickersKeyword(o *Store_StickersKeyword) {
	(*o).PromotedStickers = new(Store_StickersKeywordStickers)
	fillRandomly_Store_StickersKeywordStickers((*o).PromotedStickers)
	(*o).Stickers = new([]Store_StickersKeywordSticker)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Stickers = make([]Store_StickersKeywordSticker, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Store_StickersKeywordSticker(&(*(*o).Stickers)[i0])
	}
	(*o).UserStickers = new(Store_StickersKeywordStickers)
	fillRandomly_Store_StickersKeywordStickers((*o).UserStickers)
	l0 = randIntn(maxArrayLength + 1)
	(*o).Words = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Words)[i0] = randString()
	}
}

func fillRandomly_Store_StickersKeywordSticker(o *Store_StickersKeywordSticker) {
	(*o).PackId = randInt()
	(*o).StickerId = randInt()
}

func fillRandomly_Store_StickersKeywordStickers(o *Store_StickersKeywordStickers) {
	r := Base_StickersList(*o)
	fillRandomly_Base_StickersList(&r)
	*o = Store_StickersKeywordStickers(r)
}

func fillRandomly_Stories_ClickableArea(o *Stories_ClickableArea) {
	(*o).X = randInt()
	(*o).Y = randInt()
}

func fillRandomly_Stories_ClickableSticker_Style(o *Stories_ClickableSticker_Style) {
	switch randIntn(10) {
	case 0:
		*o = "transparent"
	case 1:
		*o = "blue_gradient"
	case 2:
		*o = "red_gradient"
	case 3:
		*o = "underline"
	case 4:
		*o = "blue"
	case 5:
		*o = "green"
	case 6:
		*o = "white"
	case 7:
		*o = "question_reply"
	case 8:
		*o = "light"
	case 9:
		*o = "impressive"
	}
}

func fillRandomly_Stories_ClickableSticker_Subtype(o *Stories_ClickableSticker_Subtype) {
	switch randIntn(2) {
	case 0:
		*o = "market_item"
	case 1:
		*o = "aliexpress_product"
	}
}

func fillRandomly_Stories_ClickableSticker_Type(o *Stories_ClickableSticker_Type) {
	switch randIntn(14) {
	case 0:
		*o = "hashtag"
	case 1:
		*o = "mention"
	case 2:
		*o = "link"
	case 3:
		*o = "question"
	case 4:
		*o = "place"
	case 5:
		*o = "market_item"
	case 6:
		*o = "music"
	case 7:
		*o = "story_reply"
	case 8:
		*o = "owner"
	case 9:
		*o = "post"
	case 10:
		*o = "poll"
	case 11:
		*o = "sticker"
	case 12:
		*o = "app"
	case 13:
		*o = "situational_theme"
	}
}

func fillRandomly_Stories_ClickableSticker(o *Stories_ClickableSticker) {
	(*o).App = new(Apps_AppMin)
	fillRandomly_Apps_AppMin((*o).App)
	(*o).AppContext = new(string)
	*(*o).AppContext = randString()
	(*o).Audio = new(Audio_Audio)
	fillRandomly_Audio_Audio((*o).Audio)
	(*o).AudioStartTime = new(int)
	*(*o).AudioStartTime = randInt()
	l0 := randIntn(maxArrayLength + 1)
	(*o).ClickableArea = make([]Stories_ClickableArea, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Stories_ClickableArea(&((*o).ClickableArea)[i0])
	}
	(*o).Color = new(string)
	*(*o).Color = randString()
	(*o).HasNewInteractions = new(bool)
	*(*o).HasNewInteractions = randBool()
	(*o).Hashtag = new(string)
	*(*o).Hashtag = randString()
	(*o).Id = randInt()
	(*o).IsBroadcastNotifyAllowed = new(bool)
	*(*o).IsBroadcastNotifyAllowed = randBool()
	(*o).LinkObject = new(Base_Link)
	fillRandomly_Base_Link((*o).LinkObject)
	(*o).MarketItem = new(Market_MarketItem)
	fillRandomly_Market_MarketItem((*o).MarketItem)
	(*o).Mention = new(string)
	*(*o).Mention = randString()
	(*o).OwnerId = new(int)
	*(*o).OwnerId = randInt()
	(*o).PlaceId = new(int)
	*(*o).PlaceId = randInt()
	(*o).Poll = new(Polls_Poll)
	fillRandomly_Polls_Poll((*o).Poll)
	(*o).PostId = new(int)
	*(*o).PostId = randInt()
	(*o).PostOwnerId = new(int)
	*(*o).PostOwnerId = randInt()
	(*o).Question = new(string)
	*(*o).Question = randString()
	(*o).QuestionButton = new(string)
	*(*o).QuestionButton = randString()
	(*o).SituationalAppUrl = new(string)
	*(*o).SituationalAppUrl = randString()
	(*o).SituationalThemeId = new(int)
	*(*o).SituationalThemeId = randInt()
	(*o).StickerId = new(int)
	*(*o).StickerId = randInt()
	(*o).StickerPackId = new(int)
	*(*o).StickerPackId = randInt()
	(*o).StoryId = new(int)
	*(*o).StoryId = randInt()
	(*o).Style = new(Stories_ClickableSticker_Style)
	fillRandomly_Stories_ClickableSticker_Style((*o).Style)
	(*o).Subtype = new(Stories_ClickableSticker_Subtype)
	fillRandomly_Stories_ClickableSticker_Subtype((*o).Subtype)
	(*o).TooltipText = new(string)
	*(*o).TooltipText = randString()
	fillRandomly_Stories_ClickableSticker_Type(&(*o).Type)
}

func fillRandomly_Stories_ClickableStickers(o *Stories_ClickableStickers) {
	l0 := randIntn(maxArrayLength + 1)
	(*o).ClickableStickers = make([]Stories_ClickableSticker, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Stories_ClickableSticker(&((*o).ClickableStickers)[i0])
	}
	(*o).OriginalHeight = randInt()
	(*o).OriginalWidth = randInt()
}

func fillRandomly_Stories_FeedItem_Type(o *Stories_FeedItem_Type) {
	switch randIntn(9) {
	case 0:
		*o = "promo_stories"
	case 1:
		*o = "stories"
	case 2:
		*o = "live_active"
	case 3:
		*o = "live_finished"
	case 4:
		*o = "community_grouped_stories"
	case 5:
		*o = "app_grouped_stories"
	case 6:
		*o = "birthday"
	case 7:
		*o = "discover"
	case 8:
		*o = "advices"
	}
}

func fillRandomly_Stories_FeedItem(o *Stories_FeedItem) {
	(*o).App = new(Apps_AppMin)
	fillRandomly_Apps_AppMin((*o).App)
	(*o).BirthdayUserId = new(int)
	*(*o).BirthdayUserId = randInt()
	(*o).Grouped = new([]Stories_FeedItem)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Grouped = make([]Stories_FeedItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		//fillRandomly_Stories_FeedItem(&(*(*o).Grouped)[i0])
	}
	(*o).HasUnseen = new(bool)
	*(*o).HasUnseen = randBool()
	(*o).Id = new(string)
	*(*o).Id = randString()
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).PromoData = new(Stories_PromoBlock)
	fillRandomly_Stories_PromoBlock((*o).PromoData)
	(*o).Stories = new([]Stories_Story)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Stories = make([]Stories_Story, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Stories_Story(&(*(*o).Stories)[i0])
	}
	(*o).TrackCode = new(string)
	*(*o).TrackCode = randString()
	fillRandomly_Stories_FeedItem_Type(&(*o).Type)
}

func fillRandomly_Stories_PromoBlock(o *Stories_PromoBlock) {
	(*o).Name = randString()
	(*o).NotAnimated = randBool()
	(*o).Photo100 = randString()
	(*o).Photo50 = randString()
}

func fillRandomly_Stories_Replies(o *Stories_Replies) {
	(*o).Count = randInt()
	(*o).New = new(int)
	*(*o).New = randInt()
}

func fillRandomly_Stories_StatLine(o *Stories_StatLine) {
	(*o).Counter = new(int)
	*(*o).Counter = randInt()
	(*o).IsUnavailable = new(bool)
	*(*o).IsUnavailable = randBool()
	(*o).Name = randString()
}

func fillRandomly_Stories_Story(o *Stories_Story) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).BirthdayWishUserId = new(int)
	*(*o).BirthdayWishUserId = randInt()
	(*o).CanAsk = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanAsk)
	(*o).CanAskAnonymous = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanAskAnonymous)
	(*o).CanComment = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanComment)
	(*o).CanHide = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanHide)
	(*o).CanLike = new(bool)
	*(*o).CanLike = randBool()
	(*o).CanReply = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanReply)
	(*o).CanSee = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanSee)
	(*o).CanShare = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanShare)
	(*o).CanUseInNarrative = new(bool)
	*(*o).CanUseInNarrative = randBool()
	(*o).ClickableStickers = new(Stories_ClickableStickers)
	fillRandomly_Stories_ClickableStickers((*o).ClickableStickers)
	(*o).Date = new(int)
	*(*o).Date = randInt()
	(*o).ExpiresAt = new(int)
	*(*o).ExpiresAt = randInt()
	(*o).FirstNarrativeTitle = new(string)
	*(*o).FirstNarrativeTitle = randString()
	(*o).Id = randInt()
	(*o).IsDeleted = new(bool)
	*(*o).IsDeleted = randBool()
	(*o).IsExpired = new(bool)
	*(*o).IsExpired = randBool()
	(*o).Link = new(Stories_StoryLink)
	fillRandomly_Stories_StoryLink((*o).Link)
	(*o).NarrativesCount = new(int)
	*(*o).NarrativesCount = randInt()
	(*o).OwnerId = randInt()
	(*o).ParentStory = new(Stories_Story)
	//fillRandomly_Stories_Story((*o).ParentStory)
	(*o).ParentStoryAccessKey = new(string)
	*(*o).ParentStoryAccessKey = randString()
	(*o).ParentStoryId = new(int)
	*(*o).ParentStoryId = randInt()
	(*o).ParentStoryOwnerId = new(int)
	*(*o).ParentStoryOwnerId = randInt()
	(*o).Photo = new(Photos_Photo)
	fillRandomly_Photos_Photo((*o).Photo)
	(*o).Replies = new(Stories_Replies)
	fillRandomly_Stories_Replies((*o).Replies)
	(*o).Seen = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Seen)
	(*o).Type = new(Stories_StoryType)
	fillRandomly_Stories_StoryType((*o).Type)
	(*o).Video = new(Video_VideoFull)
	fillRandomly_Video_VideoFull((*o).Video)
	(*o).Views = new(int)
	*(*o).Views = randInt()
}

func fillRandomly_Stories_StoryLink(o *Stories_StoryLink) {
	(*o).LinkUrlTarget = new(string)
	*(*o).LinkUrlTarget = randString()
	(*o).Text = randString()
	(*o).Url = randString()
}

func fillRandomly_Stories_StoryStats(o *Stories_StoryStats) {
	fillRandomly_Stories_StoryStatsStat(&(*o).Answer)
	fillRandomly_Stories_StoryStatsStat(&(*o).Bans)
	fillRandomly_Stories_StoryStatsStat(&(*o).Likes)
	fillRandomly_Stories_StoryStatsStat(&(*o).OpenLink)
	fillRandomly_Stories_StoryStatsStat(&(*o).Replies)
	fillRandomly_Stories_StoryStatsStat(&(*o).Shares)
	fillRandomly_Stories_StoryStatsStat(&(*o).Subscribers)
	fillRandomly_Stories_StoryStatsStat(&(*o).Views)
}

func fillRandomly_Stories_StoryStatsStat(o *Stories_StoryStatsStat) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
	fillRandomly_Stories_StoryStatsState(&(*o).State)
}

func fillRandomly_Stories_StoryStatsState(o *Stories_StoryStatsState) {
	switch randIntn(3) {
	case 0:
		*o = "on"
	case 1:
		*o = "off"
	case 2:
		*o = "hidden"
	}
}

func fillRandomly_Stories_StoryType(o *Stories_StoryType) {
	switch randIntn(5) {
	case 0:
		*o = "photo"
	case 1:
		*o = "video"
	case 2:
		*o = "live_active"
	case 3:
		*o = "live_finished"
	case 4:
		*o = "birthday_invite"
	}
}

func fillRandomly_Stories_UploadLinkText(o *Stories_UploadLinkText) {
	switch randIntn(21) {
	case 0:
		*o = "to_store"
	case 1:
		*o = "vote"
	case 2:
		*o = "more"
	case 3:
		*o = "book"
	case 4:
		*o = "order"
	case 5:
		*o = "enroll"
	case 6:
		*o = "fill"
	case 7:
		*o = "signup"
	case 8:
		*o = "buy"
	case 9:
		*o = "ticket"
	case 10:
		*o = "write"
	case 11:
		*o = "open"
	case 12:
		*o = "learn_more"
	case 13:
		*o = "view"
	case 14:
		*o = "go_to"
	case 15:
		*o = "contact"
	case 16:
		*o = "watch"
	case 17:
		*o = "play"
	case 18:
		*o = "install"
	case 19:
		*o = "read"
	case 20:
		*o = "calendar"
	}
}

func fillRandomly_Stories_ViewersItem(o *Stories_ViewersItem) {
	(*o).IsLiked = randBool()
	(*o).User = new(Users_UserFull)
	fillRandomly_Users_UserFull((*o).User)
	(*o).UserId = randInt()
}

func fillRandomly_Users_Career(o *Users_Career) {
	(*o).CityId = new(int)
	*(*o).CityId = randInt()
	(*o).CityName = new(string)
	*(*o).CityName = randString()
	(*o).Company = new(string)
	*(*o).Company = randString()
	(*o).CountryId = new(int)
	*(*o).CountryId = randInt()
	(*o).From = new(int)
	*(*o).From = randInt()
	(*o).GroupId = new(int)
	*(*o).GroupId = randInt()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Position = new(string)
	*(*o).Position = randString()
	(*o).Until = new(int)
	*(*o).Until = randInt()
}

func fillRandomly_Users_Exports(o *Users_Exports) {
	(*o).Facebook = new(int)
	*(*o).Facebook = randInt()
	(*o).Livejournal = new(int)
	*(*o).Livejournal = randInt()
	(*o).Twitter = new(int)
	*(*o).Twitter = randInt()
}

func fillRandomly_Users_Fields(o *Users_Fields) {
	switch randIntn(109) {
	case 0:
		*o = "first_name_nom"
	case 1:
		*o = "first_name_gen"
	case 2:
		*o = "first_name_dat"
	case 3:
		*o = "first_name_acc"
	case 4:
		*o = "first_name_ins"
	case 5:
		*o = "first_name_abl"
	case 6:
		*o = "last_name_nom"
	case 7:
		*o = "last_name_gen"
	case 8:
		*o = "last_name_dat"
	case 9:
		*o = "last_name_acc"
	case 10:
		*o = "last_name_ins"
	case 11:
		*o = "last_name_abl"
	case 12:
		*o = "photo_id"
	case 13:
		*o = "verified"
	case 14:
		*o = "sex"
	case 15:
		*o = "bdate"
	case 16:
		*o = "bdate_visibility"
	case 17:
		*o = "city"
	case 18:
		*o = "country"
	case 19:
		*o = "home_town"
	case 20:
		*o = "has_photo"
	case 21:
		*o = "photo"
	case 22:
		*o = "photo_rec"
	case 23:
		*o = "photo_50"
	case 24:
		*o = "photo_100"
	case 25:
		*o = "photo_200_orig"
	case 26:
		*o = "photo_200"
	case 27:
		*o = "photo_400"
	case 28:
		*o = "photo_400_orig"
	case 29:
		*o = "photo_big"
	case 30:
		*o = "photo_medium"
	case 31:
		*o = "photo_medium_rec"
	case 32:
		*o = "photo_max"
	case 33:
		*o = "photo_max_orig"
	case 34:
		*o = "photo_max_size"
	case 35:
		*o = "third_party_buttons"
	case 36:
		*o = "online"
	case 37:
		*o = "lists"
	case 38:
		*o = "domain"
	case 39:
		*o = "has_mobile"
	case 40:
		*o = "contacts"
	case 41:
		*o = "language"
	case 42:
		*o = "site"
	case 43:
		*o = "education"
	case 44:
		*o = "universities"
	case 45:
		*o = "schools"
	case 46:
		*o = "status"
	case 47:
		*o = "last_seen"
	case 48:
		*o = "followers_count"
	case 49:
		*o = "counters"
	case 50:
		*o = "common_count"
	case 51:
		*o = "online_info"
	case 52:
		*o = "occupation"
	case 53:
		*o = "nickname"
	case 54:
		*o = "relatives"
	case 55:
		*o = "relation"
	case 56:
		*o = "personal"
	case 57:
		*o = "connections"
	case 58:
		*o = "exports"
	case 59:
		*o = "wall_comments"
	case 60:
		*o = "wall_default"
	case 61:
		*o = "activities"
	case 62:
		*o = "activity"
	case 63:
		*o = "interests"
	case 64:
		*o = "music"
	case 65:
		*o = "movies"
	case 66:
		*o = "tv"
	case 67:
		*o = "books"
	case 68:
		*o = "is_no_index"
	case 69:
		*o = "games"
	case 70:
		*o = "about"
	case 71:
		*o = "quotes"
	case 72:
		*o = "can_post"
	case 73:
		*o = "can_see_all_posts"
	case 74:
		*o = "can_see_audio"
	case 75:
		*o = "can_see_gifts"
	case 76:
		*o = "work"
	case 77:
		*o = "places"
	case 78:
		*o = "can_write_private_message"
	case 79:
		*o = "can_send_friend_request"
	case 80:
		*o = "can_upload_doc"
	case 81:
		*o = "is_favorite"
	case 82:
		*o = "is_hidden_from_feed"
	case 83:
		*o = "timezone"
	case 84:
		*o = "screen_name"
	case 85:
		*o = "maiden_name"
	case 86:
		*o = "crop_photo"
	case 87:
		*o = "is_friend"
	case 88:
		*o = "friend_status"
	case 89:
		*o = "career"
	case 90:
		*o = "military"
	case 91:
		*o = "blacklisted"
	case 92:
		*o = "blacklisted_by_me"
	case 93:
		*o = "can_subscribe_posts"
	case 94:
		*o = "descriptions"
	case 95:
		*o = "trending"
	case 96:
		*o = "mutual"
	case 97:
		*o = "friendship_weeks"
	case 98:
		*o = "can_invite_to_chats"
	case 99:
		*o = "stories_archive_count"
	case 100:
		*o = "has_unseen_stories"
	case 101:
		*o = "video_live"
	case 102:
		*o = "video_live_level"
	case 103:
		*o = "video_live_count"
	case 104:
		*o = "clips_count"
	case 105:
		*o = "service_description"
	case 106:
		*o = "can_see_wishes"
	case 107:
		*o = "is_subscribed_podcasts"
	case 108:
		*o = "can_subscribe_podcasts"
	}
}

func fillRandomly_Users_LastSeen(o *Users_LastSeen) {
	(*o).Platform = new(int)
	*(*o).Platform = randInt()
	(*o).Time = new(int)
	*(*o).Time = randInt()
}

func fillRandomly_Users_Military(o *Users_Military) {
	(*o).CountryId = randInt()
	(*o).From = new(int)
	*(*o).From = randInt()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Unit = randString()
	(*o).UnitId = randInt()
	(*o).Until = new(int)
	*(*o).Until = randInt()
}

func fillRandomly_Users_Occupation(o *Users_Occupation) {
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).Type = new(string)
	*(*o).Type = randString()
}

func fillRandomly_Users_OnlineInfo_Status(o *Users_OnlineInfo_Status) {
	switch randIntn(5) {
	case 0:
		*o = "recently"
	case 1:
		*o = "last_week"
	case 2:
		*o = "last_month"
	case 3:
		*o = "long_ago"
	case 4:
		*o = "not_show"
	}
}

func fillRandomly_Users_OnlineInfo(o *Users_OnlineInfo) {
	(*o).AppId = new(int)
	*(*o).AppId = randInt()
	(*o).IsMobile = new(bool)
	*(*o).IsMobile = randBool()
	(*o).IsOnline = new(bool)
	*(*o).IsOnline = randBool()
	(*o).LastSeen = new(int)
	*(*o).LastSeen = randInt()
	(*o).Status = new(Users_OnlineInfo_Status)
	fillRandomly_Users_OnlineInfo_Status((*o).Status)
	(*o).Visible = randBool()
}

func fillRandomly_Users_Personal(o *Users_Personal) {
	(*o).Alcohol = new(int)
	*(*o).Alcohol = randInt()
	(*o).InspiredBy = new(string)
	*(*o).InspiredBy = randString()
	(*o).Langs = new([]string)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Langs = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Langs)[i0] = randString()
	}
	(*o).LifeMain = new(int)
	*(*o).LifeMain = randInt()
	(*o).PeopleMain = new(int)
	*(*o).PeopleMain = randInt()
	(*o).Political = new(int)
	*(*o).Political = randInt()
	(*o).Religion = new(string)
	*(*o).Religion = randString()
	(*o).ReligionId = new(int)
	*(*o).ReligionId = randInt()
	(*o).Smoking = new(int)
	*(*o).Smoking = randInt()
}

func fillRandomly_Users_Relative_Type(o *Users_Relative_Type) {
	switch randIntn(5) {
	case 0:
		*o = "parent"
	case 1:
		*o = "child"
	case 2:
		*o = "grandparent"
	case 3:
		*o = "grandchild"
	case 4:
		*o = "sibling"
	}
}

func fillRandomly_Users_Relative(o *Users_Relative) {
	(*o).BirthDate = new(string)
	*(*o).BirthDate = randString()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Name = new(string)
	*(*o).Name = randString()
	fillRandomly_Users_Relative_Type(&(*o).Type)
}

func fillRandomly_Users_School(o *Users_School) {
	(*o).City = new(int)
	*(*o).City = randInt()
	(*o).Class = new(string)
	*(*o).Class = randString()
	(*o).Country = new(int)
	*(*o).Country = randInt()
	(*o).Id = new(string)
	*(*o).Id = randString()
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).Speciality = new(string)
	*(*o).Speciality = randString()
	(*o).Type = new(int)
	*(*o).Type = randInt()
	(*o).TypeStr = new(string)
	*(*o).TypeStr = randString()
	(*o).YearFrom = new(int)
	*(*o).YearFrom = randInt()
	(*o).YearGraduated = new(int)
	*(*o).YearGraduated = randInt()
	(*o).YearTo = new(int)
	*(*o).YearTo = randInt()
}

func fillRandomly_Users_SubscriptionsItem(o *Users_SubscriptionsItem) {
	var rawJSON []byte
	switch randIntn(2) {
	case 0:
		r := new(Users_UserXtrType)
		fillRandomly_Users_UserXtrType(r)
		rawJSON, _ = json.Marshal(*r)
	case 1:
		r := new(Groups_GroupFull)
		fillRandomly_Groups_GroupFull(r)
		rawJSON, _ = json.Marshal(*r)
	}
	o.raw = rawJSON
}

func fillRandomly_Users_University(o *Users_University) {
	(*o).Chair = new(int)
	*(*o).Chair = randInt()
	(*o).ChairName = new(string)
	*(*o).ChairName = randString()
	(*o).City = new(int)
	*(*o).City = randInt()
	(*o).Country = new(int)
	*(*o).Country = randInt()
	(*o).EducationForm = new(string)
	*(*o).EducationForm = randString()
	(*o).EducationStatus = new(string)
	*(*o).EducationStatus = randString()
	(*o).Faculty = new(int)
	*(*o).Faculty = randInt()
	(*o).FacultyName = new(string)
	*(*o).FacultyName = randString()
	(*o).Graduation = new(int)
	*(*o).Graduation = randInt()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).UniversityGroupId = new(int)
	*(*o).UniversityGroupId = randInt()
}

func fillRandomly_Users_User(o *Users_User) {
	fillRandomly_Users_UserMin(&(*o).Users_UserMin)
	(*o).FriendStatus = new(Friends_FriendStatusStatus)
	fillRandomly_Friends_FriendStatusStatus((*o).FriendStatus)
	(*o).Mutual = new(Friends_RequestsMutual)
	fillRandomly_Friends_RequestsMutual((*o).Mutual)
	(*o).Online = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Online)
	(*o).OnlineApp = new(int)
	*(*o).OnlineApp = randInt()
	(*o).OnlineInfo = new(Users_OnlineInfo)
	fillRandomly_Users_OnlineInfo((*o).OnlineInfo)
	(*o).OnlineMobile = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).OnlineMobile)
	(*o).Photo100 = new(string)
	*(*o).Photo100 = randString()
	(*o).Photo50 = new(string)
	*(*o).Photo50 = randString()
	(*o).ScreenName = new(string)
	*(*o).ScreenName = randString()
	(*o).Sex = new(Base_Sex)
	fillRandomly_Base_Sex((*o).Sex)
	(*o).Trending = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Trending)
	(*o).Verified = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Verified)
}

func fillRandomly_Users_UserConnections(o *Users_UserConnections) {
	(*o).Facebook = randString()
	(*o).FacebookName = new(string)
	*(*o).FacebookName = randString()
	(*o).Instagram = randString()
	(*o).Livejournal = new(string)
	*(*o).Livejournal = randString()
	(*o).Skype = randString()
	(*o).Twitter = randString()
}

func fillRandomly_Users_UserCounters(o *Users_UserCounters) {
	(*o).Albums = new(int)
	*(*o).Albums = randInt()
	(*o).Articles = new(int)
	*(*o).Articles = randInt()
	(*o).Audios = new(int)
	*(*o).Audios = randInt()
	(*o).Badges = new(int)
	*(*o).Badges = randInt()
	(*o).Clips = new(int)
	*(*o).Clips = randInt()
	(*o).ClipsFollowers = new(int)
	*(*o).ClipsFollowers = randInt()
	(*o).Followers = new(int)
	*(*o).Followers = randInt()
	(*o).Friends = new(int)
	*(*o).Friends = randInt()
	(*o).Gifts = new(int)
	*(*o).Gifts = randInt()
	(*o).Groups = new(int)
	*(*o).Groups = randInt()
	(*o).MutualFriends = new(int)
	*(*o).MutualFriends = randInt()
	(*o).NewPhotoTags = new(int)
	*(*o).NewPhotoTags = randInt()
	(*o).NewRecognitionTags = new(int)
	*(*o).NewRecognitionTags = randInt()
	(*o).Notes = new(int)
	*(*o).Notes = randInt()
	(*o).OnlineFriends = new(int)
	*(*o).OnlineFriends = randInt()
	(*o).Pages = new(int)
	*(*o).Pages = randInt()
	(*o).Photos = new(int)
	*(*o).Photos = randInt()
	(*o).Podcasts = new(int)
	*(*o).Podcasts = randInt()
	(*o).Posts = new(int)
	*(*o).Posts = randInt()
	(*o).Subscriptions = new(int)
	*(*o).Subscriptions = randInt()
	(*o).UserPhotos = new(int)
	*(*o).UserPhotos = randInt()
	(*o).UserVideos = new(int)
	*(*o).UserVideos = randInt()
	(*o).Videos = new(int)
	*(*o).Videos = randInt()
	(*o).Wishes = new(int)
	*(*o).Wishes = randInt()
}

func fillRandomly_Users_UserFull_WallDefault(o *Users_UserFull_WallDefault) {
	switch randIntn(2) {
	case 0:
		*o = "owner"
	case 1:
		*o = "all"
	}
}

func fillRandomly_Users_UserFull(o *Users_UserFull) {
	fillRandomly_Users_User(&(*o).Users_User)
	(*o).About = new(string)
	*(*o).About = randString()
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).Activities = new(string)
	*(*o).Activities = randString()
	(*o).Activity = new(string)
	*(*o).Activity = randString()
	(*o).Bdate = new(string)
	*(*o).Bdate = randString()
	(*o).Blacklisted = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Blacklisted)
	(*o).BlacklistedByMe = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).BlacklistedByMe)
	(*o).Books = new(string)
	*(*o).Books = randString()
	(*o).CanBeInvitedGroup = new(bool)
	*(*o).CanBeInvitedGroup = randBool()
	(*o).CanCall = new(bool)
	*(*o).CanCall = randBool()
	(*o).CanCallFromGroup = new(bool)
	*(*o).CanCallFromGroup = randBool()
	(*o).CanPost = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanPost)
	(*o).CanSeeAllPosts = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanSeeAllPosts)
	(*o).CanSeeAudio = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanSeeAudio)
	(*o).CanSeeGifts = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanSeeGifts)
	(*o).CanSeeWishes = new(bool)
	*(*o).CanSeeWishes = randBool()
	(*o).CanSendFriendRequest = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanSendFriendRequest)
	(*o).CanSubscribePodcasts = new(bool)
	*(*o).CanSubscribePodcasts = randBool()
	(*o).CanSubscribePosts = new(bool)
	*(*o).CanSubscribePosts = randBool()
	(*o).CanUploadDoc = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanUploadDoc)
	(*o).CanWritePrivateMessage = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanWritePrivateMessage)
	(*o).Career = new([]Users_Career)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Career = make([]Users_Career, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Users_Career(&(*(*o).Career)[i0])
	}
	(*o).City = new(Base_City)
	fillRandomly_Base_City((*o).City)
	(*o).ClipsCount = new(int)
	*(*o).ClipsCount = randInt()
	(*o).CommonCount = new(int)
	*(*o).CommonCount = randInt()
	(*o).ContactId = new(int)
	*(*o).ContactId = randInt()
	(*o).ContactName = new(string)
	*(*o).ContactName = randString()
	(*o).Counters = new(Users_UserCounters)
	fillRandomly_Users_UserCounters((*o).Counters)
	(*o).Country = new(Base_Country)
	fillRandomly_Base_Country((*o).Country)
	(*o).CropPhoto = new(Base_CropPhoto)
	fillRandomly_Base_CropPhoto((*o).CropPhoto)
	(*o).Descriptions = new([]string)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Descriptions = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Descriptions)[i0] = randString()
	}
	(*o).Domain = new(string)
	*(*o).Domain = randString()
	(*o).EducationForm = new(string)
	*(*o).EducationForm = randString()
	(*o).EducationStatus = new(string)
	*(*o).EducationStatus = randString()
	(*o).Email = new(string)
	*(*o).Email = randString()
	(*o).Exports = new(Users_Exports)
	fillRandomly_Users_Exports((*o).Exports)
	(*o).Facebook = new(string)
	*(*o).Facebook = randString()
	(*o).FacebookName = new(string)
	*(*o).FacebookName = randString()
	(*o).Faculty = new(int)
	*(*o).Faculty = randInt()
	(*o).FacultyName = new(string)
	*(*o).FacultyName = randString()
	(*o).FirstNameAbl = new(string)
	*(*o).FirstNameAbl = randString()
	(*o).FirstNameAcc = new(string)
	*(*o).FirstNameAcc = randString()
	(*o).FirstNameDat = new(string)
	*(*o).FirstNameDat = randString()
	(*o).FirstNameGen = new(string)
	*(*o).FirstNameGen = randString()
	(*o).FirstNameIns = new(string)
	*(*o).FirstNameIns = randString()
	(*o).FirstNameNom = new(string)
	*(*o).FirstNameNom = randString()
	(*o).FollowersCount = new(int)
	*(*o).FollowersCount = randInt()
	(*o).Games = new(string)
	*(*o).Games = randString()
	(*o).Graduation = new(int)
	*(*o).Graduation = randInt()
	(*o).HasMobile = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).HasMobile)
	(*o).HasPhoto = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).HasPhoto)
	(*o).HasUnseenStories = new(bool)
	*(*o).HasUnseenStories = randBool()
	(*o).Hash = new(string)
	*(*o).Hash = randString()
	(*o).HomePhone = new(string)
	*(*o).HomePhone = randString()
	(*o).HomeTown = new(string)
	*(*o).HomeTown = randString()
	(*o).Instagram = new(string)
	*(*o).Instagram = randString()
	(*o).Interests = new(string)
	*(*o).Interests = randString()
	(*o).IsFavorite = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsFavorite)
	(*o).IsFriend = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsFriend)
	(*o).IsHiddenFromFeed = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsHiddenFromFeed)
	(*o).IsMessageRequest = new(bool)
	*(*o).IsMessageRequest = randBool()
	(*o).IsNoIndex = new(bool)
	*(*o).IsNoIndex = randBool()
	(*o).IsService = new(bool)
	*(*o).IsService = randBool()
	(*o).IsSubscribedPodcasts = new(bool)
	*(*o).IsSubscribedPodcasts = randBool()
	(*o).IsVideoLiveNotificationsBlocked = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsVideoLiveNotificationsBlocked)
	(*o).Language = new(string)
	*(*o).Language = randString()
	(*o).LastNameAbl = new(string)
	*(*o).LastNameAbl = randString()
	(*o).LastNameAcc = new(string)
	*(*o).LastNameAcc = randString()
	(*o).LastNameDat = new(string)
	*(*o).LastNameDat = randString()
	(*o).LastNameGen = new(string)
	*(*o).LastNameGen = randString()
	(*o).LastNameIns = new(string)
	*(*o).LastNameIns = randString()
	(*o).LastNameNom = new(string)
	*(*o).LastNameNom = randString()
	(*o).LastSeen = new(Users_LastSeen)
	fillRandomly_Users_LastSeen((*o).LastSeen)
	(*o).Lists = new([]int)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Lists = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Lists)[i0] = randInt()
	}
	(*o).Livejournal = new(string)
	*(*o).Livejournal = randString()
	(*o).MaidenName = new(string)
	*(*o).MaidenName = randString()
	(*o).Military = new([]Users_Military)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Military = make([]Users_Military, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Users_Military(&(*(*o).Military)[i0])
	}
	(*o).MobilePhone = new(string)
	*(*o).MobilePhone = randString()
	(*o).Movies = new(string)
	*(*o).Movies = randString()
	(*o).Music = new(string)
	*(*o).Music = randString()
	(*o).Nickname = new(string)
	*(*o).Nickname = randString()
	(*o).Occupation = new(Users_Occupation)
	fillRandomly_Users_Occupation((*o).Occupation)
	(*o).OwnerState = new(Owner_State)
	fillRandomly_Owner_State((*o).OwnerState)
	(*o).Personal = new(Users_Personal)
	fillRandomly_Users_Personal((*o).Personal)
	(*o).Photo = new(string)
	*(*o).Photo = randString()
	(*o).Photo200 = new(string)
	*(*o).Photo200 = randString()
	(*o).Photo200Orig = new(string)
	*(*o).Photo200Orig = randString()
	(*o).Photo400 = new(string)
	*(*o).Photo400 = randString()
	(*o).Photo400Orig = new(string)
	*(*o).Photo400Orig = randString()
	(*o).PhotoBig = new(string)
	*(*o).PhotoBig = randString()
	(*o).PhotoId = new(string)
	*(*o).PhotoId = randString()
	(*o).PhotoMax = new(string)
	*(*o).PhotoMax = randString()
	(*o).PhotoMaxOrig = new(string)
	*(*o).PhotoMaxOrig = randString()
	(*o).PhotoMaxSize = new(Photos_Photo)
	fillRandomly_Photos_Photo((*o).PhotoMaxSize)
	(*o).PhotoMedium = new(Photos_PhotoFalseable)
	fillRandomly_Photos_PhotoFalseable((*o).PhotoMedium)
	(*o).PhotoMediumRec = new(Photos_PhotoFalseable)
	fillRandomly_Photos_PhotoFalseable((*o).PhotoMediumRec)
	(*o).PhotoRec = new(Photos_PhotoFalseable)
	fillRandomly_Photos_PhotoFalseable((*o).PhotoRec)
	(*o).Quotes = new(string)
	*(*o).Quotes = randString()
	(*o).Relation = new(Users_UserRelation)
	fillRandomly_Users_UserRelation((*o).Relation)
	(*o).RelationPartner = new(Users_UserMin)
	fillRandomly_Users_UserMin((*o).RelationPartner)
	(*o).Relatives = new([]Users_Relative)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Relatives = make([]Users_Relative, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Users_Relative(&(*(*o).Relatives)[i0])
	}
	(*o).Schools = new([]Users_School)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Schools = make([]Users_School, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Users_School(&(*(*o).Schools)[i0])
	}
	(*o).ServiceDescription = new(string)
	*(*o).ServiceDescription = randString()
	(*o).Site = new(string)
	*(*o).Site = randString()
	(*o).Skype = new(string)
	*(*o).Skype = randString()
	(*o).Status = new(string)
	*(*o).Status = randString()
	(*o).StatusAudio = new(Audio_Audio)
	fillRandomly_Audio_Audio((*o).StatusAudio)
	(*o).StoriesArchiveCount = new(int)
	*(*o).StoriesArchiveCount = randInt()
	(*o).Test = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Test)
	(*o).Timezone = new(float64)
	*(*o).Timezone = randFloat()
	(*o).Tv = new(string)
	*(*o).Tv = randString()
	(*o).Twitter = new(string)
	*(*o).Twitter = randString()
	(*o).Type = new(Users_UserType)
	fillRandomly_Users_UserType((*o).Type)
	(*o).Universities = new([]Users_University)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Universities = make([]Users_University, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Users_University(&(*(*o).Universities)[i0])
	}
	(*o).University = new(int)
	*(*o).University = randInt()
	(*o).UniversityGroupId = new(int)
	*(*o).UniversityGroupId = randInt()
	(*o).UniversityName = new(string)
	*(*o).UniversityName = randString()
	(*o).VideoLive = new(Video_LiveInfo)
	fillRandomly_Video_LiveInfo((*o).VideoLive)
	(*o).VideoLiveCount = new(int)
	*(*o).VideoLiveCount = randInt()
	(*o).VideoLiveLevel = new(int)
	*(*o).VideoLiveLevel = randInt()
	(*o).WallComments = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).WallComments)
	(*o).WallDefault = new(Users_UserFull_WallDefault)
	fillRandomly_Users_UserFull_WallDefault((*o).WallDefault)
}

func fillRandomly_Users_UserMin(o *Users_UserMin) {
	(*o).CanAccessClosed = new(bool)
	*(*o).CanAccessClosed = randBool()
	(*o).Deactivated = new(string)
	*(*o).Deactivated = randString()
	(*o).FirstName = new(string)
	*(*o).FirstName = randString()
	(*o).Hidden = new(int)
	*(*o).Hidden = randInt()
	(*o).Id = randInt()
	(*o).IsClosed = new(bool)
	*(*o).IsClosed = randBool()
	(*o).LastName = new(string)
	*(*o).LastName = randString()
}

func fillRandomly_Users_UserRelation(o *Users_UserRelation) {
	switch randIntn(9) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 2
	case 3:
		*o = 3
	case 4:
		*o = 4
	case 5:
		*o = 5
	case 6:
		*o = 6
	case 7:
		*o = 7
	case 8:
		*o = 8
	}
}

func fillRandomly_Users_UserSettingsXtr(o *Users_UserSettingsXtr) {
	(*o).Bdate = new(string)
	*(*o).Bdate = randString()
	(*o).BdateVisibility = new(int)
	*(*o).BdateVisibility = randInt()
	(*o).City = new(Base_City)
	fillRandomly_Base_City((*o).City)
	(*o).Connections = new(Users_UserConnections)
	fillRandomly_Users_UserConnections((*o).Connections)
	(*o).Country = new(Base_Country)
	fillRandomly_Base_Country((*o).Country)
	(*o).FirstName = new(string)
	*(*o).FirstName = randString()
	(*o).HomeTown = randString()
	(*o).Interests = new(Account_UserSettingsInterests)
	fillRandomly_Account_UserSettingsInterests((*o).Interests)
	(*o).Languages = new([]string)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Languages = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Languages)[i0] = randString()
	}
	(*o).LastName = new(string)
	*(*o).LastName = randString()
	(*o).MaidenName = new(string)
	*(*o).MaidenName = randString()
	(*o).NameRequest = new(Account_NameRequest)
	fillRandomly_Account_NameRequest((*o).NameRequest)
	(*o).Personal = new(Users_Personal)
	fillRandomly_Users_Personal((*o).Personal)
	(*o).Phone = new(string)
	*(*o).Phone = randString()
	(*o).Relation = new(Users_UserRelation)
	fillRandomly_Users_UserRelation((*o).Relation)
	(*o).RelationPartner = new(Users_UserMin)
	fillRandomly_Users_UserMin((*o).RelationPartner)
	(*o).RelationPending = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).RelationPending)
	(*o).RelationRequests = new([]Users_UserMin)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).RelationRequests = make([]Users_UserMin, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Users_UserMin(&(*(*o).RelationRequests)[i0])
	}
	(*o).ScreenName = new(string)
	*(*o).ScreenName = randString()
	(*o).Sex = new(Base_Sex)
	fillRandomly_Base_Sex((*o).Sex)
	(*o).Status = randString()
	(*o).StatusAudio = new(Audio_Audio)
	fillRandomly_Audio_Audio((*o).StatusAudio)
}

func fillRandomly_Users_UserType(o *Users_UserType) {
	switch randIntn(1) {
	case 0:
		*o = "profile"
	}
}

func fillRandomly_Users_UserXtrType(o *Users_UserXtrType) {
	fillRandomly_Users_User(&(*o).Users_User)
	(*o).Type = new(Users_UserType)
	fillRandomly_Users_UserType((*o).Type)
}

func fillRandomly_Users_UsersArray(o *Users_UsersArray) {
	(*o).Count = randInt()
	l0 := randIntn(maxArrayLength + 1)
	(*o).Items = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Items)[i0] = randInt()
	}
}

func fillRandomly_Utils_DomainResolved(o *Utils_DomainResolved) {
	(*o).GroupId = new(int)
	*(*o).GroupId = randInt()
	(*o).ObjectId = new(int)
	*(*o).ObjectId = randInt()
	(*o).Type = new(Utils_DomainResolvedType)
	fillRandomly_Utils_DomainResolvedType((*o).Type)
}

func fillRandomly_Utils_DomainResolvedType(o *Utils_DomainResolvedType) {
	switch randIntn(6) {
	case 0:
		*o = "user"
	case 1:
		*o = "group"
	case 2:
		*o = "application"
	case 3:
		*o = "page"
	case 4:
		*o = "vk_app"
	case 5:
		*o = "community_application"
	}
}

func fillRandomly_Utils_LastShortenedLink(o *Utils_LastShortenedLink) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).Key = new(string)
	*(*o).Key = randString()
	(*o).ShortUrl = new(string)
	*(*o).ShortUrl = randString()
	(*o).Timestamp = new(int)
	*(*o).Timestamp = randInt()
	(*o).Url = new(string)
	*(*o).Url = randString()
	(*o).Views = new(int)
	*(*o).Views = randInt()
}

func fillRandomly_Utils_LinkChecked(o *Utils_LinkChecked) {
	(*o).Link = new(string)
	*(*o).Link = randString()
	(*o).Status = new(Utils_LinkCheckedStatus)
	fillRandomly_Utils_LinkCheckedStatus((*o).Status)
}

func fillRandomly_Utils_LinkCheckedStatus(o *Utils_LinkCheckedStatus) {
	switch randIntn(3) {
	case 0:
		*o = "not_banned"
	case 1:
		*o = "banned"
	case 2:
		*o = "processing"
	}
}

func fillRandomly_Utils_LinkStats(o *Utils_LinkStats) {
	(*o).Key = new(string)
	*(*o).Key = randString()
	(*o).Stats = new([]Utils_Stats)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Stats = make([]Utils_Stats, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Utils_Stats(&(*(*o).Stats)[i0])
	}
}

func fillRandomly_Utils_LinkStatsExtended(o *Utils_LinkStatsExtended) {
	(*o).Key = new(string)
	*(*o).Key = randString()
	(*o).Stats = new([]Utils_StatsExtended)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Stats = make([]Utils_StatsExtended, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Utils_StatsExtended(&(*(*o).Stats)[i0])
	}
}

func fillRandomly_Utils_ShortLink(o *Utils_ShortLink) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).Key = new(string)
	*(*o).Key = randString()
	(*o).ShortUrl = new(string)
	*(*o).ShortUrl = randString()
	(*o).Url = new(string)
	*(*o).Url = randString()
}

func fillRandomly_Utils_Stats(o *Utils_Stats) {
	(*o).Timestamp = new(int)
	*(*o).Timestamp = randInt()
	(*o).Views = new(int)
	*(*o).Views = randInt()
}

func fillRandomly_Utils_StatsCity(o *Utils_StatsCity) {
	(*o).CityId = new(int)
	*(*o).CityId = randInt()
	(*o).Views = new(int)
	*(*o).Views = randInt()
}

func fillRandomly_Utils_StatsCountry(o *Utils_StatsCountry) {
	(*o).CountryId = new(int)
	*(*o).CountryId = randInt()
	(*o).Views = new(int)
	*(*o).Views = randInt()
}

func fillRandomly_Utils_StatsExtended(o *Utils_StatsExtended) {
	(*o).Cities = new([]Utils_StatsCity)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Cities = make([]Utils_StatsCity, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Utils_StatsCity(&(*(*o).Cities)[i0])
	}
	(*o).Countries = new([]Utils_StatsCountry)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Countries = make([]Utils_StatsCountry, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Utils_StatsCountry(&(*(*o).Countries)[i0])
	}
	(*o).SexAge = new([]Utils_StatsSexAge)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).SexAge = make([]Utils_StatsSexAge, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Utils_StatsSexAge(&(*(*o).SexAge)[i0])
	}
	(*o).Timestamp = new(int)
	*(*o).Timestamp = randInt()
	(*o).Views = new(int)
	*(*o).Views = randInt()
}

func fillRandomly_Utils_StatsSexAge(o *Utils_StatsSexAge) {
	(*o).AgeRange = new(string)
	*(*o).AgeRange = randString()
	(*o).Female = new(int)
	*(*o).Female = randInt()
	(*o).Male = new(int)
	*(*o).Male = randInt()
}

func fillRandomly_Video_LiveInfo(o *Video_LiveInfo) {
	fillRandomly_Base_BoolInt(&(*o).Enabled)
	(*o).IsNotificationsBlocked = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsNotificationsBlocked)
}

func fillRandomly_Video_LiveSettings(o *Video_LiveSettings) {
	(*o).CanRewind = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanRewind)
	(*o).IsEndless = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsEndless)
	(*o).MaxDuration = new(int)
	*(*o).MaxDuration = randInt()
}

func fillRandomly_Video_SaveResult(o *Video_SaveResult) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).Description = new(string)
	*(*o).Description = randString()
	(*o).OwnerId = new(int)
	*(*o).OwnerId = randInt()
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).UploadUrl = new(string)
	*(*o).UploadUrl = randString()
	(*o).VideoId = new(int)
	*(*o).VideoId = randInt()
}

func fillRandomly_Video_Video_LiveStatus(o *Video_Video_LiveStatus) {
	switch randIntn(5) {
	case 0:
		*o = "waiting"
	case 1:
		*o = "started"
	case 2:
		*o = "finished"
	case 3:
		*o = "failed"
	case 4:
		*o = "upcoming"
	}
}

func fillRandomly_Video_Video_Type(o *Video_Video_Type) {
	switch randIntn(3) {
	case 0:
		*o = "video"
	case 1:
		*o = "music_video"
	case 2:
		*o = "movie"
	}
}

func fillRandomly_Video_Video(o *Video_Video) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).Added = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Added)
	(*o).AddingDate = new(int)
	*(*o).AddingDate = randInt()
	(*o).Balance = new(int)
	*(*o).Balance = randInt()
	(*o).CanAdd = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanAdd)
	(*o).CanAddToFaves = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanAddToFaves)
	(*o).CanAttachLink = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanAttachLink)
	(*o).CanComment = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanComment)
	(*o).CanEdit = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanEdit)
	(*o).CanLike = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanLike)
	(*o).CanRepost = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanRepost)
	(*o).CanSubscribe = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanSubscribe)
	(*o).Comments = new(int)
	*(*o).Comments = randInt()
	(*o).ContentRestricted = new(int)
	*(*o).ContentRestricted = randInt()
	(*o).ContentRestrictedMessage = new(string)
	*(*o).ContentRestrictedMessage = randString()
	(*o).Converting = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).Converting)
	(*o).Date = new(int)
	*(*o).Date = randInt()
	(*o).Description = new(string)
	*(*o).Description = randString()
	(*o).Duration = new(int)
	*(*o).Duration = randInt()
	(*o).FirstFrame = new([]Video_VideoImage)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).FirstFrame = make([]Video_VideoImage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Video_VideoImage(&(*(*o).FirstFrame)[i0])
	}
	(*o).Height = new(int)
	*(*o).Height = randInt()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Image = new([]Video_VideoImage)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).Image = make([]Video_VideoImage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Video_VideoImage(&(*(*o).Image)[i0])
	}
	(*o).IsFavorite = new(bool)
	*(*o).IsFavorite = randBool()
	(*o).IsPrivate = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsPrivate)
	(*o).IsSubscribed = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).IsSubscribed)
	(*o).Likes = new(Base_Likes)
	fillRandomly_Base_Likes((*o).Likes)
	(*o).Live = new(Base_PropertyExists)
	fillRandomly_Base_PropertyExists((*o).Live)
	(*o).LiveNotify = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).LiveNotify)
	(*o).LiveStartTime = new(int)
	*(*o).LiveStartTime = randInt()
	(*o).LiveStatus = new(Video_Video_LiveStatus)
	fillRandomly_Video_Video_LiveStatus((*o).LiveStatus)
	(*o).LocalViews = new(int)
	*(*o).LocalViews = randInt()
	(*o).OwnerId = new(int)
	*(*o).OwnerId = randInt()
	(*o).Platform = new(string)
	*(*o).Platform = randString()
	(*o).Player = new(string)
	*(*o).Player = randString()
	(*o).Processing = new(Base_PropertyExists)
	fillRandomly_Base_PropertyExists((*o).Processing)
	(*o).Repeat = new(Base_PropertyExists)
	fillRandomly_Base_PropertyExists((*o).Repeat)
	(*o).Reposts = new(Base_RepostsInfo)
	fillRandomly_Base_RepostsInfo((*o).Reposts)
	(*o).Spectators = new(int)
	*(*o).Spectators = randInt()
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).TrackCode = new(string)
	*(*o).TrackCode = randString()
	(*o).Type = new(Video_Video_Type)
	fillRandomly_Video_Video_Type((*o).Type)
	(*o).Upcoming = new(Base_PropertyExists)
	fillRandomly_Base_PropertyExists((*o).Upcoming)
	(*o).UserId = new(int)
	*(*o).UserId = randInt()
	(*o).Views = new(int)
	*(*o).Views = randInt()
	(*o).Width = new(int)
	*(*o).Width = randInt()
}

func fillRandomly_Video_VideoAlbum(o *Video_VideoAlbum) {
	(*o).Id = randInt()
	(*o).OwnerId = randInt()
	(*o).Title = randString()
}

func fillRandomly_Video_VideoAlbumFull(o *Video_VideoAlbumFull) {
	fillRandomly_Video_VideoAlbum(&(*o).Video_VideoAlbum)
	(*o).Count = randInt()
	(*o).Image = new([]Video_VideoImage)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Image = make([]Video_VideoImage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Video_VideoImage(&(*(*o).Image)[i0])
	}
	(*o).ImageBlur = new(Base_PropertyExists)
	fillRandomly_Base_PropertyExists((*o).ImageBlur)
	(*o).IsSystem = new(Base_PropertyExists)
	fillRandomly_Base_PropertyExists((*o).IsSystem)
	(*o).UpdatedTime = randInt()
}

func fillRandomly_Video_VideoFiles(o *Video_VideoFiles) {
	(*o).External = new(string)
	*(*o).External = randString()
	(*o).Flv320 = new(string)
	*(*o).Flv320 = randString()
	(*o).Mp41080 = new(string)
	*(*o).Mp41080 = randString()
	(*o).Mp4144 = new(string)
	*(*o).Mp4144 = randString()
	(*o).Mp41440 = new(string)
	*(*o).Mp41440 = randString()
	(*o).Mp42160 = new(string)
	*(*o).Mp42160 = randString()
	(*o).Mp4240 = new(string)
	*(*o).Mp4240 = randString()
	(*o).Mp4360 = new(string)
	*(*o).Mp4360 = randString()
	(*o).Mp4480 = new(string)
	*(*o).Mp4480 = randString()
	(*o).Mp4720 = new(string)
	*(*o).Mp4720 = randString()
}

func fillRandomly_Video_VideoFull(o *Video_VideoFull) {
	fillRandomly_Video_Video(&(*o).Video_Video)
	(*o).Files = new(Video_VideoFiles)
	fillRandomly_Video_VideoFiles((*o).Files)
	(*o).LiveSettings = new(Video_LiveSettings)
	fillRandomly_Video_LiveSettings((*o).LiveSettings)
	(*o).Trailer = new(Video_VideoFiles)
	fillRandomly_Video_VideoFiles((*o).Trailer)
}

func fillRandomly_Video_VideoImage(o *Video_VideoImage) {
	fillRandomly_Base_Image(&(*o).Base_Image)
	(*o).WithPadding = new(Base_PropertyExists)
	fillRandomly_Base_PropertyExists((*o).WithPadding)
}

func fillRandomly_Wall_AppPost(o *Wall_AppPost) {
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Name = new(string)
	*(*o).Name = randString()
	(*o).Photo130 = new(string)
	*(*o).Photo130 = randString()
	(*o).Photo604 = new(string)
	*(*o).Photo604 = randString()
}

func fillRandomly_Wall_AttachedNote(o *Wall_AttachedNote) {
	(*o).CanComment = new(int)
	*(*o).CanComment = randInt()
	(*o).Comments = randInt()
	(*o).Date = randInt()
	(*o).Id = randInt()
	(*o).OwnerId = randInt()
	(*o).PrivacyComment = new([]string)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).PrivacyComment = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).PrivacyComment)[i0] = randString()
	}
	(*o).PrivacyView = new([]string)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).PrivacyView = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).PrivacyView)[i0] = randString()
	}
	(*o).ReadComments = randInt()
	(*o).Text = new(string)
	*(*o).Text = randString()
	(*o).TextWiki = new(string)
	*(*o).TextWiki = randString()
	(*o).Title = randString()
	(*o).ViewUrl = randString()
}

func fillRandomly_Wall_CarouselBase(o *Wall_CarouselBase) {
	(*o).CarouselOffset = new(int)
	*(*o).CarouselOffset = randInt()
}

func fillRandomly_Wall_CommentAttachment(o *Wall_CommentAttachment) {
	(*o).Audio = new(Audio_Audio)
	fillRandomly_Audio_Audio((*o).Audio)
	(*o).Doc = new(Docs_Doc)
	fillRandomly_Docs_Doc((*o).Doc)
	(*o).Link = new(Base_Link)
	fillRandomly_Base_Link((*o).Link)
	(*o).Market = new(Market_MarketItem)
	fillRandomly_Market_MarketItem((*o).Market)
	(*o).MarketMarketAlbum = new(Market_MarketAlbum)
	fillRandomly_Market_MarketAlbum((*o).MarketMarketAlbum)
	(*o).Note = new(Wall_AttachedNote)
	fillRandomly_Wall_AttachedNote((*o).Note)
	(*o).Page = new(Pages_WikipageFull)
	fillRandomly_Pages_WikipageFull((*o).Page)
	(*o).Photo = new(Photos_Photo)
	fillRandomly_Photos_Photo((*o).Photo)
	(*o).Sticker = new(Base_Sticker)
	fillRandomly_Base_Sticker((*o).Sticker)
	fillRandomly_Wall_CommentAttachmentType(&(*o).Type)
	(*o).Video = new(Video_Video)
	fillRandomly_Video_Video((*o).Video)
}

func fillRandomly_Wall_CommentAttachmentType(o *Wall_CommentAttachmentType) {
	switch randIntn(10) {
	case 0:
		*o = "photo"
	case 1:
		*o = "audio"
	case 2:
		*o = "video"
	case 3:
		*o = "doc"
	case 4:
		*o = "link"
	case 5:
		*o = "note"
	case 6:
		*o = "page"
	case 7:
		*o = "market_market_album"
	case 8:
		*o = "market"
	case 9:
		*o = "sticker"
	}
}

func fillRandomly_Wall_Geo_Type(o *Wall_Geo_Type) {
	switch randIntn(2) {
	case 0:
		*o = "place"
	case 1:
		*o = "point"
	}
}

func fillRandomly_Wall_Geo(o *Wall_Geo) {
	(*o).Coordinates = new(string)
	*(*o).Coordinates = randString()
	(*o).Place = new(Base_Place)
	fillRandomly_Base_Place((*o).Place)
	(*o).Showmap = new(int)
	*(*o).Showmap = randInt()
	(*o).Type = new(Wall_Geo_Type)
	fillRandomly_Wall_Geo_Type((*o).Type)
}

func fillRandomly_Wall_GetFilter(o *Wall_GetFilter) {
	switch randIntn(7) {
	case 0:
		*o = "owner"
	case 1:
		*o = "others"
	case 2:
		*o = "all"
	case 3:
		*o = "postponed"
	case 4:
		*o = "suggests"
	case 5:
		*o = "archived"
	case 6:
		*o = "donut"
	}
}

func fillRandomly_Wall_Graffiti(o *Wall_Graffiti) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).Height = new(int)
	*(*o).Height = randInt()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).OwnerId = new(int)
	*(*o).OwnerId = randInt()
	(*o).Photo200 = new(string)
	*(*o).Photo200 = randString()
	(*o).Photo586 = new(string)
	*(*o).Photo586 = randString()
	(*o).Url = new(string)
	*(*o).Url = randString()
	(*o).Width = new(int)
	*(*o).Width = randInt()
}

func fillRandomly_Wall_PostCopyright(o *Wall_PostCopyright) {
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Link = randString()
	(*o).Name = randString()
	(*o).Type = randString()
}

func fillRandomly_Wall_PostSource(o *Wall_PostSource) {
	(*o).Data = new(string)
	*(*o).Data = randString()
	(*o).Link = new(Base_Link)
	fillRandomly_Base_Link((*o).Link)
	(*o).Platform = new(string)
	*(*o).Platform = randString()
	(*o).Type = new(Wall_PostSourceType)
	fillRandomly_Wall_PostSourceType((*o).Type)
	(*o).Url = new(string)
	*(*o).Url = randString()
}

func fillRandomly_Wall_PostSourceType(o *Wall_PostSourceType) {
	switch randIntn(6) {
	case 0:
		*o = "vk"
	case 1:
		*o = "widget"
	case 2:
		*o = "api"
	case 3:
		*o = "rss"
	case 4:
		*o = "sms"
	case 5:
		*o = "mvk"
	}
}

func fillRandomly_Wall_PostType(o *Wall_PostType) {
	switch randIntn(8) {
	case 0:
		*o = "post"
	case 1:
		*o = "copy"
	case 2:
		*o = "reply"
	case 3:
		*o = "postpone"
	case 4:
		*o = "suggest"
	case 5:
		*o = "post_ads"
	case 6:
		*o = "photo"
	case 7:
		*o = "video"
	}
}

func fillRandomly_Wall_PostedPhoto(o *Wall_PostedPhoto) {
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).OwnerId = new(int)
	*(*o).OwnerId = randInt()
	(*o).Photo130 = new(string)
	*(*o).Photo130 = randString()
	(*o).Photo604 = new(string)
	*(*o).Photo604 = randString()
}

func fillRandomly_Wall_Views(o *Wall_Views) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
}

func fillRandomly_Wall_WallComment(o *Wall_WallComment) {
	(*o).Attachments = new([]Wall_CommentAttachment)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Attachments = make([]Wall_CommentAttachment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Wall_CommentAttachment(&(*(*o).Attachments)[i0])
	}
	(*o).CanEdit = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanEdit)
	(*o).Date = randInt()
	(*o).Deleted = new(bool)
	*(*o).Deleted = randBool()
	(*o).Donut = new(Wall_WallCommentDonut)
	fillRandomly_Wall_WallCommentDonut((*o).Donut)
	(*o).FromId = randInt()
	(*o).Id = randInt()
	(*o).Likes = new(Base_LikesInfo)
	fillRandomly_Base_LikesInfo((*o).Likes)
	(*o).OwnerId = new(int)
	*(*o).OwnerId = randInt()
	(*o).ParentsStack = new([]int)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).ParentsStack = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).ParentsStack)[i0] = randInt()
	}
	(*o).PhotoId = new(int)
	*(*o).PhotoId = randInt()
	(*o).Pid = new(int)
	*(*o).Pid = randInt()
	(*o).PostId = new(int)
	*(*o).PostId = randInt()
	(*o).RealOffset = new(int)
	*(*o).RealOffset = randInt()
	(*o).ReplyToComment = new(int)
	*(*o).ReplyToComment = randInt()
	(*o).ReplyToUser = new(int)
	*(*o).ReplyToUser = randInt()
	(*o).Text = randString()
	(*o).Thread = new(Comment_Thread)
	fillRandomly_Comment_Thread((*o).Thread)
	(*o).VideoId = new(int)
	*(*o).VideoId = randInt()
}

func fillRandomly_Wall_WallCommentDonut(o *Wall_WallCommentDonut) {
	(*o).IsDon = new(bool)
	*(*o).IsDon = randBool()
	(*o).Placeholder = new(Wall_WallCommentDonutPlaceholder)
	fillRandomly_Wall_WallCommentDonutPlaceholder((*o).Placeholder)
}

func fillRandomly_Wall_WallCommentDonutPlaceholder(o *Wall_WallCommentDonutPlaceholder) {
	(*o).Text = randString()
}

func fillRandomly_Wall_Wallpost(o *Wall_Wallpost) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).Attachments = new([]Wall_WallpostAttachment)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Attachments = make([]Wall_WallpostAttachment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Wall_WallpostAttachment(&(*(*o).Attachments)[i0])
	}
	(*o).Copyright = new(Wall_PostCopyright)
	fillRandomly_Wall_PostCopyright((*o).Copyright)
	(*o).Date = new(int)
	*(*o).Date = randInt()
	(*o).Edited = new(int)
	*(*o).Edited = randInt()
	(*o).FromId = new(int)
	*(*o).FromId = randInt()
	(*o).Geo = new(Wall_Geo)
	fillRandomly_Wall_Geo((*o).Geo)
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).IsArchived = new(bool)
	*(*o).IsArchived = randBool()
	(*o).IsDeleted = new(bool)
	*(*o).IsDeleted = randBool()
	(*o).IsFavorite = new(bool)
	*(*o).IsFavorite = randBool()
	(*o).Likes = new(Base_LikesInfo)
	fillRandomly_Base_LikesInfo((*o).Likes)
	(*o).OwnerId = new(int)
	*(*o).OwnerId = randInt()
	(*o).ParentsStack = new([]int)
	l0 = randIntn(maxArrayLength + 1)
	*(*o).ParentsStack = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).ParentsStack)[i0] = randInt()
	}
	(*o).PostId = new(int)
	*(*o).PostId = randInt()
	(*o).PostSource = new(Wall_PostSource)
	fillRandomly_Wall_PostSource((*o).PostSource)
	(*o).PostType = new(Wall_PostType)
	fillRandomly_Wall_PostType((*o).PostType)
	(*o).Reposts = new(Base_RepostsInfo)
	fillRandomly_Base_RepostsInfo((*o).Reposts)
	(*o).SignerId = new(int)
	*(*o).SignerId = randInt()
	(*o).Text = new(string)
	*(*o).Text = randString()
	(*o).Views = new(Wall_Views)
	fillRandomly_Wall_Views((*o).Views)
}

func fillRandomly_Wall_WallpostAttachment(o *Wall_WallpostAttachment) {
	(*o).AccessKey = new(string)
	*(*o).AccessKey = randString()
	(*o).Album = new(Photos_PhotoAlbum)
	fillRandomly_Photos_PhotoAlbum((*o).Album)
	(*o).App = new(Wall_AppPost)
	fillRandomly_Wall_AppPost((*o).App)
	(*o).Audio = new(Audio_Audio)
	fillRandomly_Audio_Audio((*o).Audio)
	(*o).Doc = new(Docs_Doc)
	fillRandomly_Docs_Doc((*o).Doc)
	(*o).Event = new(Events_EventAttach)
	fillRandomly_Events_EventAttach((*o).Event)
	(*o).Graffiti = new(Wall_Graffiti)
	fillRandomly_Wall_Graffiti((*o).Graffiti)
	(*o).Group = new(Groups_GroupAttach)
	fillRandomly_Groups_GroupAttach((*o).Group)
	(*o).Link = new(Base_Link)
	fillRandomly_Base_Link((*o).Link)
	(*o).Market = new(Market_MarketItem)
	fillRandomly_Market_MarketItem((*o).Market)
	(*o).MarketAlbum = new(Market_MarketAlbum)
	fillRandomly_Market_MarketAlbum((*o).MarketAlbum)
	(*o).Note = new(Notes_Note)
	fillRandomly_Notes_Note((*o).Note)
	(*o).Page = new(Pages_WikipageFull)
	fillRandomly_Pages_WikipageFull((*o).Page)
	(*o).Photo = new(Photos_Photo)
	fillRandomly_Photos_Photo((*o).Photo)
	(*o).Poll = new(Polls_Poll)
	fillRandomly_Polls_Poll((*o).Poll)
	(*o).PostedPhoto = new(Wall_PostedPhoto)
	fillRandomly_Wall_PostedPhoto((*o).PostedPhoto)
	fillRandomly_Wall_WallpostAttachmentType(&(*o).Type)
	(*o).Video = new(Video_VideoFull)
	fillRandomly_Video_VideoFull((*o).Video)
}

func fillRandomly_Wall_WallpostAttachmentType(o *Wall_WallpostAttachmentType) {
	switch randIntn(26) {
	case 0:
		*o = "photo"
	case 1:
		*o = "photos_list"
	case 2:
		*o = "posted_photo"
	case 3:
		*o = "audio"
	case 4:
		*o = "audio_playlist"
	case 5:
		*o = "video"
	case 6:
		*o = "doc"
	case 7:
		*o = "link"
	case 8:
		*o = "graffiti"
	case 9:
		*o = "note"
	case 10:
		*o = "app"
	case 11:
		*o = "poll"
	case 12:
		*o = "page"
	case 13:
		*o = "album"
	case 14:
		*o = "market_album"
	case 15:
		*o = "market"
	case 16:
		*o = "event"
	case 17:
		*o = "donut_link"
	case 18:
		*o = "article"
	case 19:
		*o = "textlive"
	case 20:
		*o = "textpost"
	case 21:
		*o = "textpost_publish"
	case 22:
		*o = "situational_theme"
	case 23:
		*o = "group"
	case 24:
		*o = "sticker"
	case 25:
		*o = "podcast"
	}
}

func fillRandomly_Wall_WallpostCommentsDonut(o *Wall_WallpostCommentsDonut) {
	(*o).Placeholder = new(Wall_WallpostCommentsDonutPlaceholder)
	fillRandomly_Wall_WallpostCommentsDonutPlaceholder((*o).Placeholder)
}

func fillRandomly_Wall_WallpostCommentsDonutPlaceholder(o *Wall_WallpostCommentsDonutPlaceholder) {
	(*o).Text = randString()
}

func fillRandomly_Wall_WallpostDonut_EditMode(o *Wall_WallpostDonut_EditMode) {
	switch randIntn(2) {
	case 0:
		*o = "all"
	case 1:
		*o = "duration"
	}
}

func fillRandomly_Wall_WallpostDonut(o *Wall_WallpostDonut) {
	(*o).CanPublishFreeCopy = new(bool)
	*(*o).CanPublishFreeCopy = randBool()
	(*o).EditMode = new(Wall_WallpostDonut_EditMode)
	fillRandomly_Wall_WallpostDonut_EditMode((*o).EditMode)
	(*o).IsDonut = randBool()
	(*o).PaidDuration = new(int)
	*(*o).PaidDuration = randInt()
	(*o).Placeholder = new(Wall_WallpostDonutPlaceholder)
	fillRandomly_Wall_WallpostDonutPlaceholder((*o).Placeholder)
}

func fillRandomly_Wall_WallpostDonutPlaceholder(o *Wall_WallpostDonutPlaceholder) {
	(*o).Text = randString()
}

func fillRandomly_Wall_WallpostFull_TopicId(o *Wall_WallpostFull_TopicId) {
	switch randIntn(12) {
	case 0:
		*o = 0
	case 1:
		*o = 1
	case 2:
		*o = 7
	case 3:
		*o = 12
	case 4:
		*o = 16
	case 5:
		*o = 19
	case 6:
		*o = 21
	case 7:
		*o = 23
	case 8:
		*o = 25
	case 9:
		*o = 26
	case 10:
		*o = 32
	case 11:
		*o = 43
	}
}

func fillRandomly_Wall_WallpostFull(o *Wall_WallpostFull) {
	fillRandomly_Wall_CarouselBase(&(*o).Wall_CarouselBase)
	fillRandomly_Wall_Wallpost(&(*o).Wall_Wallpost)
	(*o).CanDelete = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanDelete)
	(*o).CanEdit = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanEdit)
	(*o).CanPin = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanPin)
	(*o).Comments = new(Base_CommentsInfo)
	fillRandomly_Base_CommentsInfo((*o).Comments)
	(*o).CopyHistory = new([]Wall_WallpostFull)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).CopyHistory = make([]Wall_WallpostFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		//fillRandomly_Wall_WallpostFull(&(*(*o).CopyHistory)[i0])
	}
	(*o).CreatedBy = new(int)
	*(*o).CreatedBy = randInt()
	(*o).Donut = new(Wall_WallpostDonut)
	fillRandomly_Wall_WallpostDonut((*o).Donut)
	(*o).Hash = new(string)
	*(*o).Hash = randString()
	(*o).IsPinned = new(int)
	*(*o).IsPinned = randInt()
	(*o).MarkedAsAds = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).MarkedAsAds)
	(*o).ShortTextRate = new(float64)
	*(*o).ShortTextRate = randFloat()
	(*o).TopicId = new(Wall_WallpostFull_TopicId)
	fillRandomly_Wall_WallpostFull_TopicId((*o).TopicId)
}

func fillRandomly_Wall_WallpostToId(o *Wall_WallpostToId) {
	(*o).Attachments = new([]Wall_WallpostAttachment)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Attachments = make([]Wall_WallpostAttachment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Wall_WallpostAttachment(&(*(*o).Attachments)[i0])
	}
	(*o).Comments = new(Base_CommentsInfo)
	fillRandomly_Base_CommentsInfo((*o).Comments)
	(*o).CopyOwnerId = new(int)
	*(*o).CopyOwnerId = randInt()
	(*o).CopyPostId = new(int)
	*(*o).CopyPostId = randInt()
	(*o).Date = new(int)
	*(*o).Date = randInt()
	(*o).FromId = new(int)
	*(*o).FromId = randInt()
	(*o).Geo = new(Wall_Geo)
	fillRandomly_Wall_Geo((*o).Geo)
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).IsFavorite = new(bool)
	*(*o).IsFavorite = randBool()
	(*o).Likes = new(Base_LikesInfo)
	fillRandomly_Base_LikesInfo((*o).Likes)
	(*o).PostId = new(int)
	*(*o).PostId = randInt()
	(*o).PostSource = new(Wall_PostSource)
	fillRandomly_Wall_PostSource((*o).PostSource)
	(*o).PostType = new(Wall_PostType)
	fillRandomly_Wall_PostType((*o).PostType)
	(*o).Reposts = new(Base_RepostsInfo)
	fillRandomly_Base_RepostsInfo((*o).Reposts)
	(*o).SignerId = new(int)
	*(*o).SignerId = randInt()
	(*o).Text = new(string)
	*(*o).Text = randString()
	(*o).ToId = new(int)
	*(*o).ToId = randInt()
}

func fillRandomly_Widgets_CommentMedia(o *Widgets_CommentMedia) {
	(*o).ItemId = new(int)
	*(*o).ItemId = randInt()
	(*o).OwnerId = new(int)
	*(*o).OwnerId = randInt()
	(*o).ThumbSrc = new(string)
	*(*o).ThumbSrc = randString()
	(*o).Type = new(Widgets_CommentMediaType)
	fillRandomly_Widgets_CommentMediaType((*o).Type)
}

func fillRandomly_Widgets_CommentMediaType(o *Widgets_CommentMediaType) {
	switch randIntn(3) {
	case 0:
		*o = "audio"
	case 1:
		*o = "photo"
	case 2:
		*o = "video"
	}
}

func fillRandomly_Widgets_CommentReplies(o *Widgets_CommentReplies) {
	(*o).CanPost = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanPost)
	(*o).Count = new(int)
	*(*o).Count = randInt()
	(*o).Replies = new([]Widgets_CommentRepliesItem)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Replies = make([]Widgets_CommentRepliesItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Widgets_CommentRepliesItem(&(*(*o).Replies)[i0])
	}
}

func fillRandomly_Widgets_CommentRepliesItem(o *Widgets_CommentRepliesItem) {
	(*o).Cid = new(int)
	*(*o).Cid = randInt()
	(*o).Date = new(int)
	*(*o).Date = randInt()
	(*o).Likes = new(Widgets_WidgetLikes)
	fillRandomly_Widgets_WidgetLikes((*o).Likes)
	(*o).Text = new(string)
	*(*o).Text = randString()
	(*o).Uid = new(int)
	*(*o).Uid = randInt()
	(*o).User = new(Users_UserFull)
	fillRandomly_Users_UserFull((*o).User)
}

func fillRandomly_Widgets_WidgetComment(o *Widgets_WidgetComment) {
	(*o).Attachments = new([]Wall_CommentAttachment)
	l0 := randIntn(maxArrayLength + 1)
	*(*o).Attachments = make([]Wall_CommentAttachment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomly_Wall_CommentAttachment(&(*(*o).Attachments)[i0])
	}
	(*o).CanDelete = new(Base_BoolInt)
	fillRandomly_Base_BoolInt((*o).CanDelete)
	(*o).Comments = new(Widgets_CommentReplies)
	fillRandomly_Widgets_CommentReplies((*o).Comments)
	(*o).Date = randInt()
	(*o).FromId = randInt()
	(*o).Id = randInt()
	(*o).Likes = new(Base_LikesInfo)
	fillRandomly_Base_LikesInfo((*o).Likes)
	(*o).Media = new(Widgets_CommentMedia)
	fillRandomly_Widgets_CommentMedia((*o).Media)
	(*o).PostSource = new(Wall_PostSource)
	fillRandomly_Wall_PostSource((*o).PostSource)
	(*o).PostType = randInt()
	(*o).Reposts = new(Base_RepostsInfo)
	fillRandomly_Base_RepostsInfo((*o).Reposts)
	(*o).Text = randString()
	(*o).ToId = randInt()
	(*o).User = new(Users_UserFull)
	fillRandomly_Users_UserFull((*o).User)
}

func fillRandomly_Widgets_WidgetLikes(o *Widgets_WidgetLikes) {
	(*o).Count = new(int)
	*(*o).Count = randInt()
}

func fillRandomly_Widgets_WidgetPage(o *Widgets_WidgetPage) {
	(*o).Comments = new(Base_ObjectCount)
	fillRandomly_Base_ObjectCount((*o).Comments)
	(*o).Date = new(int)
	*(*o).Date = randInt()
	(*o).Description = new(string)
	*(*o).Description = randString()
	(*o).Id = new(int)
	*(*o).Id = randInt()
	(*o).Likes = new(Base_ObjectCount)
	fillRandomly_Base_ObjectCount((*o).Likes)
	(*o).PageId = new(string)
	*(*o).PageId = randString()
	(*o).Photo = new(string)
	*(*o).Photo = randString()
	(*o).Title = new(string)
	*(*o).Title = randString()
	(*o).Url = new(string)
	*(*o).Url = randString()
}
