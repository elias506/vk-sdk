// Code generated by https://github.com/elias506/vk-sdk. DO NOT EDIT.

package vk_sdk

import (
	"encoding/json"
)

// suppress unused package warning
var _ *json.RawMessage

type Account_ChangePassword_Response struct {
	Response struct {
		// New secret
		Secret *string `json:"secret,omitempty"`
		// New token
		Token string `json:"token"`
	} `json:"response"`
}

type Account_GetActiveOffers_Response struct {
	Response struct {
		// Total number
		Count int             `json:"count"`
		Items []Account_Offer `json:"items"`
	} `json:"response"`
}

type Account_GetAppPermissions_Response struct {
	// Permissions mask
	Response int `json:"response"`
}

type Account_GetBanned_Response struct {
	Response struct {
		// Total number
		Count  int             `json:"count"`
		Groups *[]Groups_Group `json:"groups,omitempty"`
		//  Format: int64
		Items    []int             `json:"items"`
		Profiles *[]Users_UserFull `json:"profiles,omitempty"`
	} `json:"response"`
}

type Account_GetCounters_Response struct {
	Response Account_AccountCounters `json:"response"`
}

type Account_GetInfo_Response struct {
	Response Account_Info `json:"response"`
}

type Account_GetProfileInfo_Response struct {
	Response Account_UserSettings `json:"response"`
}

type Account_GetPushSettings_Response struct {
	Response Account_PushSettings `json:"response"`
}

type Account_SaveProfileInfo_Response struct {
	Response struct {
		// 1 if changes has been processed
		Changed     Base_BoolInt         `json:"changed"`
		NameRequest *Account_NameRequest `json:"name_request,omitempty"`
	} `json:"response"`
}

type Ads_AddOfficeUsers_Response struct {
	// true if success
	Response bool `json:"response"`
}

type Ads_CheckLink_Response struct {
	Response Ads_LinkStatus `json:"response"`
}

type Ads_CreateAds_Response struct {
	Response []Ads_CreateAdStatus `json:"response"`
}

type Ads_CreateCampaigns_Response struct {
	Response []Ads_CreateCampaignStatus `json:"response"`
}

type Ads_CreateClients_Response struct {
	Response []int `json:"response"`
}

type Ads_CreateTargetGroup_Response struct {
	Response struct {
		// Group ID
		Id *int `json:"id,omitempty"`
		// Pixel code
		Pixel *string `json:"pixel,omitempty"`
	} `json:"response"`
}

type Ads_DeleteAds_Response struct {
	Response []int `json:"response"`
}

type Ads_DeleteCampaigns_Response struct {
	Response []int `json:"response"`
}

type Ads_DeleteClients_Response struct {
	Response []int `json:"response"`
}

type Ads_GetAccounts_Response struct {
	Response []Ads_Account `json:"response"`
}

type Ads_GetAdsLayout_Response struct {
	Response []Ads_AdLayout `json:"response"`
}

type Ads_GetAdsTargeting_Response struct {
	Response []Ads_TargSettings `json:"response"`
}

type Ads_GetAds_Response struct {
	Response []Ads_Ad `json:"response"`
}

type Ads_GetBudget_Response struct {
	// Budget
	Response int `json:"response"`
}

type Ads_GetCampaigns_Response struct {
	Response []Ads_Campaign `json:"response"`
}

type Ads_GetCategories_Response struct {
	Response struct {
		// Old categories
		V1 *[]Ads_Category `json:"v1,omitempty"`
		// Actual categories
		V2 *[]Ads_Category `json:"v2,omitempty"`
	} `json:"response"`
}

type Ads_GetClients_Response struct {
	Response []Ads_Client `json:"response"`
}

type Ads_GetDemographics_Response struct {
	Response []Ads_DemoStats `json:"response"`
}

type Ads_GetFloodStats_Response struct {
	Response Ads_FloodStats `json:"response"`
}

type Ads_GetLookalikeRequests_Response struct {
	Response struct {
		// Total count of found lookalike requests
		//  Minimum: 0
		Count int `json:"count"`
		// found lookalike requests
		Items []Ads_LookalikeRequest `json:"items"`
	} `json:"response"`
}

type Ads_GetMusicians_Response struct {
	Response struct {
		// Musicians
		Items []Ads_Musician `json:"items"`
	} `json:"response"`
}

type Ads_GetOfficeUsers_Response struct {
	Response []Ads_Users `json:"response"`
}

type Ads_GetPostsReach_Response struct {
	Response []Ads_PromotedPostReach `json:"response"`
}

type Ads_GetRejectionReason_Response struct {
	Response Ads_RejectReason `json:"response"`
}

type Ads_GetStatistics_Response struct {
	Response []Ads_Stats `json:"response"`
}

type Ads_GetSuggestionsCities_Response struct {
	Response []Ads_TargSuggestionsCities `json:"response"`
}

type Ads_GetSuggestionsRegions_Response struct {
	Response []Ads_TargSuggestionsRegions `json:"response"`
}

type Ads_GetSuggestions_Response struct {
	Response []Ads_TargSuggestions `json:"response"`
}

type Ads_GetSuggestionsSchools_Response struct {
	Response []Ads_TargSuggestionsSchools `json:"response"`
}

type Ads_GetTargetGroups_Response struct {
	Response []Ads_TargetGroup `json:"response"`
}

type Ads_GetTargetingStats_Response struct {
	Response Ads_TargStats `json:"response"`
}

type Ads_GetUploadURL_Response struct {
	// Photo upload URL
	Response string `json:"response"`
}

type Ads_GetVideoUploadURL_Response struct {
	// Video upload URL
	Response string `json:"response"`
}

type Ads_ImportTargetContacts_Response struct {
	// Imported contacts number
	Response int `json:"response"`
}

type Ads_RemoveOfficeUsers_Response struct {
	// true if success
	Response bool `json:"response"`
}

type Ads_UpdateAds_Response struct {
	Response []int `json:"response"`
}

type Ads_UpdateCampaigns_Response struct {
	// Campaign ID
	Response int `json:"response"`
}

type Ads_UpdateClients_Response struct {
	// Client ID
	Response int `json:"response"`
}

type Ads_UpdateOfficeUsers_Response struct {
	Response []Ads_UpdateOfficeUsersResult `json:"response"`
}

type Adsweb_GetAdCategories_Response struct {
	Response struct {
		Categories []Adsweb_GetAdCategoriesResponseCategoriesCategory `json:"categories"`
	} `json:"response"`
}

type Adsweb_GetAdUnitCode_Response struct {
	Response struct {
		Html string `json:"html"`
	} `json:"response"`
}

type Adsweb_GetAdUnits_Response struct {
	Response struct {
		AdUnits *[]Adsweb_GetAdUnitsResponseAdUnitsAdUnit `json:"ad_units,omitempty"`
		Count   int                                       `json:"count"`
	} `json:"response"`
}

type Adsweb_GetFraudHistory_Response struct {
	Response struct {
		Count   int                                           `json:"count"`
		Entries *[]Adsweb_GetFraudHistoryResponseEntriesEntry `json:"entries,omitempty"`
	} `json:"response"`
}

type Adsweb_GetSites_Response struct {
	Response struct {
		Count int                                 `json:"count"`
		Sites *[]Adsweb_GetSitesResponseSitesSite `json:"sites,omitempty"`
	} `json:"response"`
}

type Adsweb_GetStatistics_Response struct {
	Response struct {
		Items      []Adsweb_GetStatisticsResponseItemsItem `json:"items"`
		NextPageId *string                                 `json:"next_page_id,omitempty"`
	} `json:"response"`
}

type AppWidgets_GetAppImageUploadServer_Response struct {
	Response struct {
		// To upload an image, generate POST-request to upload_url with a file in photo field. Then call appWidgets.saveAppImage method
		UploadUrl *string `json:"upload_url,omitempty"`
	} `json:"response"`
}

type AppWidgets_GetAppImages_Response struct {
	Response AppWidgets_Photos `json:"response"`
}

type AppWidgets_GetGroupImageUploadServer_Response struct {
	Response struct {
		// To upload an image, generate POST-request to upload_url with a file in photo field. Then call appWidgets.saveAppImage method
		UploadUrl *string `json:"upload_url,omitempty"`
	} `json:"response"`
}

type AppWidgets_GetGroupImages_Response struct {
	Response AppWidgets_Photos `json:"response"`
}

type AppWidgets_GetImagesById_Response struct {
	Response []AppWidgets_Photo `json:"response"`
}

type AppWidgets_SaveAppImage_Response struct {
	Response AppWidgets_Photo `json:"response"`
}

type AppWidgets_SaveGroupImage_Response struct {
	Response AppWidgets_Photo `json:"response"`
}

type Apps_GetCatalog_Response struct {
	Response Apps_CatalogList `json:"response"`
}

type Apps_GetFriendsListExtended_Response struct {
	Response struct {
		// Total number
		Count int               `json:"count"`
		Items *[]Users_UserFull `json:"items,omitempty"`
	} `json:"response"`
}

type Apps_GetFriendsList_Response struct {
	Response struct {
		// Total number
		Count int `json:"count"`
		//  Format: int64
		Items *[]int `json:"items,omitempty"`
	} `json:"response"`
}

type Apps_GetLeaderboardExtended_Response struct {
	Response struct {
		// Total number
		Count    *int                `json:"count,omitempty"`
		Items    *[]Apps_Leaderboard `json:"items,omitempty"`
		Profiles *[]Users_User       `json:"profiles,omitempty"`
	} `json:"response"`
}

type Apps_GetLeaderboard_Response struct {
	Response struct {
		// Total number
		Count *int                `json:"count,omitempty"`
		Items *[]Apps_Leaderboard `json:"items,omitempty"`
	} `json:"response"`
}

type Apps_GetMiniAppPolicies_Response struct {
	Response struct {
		// URL of the app's privacy policy
		//  Format: uri
		PrivacyPolicy *string `json:"privacy_policy,omitempty"`
		// URL of the app's terms
		//  Format: uri
		Terms *string `json:"terms,omitempty"`
	} `json:"response"`
}

type Apps_GetScopes_Response struct {
	Response struct {
		// Total number
		Count int          `json:"count"`
		Items []Apps_Scope `json:"items"`
	} `json:"response"`
}

type Apps_GetScore_Response struct {
	// Score number
	Response int `json:"response"`
}

type Apps_Get_Response struct {
	Response struct {
		// Total number of applications
		//  Minimum: 0
		Count *int `json:"count,omitempty"`
		// List of applications
		Items *[]Apps_App `json:"items,omitempty"`
	} `json:"response"`
}

type Apps_ImageUpload_Response struct {
	Response struct {
		// Uploading hash
		Hash *string `json:"hash,omitempty"`
		// Uploaded photo data
		Image *string `json:"image,omitempty"`
	} `json:"response"`
}

type Apps_SendRequest_Response struct {
	// Request ID
	Response int `json:"response"`
}

type Auth_Restore_Response_Response_Success int

const (
	Auth_Restore_Response_Response_Success_Ok Auth_Restore_Response_Response_Success = 1
)

type Auth_Restore_Response struct {
	Response struct {
		// Parameter needed to grant access by code
		Sid *string `json:"sid,omitempty"`
		// 1 if success
		Success *Auth_Restore_Response_Response_Success `json:"success,omitempty"`
	} `json:"response"`
}

type Base_Bool_Response struct {
	Response Base_BoolInt `json:"response"`
}

type Base_GetUploadServer_Response struct {
	Response Base_UploadServer `json:"response"`
}

type Base_Ok_Response_Response int

const (
	Base_Ok_Response_Response_Ok Base_Ok_Response_Response = 1
)

type Base_Ok_Response struct {
	//  Default: 1
	Response Base_Ok_Response_Response `json:"response"`
}

type Board_AddTopic_Response struct {
	// Topic ID
	Response int `json:"response"`
}

type Board_CreateComment_Response struct {
	// Comment ID
	Response int `json:"response"`
}

type Board_GetCommentsExtended_Response struct {
	Response struct {
		// Total number
		Count    int                  `json:"count"`
		Groups   []Groups_GroupFull   `json:"groups"`
		Items    []Board_TopicComment `json:"items"`
		Poll     *Polls_Poll          `json:"poll,omitempty"`
		Profiles []Users_UserFull     `json:"profiles"`
		// Offset of comment
		RealOffset *int `json:"real_offset,omitempty"`
	} `json:"response"`
}

type Board_GetComments_Response struct {
	Response struct {
		// Total number
		Count int                  `json:"count"`
		Items []Board_TopicComment `json:"items"`
		Poll  *Polls_Poll          `json:"poll,omitempty"`
		// Offset of comment
		RealOffset *int `json:"real_offset,omitempty"`
	} `json:"response"`
}

type Board_GetTopicsExtended_Response struct {
	Response struct {
		// Information whether current user can add topic
		CanAddTopics Base_BoolInt `json:"can_add_topics"`
		// Total number
		Count        int                `json:"count"`
		DefaultOrder Board_DefaultOrder `json:"default_order"`
		Groups       []Groups_GroupFull `json:"groups"`
		Items        []Board_Topic      `json:"items"`
		Profiles     []Users_UserFull   `json:"profiles"`
	} `json:"response"`
}

type Board_GetTopics_Response struct {
	Response struct {
		// Information whether current user can add topic
		CanAddTopics Base_BoolInt `json:"can_add_topics"`
		// Total number
		Count        int                `json:"count"`
		DefaultOrder Board_DefaultOrder `json:"default_order"`
		Items        []Board_Topic      `json:"items"`
	} `json:"response"`
}

type Database_GetChairs_Response struct {
	Response struct {
		// Total number
		Count int           `json:"count"`
		Items []Base_Object `json:"items"`
	} `json:"response"`
}

type Database_GetCitiesById_Response struct {
	Response []Database_CityById `json:"response"`
}

type Database_GetCities_Response struct {
	Response struct {
		// Total number
		Count int             `json:"count"`
		Items []Database_City `json:"items"`
	} `json:"response"`
}

type Database_GetCountriesById_Response struct {
	Response []Base_Country `json:"response"`
}

type Database_GetCountries_Response struct {
	Response struct {
		// Total number
		Count int            `json:"count"`
		Items []Base_Country `json:"items"`
	} `json:"response"`
}

type Database_GetFaculties_Response struct {
	Response struct {
		// Total number
		Count int                `json:"count"`
		Items []Database_Faculty `json:"items"`
	} `json:"response"`
}

type Database_GetMetroStationsById_Response struct {
	Response []Database_Station `json:"response"`
}

type Database_GetMetroStations_Response struct {
	Response struct {
		// Total number
		Count int                `json:"count"`
		Items []Database_Station `json:"items"`
	} `json:"response"`
}

type Database_GetRegions_Response struct {
	Response struct {
		// Total number
		Count int               `json:"count"`
		Items []Database_Region `json:"items"`
	} `json:"response"`
}

type Database_GetSchoolClasses_Response struct {
	Response [][]string `json:"response"`
}

type Database_GetSchools_Response struct {
	Response struct {
		// Total number
		Count int               `json:"count"`
		Items []Database_School `json:"items"`
	} `json:"response"`
}

type Database_GetUniversities_Response struct {
	Response struct {
		// Total number
		Count int                   `json:"count"`
		Items []Database_University `json:"items"`
	} `json:"response"`
}

type Docs_Add_Response struct {
	// Document ID
	Response int `json:"response"`
}

type Docs_DocUpload_Response struct {
	Response struct {
		// Uploaded file data
		File *string `json:"file,omitempty"`
	} `json:"response"`
}

type Docs_GetById_Response struct {
	Response []Docs_Doc `json:"response"`
}

type Docs_GetTypes_Response struct {
	Response struct {
		// Total number
		Count *int             `json:"count,omitempty"`
		Items *[]Docs_DocTypes `json:"items,omitempty"`
	} `json:"response"`
}

type Docs_GetUploadServer_Response struct {
	Response Base_UploadServer `json:"response"`
}

type Docs_Get_Response struct {
	Response struct {
		// Total number
		Count int        `json:"count"`
		Items []Docs_Doc `json:"items"`
	} `json:"response"`
}

type Docs_Save_Response struct {
	Response struct {
		AudioMessage *Messages_AudioMessage  `json:"audio_message,omitempty"`
		Doc          *Docs_Doc               `json:"doc,omitempty"`
		Graffiti     *Messages_Graffiti      `json:"graffiti,omitempty"`
		Type         *Docs_DocAttachmentType `json:"type,omitempty"`
	} `json:"response"`
}

type Docs_Search_Response struct {
	Response struct {
		// Total number
		Count int        `json:"count"`
		Items []Docs_Doc `json:"items"`
	} `json:"response"`
}

type Donut_GetSubscription_Response struct {
	Response Donut_DonatorSubscriptionInfo `json:"response"`
}

type Donut_GetSubscriptions_Response struct {
	Response struct {
		//  Minimum: 0
		Count         *int                            `json:"count,omitempty"`
		Groups        *[]Groups_GroupFull             `json:"groups,omitempty"`
		Profiles      *[]Users_UserFull               `json:"profiles,omitempty"`
		Subscriptions []Donut_DonatorSubscriptionInfo `json:"subscriptions"`
	} `json:"response"`
}

type DownloadedGames_PaidStatus_Response struct {
	Response struct {
		// Game has been paid
		IsPaid bool `json:"is_paid"`
	} `json:"response"`
}

type Fave_AddTag_Response struct {
	Response Fave_Tag `json:"response"`
}

type Fave_GetPages_Response struct {
	Response struct {
		Count *int         `json:"count,omitempty"`
		Items *[]Fave_Page `json:"items,omitempty"`
	} `json:"response"`
}

type Fave_GetTags_Response struct {
	Response struct {
		Count *int        `json:"count,omitempty"`
		Items *[]Fave_Tag `json:"items,omitempty"`
	} `json:"response"`
}

type Fave_GetExtended_Response struct {
	Response struct {
		// Total number
		Count    *int              `json:"count,omitempty"`
		Groups   *[]Groups_Group   `json:"groups,omitempty"`
		Items    *[]Fave_Bookmark  `json:"items,omitempty"`
		Profiles *[]Users_UserFull `json:"profiles,omitempty"`
	} `json:"response"`
}

type Fave_Get_Response struct {
	Response struct {
		// Total number
		Count *int             `json:"count,omitempty"`
		Items *[]Fave_Bookmark `json:"items,omitempty"`
	} `json:"response"`
}

type Friends_AddList_Response struct {
	Response struct {
		// List ID
		//  Minimum: 1
		ListId int `json:"list_id"`
	} `json:"response"`
}

type Friends_Add_Response_Response int

const (
	Friends_Add_Response_Response_SEND     Friends_Add_Response_Response = 1
	Friends_Add_Response_Response_APPROVED Friends_Add_Response_Response = 2
	Friends_Add_Response_Response_RESEND   Friends_Add_Response_Response = 4
)

type Friends_Add_Response struct {
	// Friend request status
	Response Friends_Add_Response_Response `json:"response"`
}

type Friends_AreFriendsExtended_Response struct {
	Response []Friends_FriendExtendedStatus `json:"response"`
}

type Friends_AreFriends_Response struct {
	Response []Friends_FriendStatus `json:"response"`
}

type Friends_Delete_Response_Response_FriendDeleted int

const (
	Friends_Delete_Response_Response_FriendDeleted_Ok Friends_Delete_Response_Response_FriendDeleted = 1
)

type Friends_Delete_Response_Response_InRequestDeleted int

const (
	Friends_Delete_Response_Response_InRequestDeleted_Ok Friends_Delete_Response_Response_InRequestDeleted = 1
)

type Friends_Delete_Response_Response_OutRequestDeleted int

const (
	Friends_Delete_Response_Response_OutRequestDeleted_Ok Friends_Delete_Response_Response_OutRequestDeleted = 1
)

type Friends_Delete_Response_Response_SuggestionDeleted int

const (
	Friends_Delete_Response_Response_SuggestionDeleted_Ok Friends_Delete_Response_Response_SuggestionDeleted = 1
)

type Friends_Delete_Response struct {
	Response struct {
		// Returns 1 if friend has been deleted
		FriendDeleted *Friends_Delete_Response_Response_FriendDeleted `json:"friend_deleted,omitempty"`
		// Returns 1 if incoming request has been declined
		InRequestDeleted *Friends_Delete_Response_Response_InRequestDeleted `json:"in_request_deleted,omitempty"`
		// Returns 1 if out request has been canceled
		OutRequestDeleted *Friends_Delete_Response_Response_OutRequestDeleted `json:"out_request_deleted,omitempty"`
		//  Default: 1
		Success int `json:"success"`
		// Returns 1 if suggestion has been declined
		SuggestionDeleted *Friends_Delete_Response_Response_SuggestionDeleted `json:"suggestion_deleted,omitempty"`
	} `json:"response"`
}

type Friends_GetAppUsers_Response struct {
	//  Format: int64
	//  Minimum: 1
	Response []int `json:"response"`
}

type Friends_GetByPhones_Response struct {
	Response []Friends_UserXtrPhone `json:"response"`
}

type Friends_GetLists_Response struct {
	Response struct {
		// Total number of friends lists
		//  Minimum: 0
		Count int                   `json:"count"`
		Items []Friends_FriendsList `json:"items"`
	} `json:"response"`
}

type Friends_GetMutual_Response struct {
	//  Format: int64
	//  Minimum: 1
	Response []int `json:"response"`
}

type Friends_GetMutualTargetUids_Response struct {
	Response []Friends_MutualFriend `json:"response"`
}

type Friends_GetOnlineOnlineMobile_Response struct {
	Response struct {
		//  Format: int64
		//  Minimum: 1
		Online []int `json:"online"`
		//  Format: int64
		//  Minimum: 1
		OnlineMobile []int `json:"online_mobile"`
	} `json:"response"`
}

type Friends_GetOnline_Response struct {
	//  Format: int64
	//  Minimum: 1
	Response []int `json:"response"`
}

type Friends_GetRecent_Response struct {
	//  Minimum: 1
	Response []int `json:"response"`
}

type Friends_GetRequestsExtended_Response struct {
	Response struct {
		// Total requests number
		//  Minimum: 0
		Count *int                          `json:"count,omitempty"`
		Items *[]Friends_RequestsXtrMessage `json:"items,omitempty"`
	} `json:"response"`
}

type Friends_GetRequestsNeedMutual_Response struct {
	Response struct {
		// Total requests number
		//  Minimum: 0
		Count *int                `json:"count,omitempty"`
		Items *[]Friends_Requests `json:"items,omitempty"`
	} `json:"response"`
}

type Friends_GetRequests_Response struct {
	Response struct {
		// Total requests number
		//  Minimum: 0
		Count *int `json:"count,omitempty"`
		// Total unread requests number
		CountUnread *int `json:"count_unread,omitempty"`
		//  Format: int64
		//  Minimum: 1
		Items *[]int `json:"items,omitempty"`
	} `json:"response"`
}

type Friends_GetSuggestions_Response struct {
	Response struct {
		// Total results number
		//  Minimum: 0
		Count int              `json:"count"`
		Items []Users_UserFull `json:"items"`
	} `json:"response"`
}

type Friends_GetFields_Response struct {
	Response struct {
		// Total friends number
		//  Minimum: 0
		Count int              `json:"count"`
		Items []Users_UserFull `json:"items"`
	} `json:"response"`
}

type Friends_Get_Response struct {
	Response struct {
		// Total friends number
		//  Minimum: 0
		Count int `json:"count"`
		//  Format: int64
		//  Minimum: 1
		Items []int `json:"items"`
	} `json:"response"`
}

type Friends_Search_Response struct {
	Response struct {
		// Total number
		//  Minimum: 0
		Count int              `json:"count"`
		Items []Users_UserFull `json:"items"`
	} `json:"response"`
}

type Gifts_Get_Response struct {
	Response struct {
		// Total number
		Count *int          `json:"count,omitempty"`
		Items *[]Gifts_Gift `json:"items,omitempty"`
	} `json:"response"`
}

type Groups_AddAddress_Response struct {
	Response Groups_Address `json:"response"`
}

type Groups_AddCallbackServer_Response struct {
	Response struct {
		//  Minimum: 0
		ServerId int `json:"server_id"`
	} `json:"response"`
}

type Groups_AddLink_Response struct {
	Response Groups_LinksItem `json:"response"`
}

type Groups_Create_Response struct {
	Response Groups_Group `json:"response"`
}

type Groups_EditAddress_Response struct {
	// Result
	Response Groups_Address `json:"response"`
}

type Groups_GetAddresses_Response struct {
	Response struct {
		// Total count of addresses
		//  Minimum: 0
		Count int              `json:"count"`
		Items []Groups_Address `json:"items"`
	} `json:"response"`
}

type Groups_GetBanned_Response struct {
	Response struct {
		// Total users number
		//  Minimum: 0
		Count int                 `json:"count"`
		Items []Groups_BannedItem `json:"items"`
	} `json:"response"`
}

type Groups_GetByIdObjectLegacy_Response struct {
	Response []Groups_GroupFull `json:"response"`
}

type Groups_GetCallbackConfirmationCode_Response struct {
	Response struct {
		// Confirmation code
		Code string `json:"code"`
	} `json:"response"`
}

type Groups_GetCallbackServers_Response struct {
	Response struct {
		//  Minimum: 0
		Count int                     `json:"count"`
		Items []Groups_CallbackServer `json:"items"`
	} `json:"response"`
}

type Groups_GetCallbackSettings_Response struct {
	Response Groups_CallbackSettings `json:"response"`
}

type Groups_GetCatalogInfoExtended_Response struct {
	Response struct {
		Categories *[]Groups_GroupCategoryFull `json:"categories,omitempty"`
		// Information whether catalog is enabled for current user
		Enabled Base_BoolInt `json:"enabled"`
	} `json:"response"`
}

type Groups_GetCatalogInfo_Response struct {
	Response struct {
		Categories *[]Groups_GroupCategory `json:"categories,omitempty"`
		// Information whether catalog is enabled for current user
		Enabled Base_BoolInt `json:"enabled"`
	} `json:"response"`
}

type Groups_GetCatalog_Response struct {
	Response struct {
		// Total communities number
		//  Minimum: 0
		Count int            `json:"count"`
		Items []Groups_Group `json:"items"`
	} `json:"response"`
}

type Groups_GetInvitedUsers_Response struct {
	Response struct {
		// Total communities number
		//  Minimum: 0
		Count int              `json:"count"`
		Items []Users_UserFull `json:"items"`
	} `json:"response"`
}

type Groups_GetInvitesExtended_Response struct {
	Response struct {
		// Total communities number
		//  Minimum: 0
		Count    int                `json:"count"`
		Groups   []Groups_GroupFull `json:"groups"`
		Items    []Groups_GroupFull `json:"items"`
		Profiles []Users_UserMin    `json:"profiles"`
	} `json:"response"`
}

type Groups_GetInvites_Response struct {
	Response struct {
		// Total communities number
		//  Minimum: 0
		Count int                `json:"count"`
		Items []Groups_GroupFull `json:"items"`
	} `json:"response"`
}

type Groups_GetLongPollServer_Response struct {
	Response Groups_LongPollServer `json:"response"`
}

type Groups_GetLongPollSettings_Response struct {
	Response Groups_LongPollSettings `json:"response"`
}

type Groups_GetMembersFields_Response struct {
	Response struct {
		// Total members number
		//  Minimum: 0
		Count int                  `json:"count"`
		Items []Groups_UserXtrRole `json:"items"`
	} `json:"response"`
}

type Groups_GetMembersFilter_Response struct {
	Response struct {
		// Total members number
		//  Minimum: 0
		Count int                 `json:"count"`
		Items []Groups_MemberRole `json:"items"`
	} `json:"response"`
}

type Groups_GetMembers_Response struct {
	Response struct {
		// Total members number
		//  Minimum: 0
		Count int `json:"count"`
		//  Format: int64
		//  Minimum: 0
		Items []int `json:"items"`
	} `json:"response"`
}

type Groups_GetRequestsFields_Response struct {
	Response struct {
		// Total communities number
		//  Minimum: 0
		Count int              `json:"count"`
		Items []Users_UserFull `json:"items"`
	} `json:"response"`
}

type Groups_GetRequests_Response struct {
	Response struct {
		// Total communities number
		//  Minimum: 0
		Count int `json:"count"`
		//  Format: int64
		//  Minimum: 1
		Items []int `json:"items"`
	} `json:"response"`
}

type Groups_GetSettings_Response struct {
	Response struct {
		// Community access settings
		Access *Groups_GroupAccess `json:"access,omitempty"`
		// Community's page domain
		Address   *string                `json:"address,omitempty"`
		AgeLimits *Groups_GroupAgeLimits `json:"age_limits,omitempty"`
		// Articles settings
		Articles int `json:"articles"`
		// Audio settings
		Audio Groups_GroupAudio `json:"audio"`
		// City id of group
		CityId int `json:"city_id"`
		// City name of group
		CityName string        `json:"city_name"`
		Contacts *Base_BoolInt `json:"contacts,omitempty"`
		// Country id of group
		CountryId int `json:"country_id"`
		// Country name of group
		CountryName string `json:"country_name"`
		// Community description
		Description string `json:"description"`
		// Docs settings
		Docs Groups_GroupDocs `json:"docs"`
		// Community email
		Email        *string       `json:"email,omitempty"`
		EventGroupId *int          `json:"event_group_id,omitempty"`
		Events       *Base_BoolInt `json:"events,omitempty"`
		// Finish date in Unix-time format
		FinishDate  *int                     `json:"finish_date,omitempty"`
		Links       *Base_BoolInt            `json:"links,omitempty"`
		MainSection *Groups_GroupFullSection `json:"main_section,omitempty"`
		// Information whether the obscene filter is enabled
		ObsceneFilter Base_BoolInt `json:"obscene_filter"`
		// Information whether the stop words filter is enabled
		ObsceneStopwords Base_BoolInt `json:"obscene_stopwords"`
		// The list of stop words
		ObsceneWords []string `json:"obscene_words"`
		// Community phone
		Phone *string `json:"phone,omitempty"`
		// Photos settings
		Photos Groups_GroupPhotos `json:"photos"`
		// Information about the group category
		PublicCategory     *int                              `json:"public_category,omitempty"`
		PublicCategoryList *[]Groups_GroupPublicCategoryList `json:"public_category_list,omitempty"`
		PublicDate         *string                           `json:"public_date,omitempty"`
		PublicDateLabel    *string                           `json:"public_date_label,omitempty"`
		// Information about the group subcategory
		PublicSubcategory *int `json:"public_subcategory,omitempty"`
		// Photo suggests setting
		RecognizePhoto *int `json:"recognize_photo,omitempty"`
		// URL of the RSS feed
		//  Format: uri
		Rss              *string                    `json:"rss,omitempty"`
		SecondarySection *Groups_GroupFullSection   `json:"secondary_section,omitempty"`
		SectionsList     *[]Groups_SectionsListItem `json:"sections_list,omitempty"`
		// Start date
		//  Minimum: 0
		StartDate *int `json:"start_date,omitempty"`
		// Community subject ID
		Subject          *int                          `json:"subject,omitempty"`
		SubjectList      *[]Groups_SubjectItem         `json:"subject_list,omitempty"`
		SuggestedPrivacy *Groups_GroupSuggestedPrivacy `json:"suggested_privacy,omitempty"`
		// Community title
		Title string `json:"title"`
		// Topics settings
		Topics  Groups_GroupTopics      `json:"topics"`
		Twitter *Groups_SettingsTwitter `json:"twitter,omitempty"`
		// Video settings
		Video Groups_GroupVideo `json:"video"`
		// Wall settings
		Wall Groups_GroupWall `json:"wall"`
		// Community website
		Website *string `json:"website,omitempty"`
		// Wiki settings
		Wiki Groups_GroupWiki `json:"wiki"`
	} `json:"response"`
}

type Groups_GetTagList_Response struct {
	Response []Groups_GroupTag `json:"response"`
}

type Groups_GetTokenPermissions_Response struct {
	Response struct {
		//  Minimum: 0
		Mask        int                             `json:"mask"`
		Permissions []Groups_TokenPermissionSetting `json:"permissions"`
	} `json:"response"`
}

type Groups_GetObjectExtended_Response struct {
	Response struct {
		// Total communities number
		//  Minimum: 0
		Count int                `json:"count"`
		Items []Groups_GroupFull `json:"items"`
	} `json:"response"`
}

type Groups_Get_Response struct {
	Response struct {
		// Total communities number
		Count int `json:"count"`
		//  Format: int64
		//  Minimum: 0
		Items []int `json:"items"`
	} `json:"response"`
}

type Groups_IsMemberExtended_Response struct {
	Response struct {
		// Information whether user can be invited
		CanInvite *Base_BoolInt `json:"can_invite,omitempty"`
		// Information whether user's invite to the group can be recalled
		CanRecall *Base_BoolInt `json:"can_recall,omitempty"`
		// Information whether user has been invited to the group
		Invitation *Base_BoolInt `json:"invitation,omitempty"`
		// Information whether user is a member of the group
		Member Base_BoolInt `json:"member"`
		// Information whether user has sent request to the group
		Request *Base_BoolInt `json:"request,omitempty"`
	} `json:"response"`
}

type Groups_IsMember_Response struct {
	// Information whether user is a member of the group
	Response Base_BoolInt `json:"response"`
}

type Groups_IsMemberUserIdsExtended_Response struct {
	Response []Groups_MemberStatusFull `json:"response"`
}

type Groups_IsMemberUserIds_Response struct {
	Response []Groups_MemberStatus `json:"response"`
}

type Groups_Search_Response struct {
	Response struct {
		// Total communities number
		//  Minimum: 0
		Count int            `json:"count"`
		Items []Groups_Group `json:"items"`
	} `json:"response"`
}

type LeadForms_Create_Response struct {
	Response struct {
		FormId int `json:"form_id"`
		//  Format: uri
		Url string `json:"url"`
	} `json:"response"`
}

type LeadForms_Delete_Response struct {
	Response struct {
		FormId int `json:"form_id"`
	} `json:"response"`
}

type LeadForms_GetLeads_Response struct {
	Response struct {
		Leads         []LeadForms_Lead `json:"leads"`
		NextPageToken *string          `json:"next_page_token,omitempty"`
	} `json:"response"`
}

type LeadForms_Get_Response struct {
	Response LeadForms_Form `json:"response"`
}

type LeadForms_List_Response struct {
	Response []LeadForms_Form `json:"response"`
}

type LeadForms_UploadUrl_Response struct {
	//  Format: uri
	Response string `json:"response"`
}

type Likes_Add_Response struct {
	Response struct {
		// Total likes number
		Likes int `json:"likes"`
	} `json:"response"`
}

type Likes_Delete_Response struct {
	Response struct {
		// Total likes number
		Likes int `json:"likes"`
	} `json:"response"`
}

type Likes_GetListExtended_Response struct {
	Response struct {
		// Total number
		Count int             `json:"count"`
		Items []Users_UserMin `json:"items"`
	} `json:"response"`
}

type Likes_GetList_Response struct {
	Response struct {
		// Total number
		Count int `json:"count"`
		//  Format: int64
		Items []int `json:"items"`
	} `json:"response"`
}

type Likes_IsLiked_Response struct {
	Response struct {
		// Information whether user reposted the object
		Copied Base_BoolInt `json:"copied"`
		// Information whether user liked the object
		Liked Base_BoolInt `json:"liked"`
	} `json:"response"`
}

type Market_AddAlbum_Response struct {
	Response struct {
		// Albums count
		AlbumsCount *int `json:"albums_count,omitempty"`
		// Album ID
		MarketAlbumId *int `json:"market_album_id,omitempty"`
	} `json:"response"`
}

type Market_Add_Response struct {
	Response struct {
		// Item ID
		MarketItemId int `json:"market_item_id"`
	} `json:"response"`
}

type Market_CreateComment_Response struct {
	// Comment ID
	Response int `json:"response"`
}

type Market_DeleteComment_Response struct {
	// Returns 1 if request has been processed successfully (0 if the comment is not found)
	Response Base_BoolInt `json:"response"`
}

type Market_GetAlbumById_Response struct {
	Response struct {
		// Total number
		Count *int                  `json:"count,omitempty"`
		Items *[]Market_MarketAlbum `json:"items,omitempty"`
	} `json:"response"`
}

type Market_GetAlbums_Response struct {
	Response struct {
		// Total number
		Count *int                  `json:"count,omitempty"`
		Items *[]Market_MarketAlbum `json:"items,omitempty"`
	} `json:"response"`
}

type Market_GetByIdExtended_Response struct {
	Response struct {
		// Total number
		Count *int                     `json:"count,omitempty"`
		Items *[]Market_MarketItemFull `json:"items,omitempty"`
	} `json:"response"`
}

type Market_GetById_Response struct {
	Response struct {
		// Total number
		Count *int                 `json:"count,omitempty"`
		Items *[]Market_MarketItem `json:"items,omitempty"`
	} `json:"response"`
}

type Market_GetCategoriesNew_Response struct {
	Response struct {
		Items []Market_MarketCategoryTree `json:"items"`
	} `json:"response"`
}

type Market_GetCategories_Response struct {
	Response struct {
		// Total number
		Count *int                     `json:"count,omitempty"`
		Items *[]Market_MarketCategory `json:"items,omitempty"`
	} `json:"response"`
}

type Market_GetComments_Response struct {
	Response struct {
		// Total number
		Count *int                `json:"count,omitempty"`
		Items *[]Wall_WallComment `json:"items,omitempty"`
	} `json:"response"`
}

type Market_GetGroupOrders_Response struct {
	Response struct {
		// Total number
		//  Minimum: 0
		Count int            `json:"count"`
		Items []Market_Order `json:"items"`
	} `json:"response"`
}

type Market_GetOrderById_Response struct {
	Response struct {
		Order *Market_Order `json:"order,omitempty"`
	} `json:"response"`
}

type Market_GetOrderItems_Response struct {
	Response struct {
		// Total number
		Count int                `json:"count"`
		Items []Market_OrderItem `json:"items"`
	} `json:"response"`
}

type Market_GetOrdersExtended_Response struct {
	Response struct {
		// Total number
		//  Minimum: 0
		Count  int                 `json:"count"`
		Groups *[]Groups_GroupFull `json:"groups,omitempty"`
		Items  []Market_Order      `json:"items"`
	} `json:"response"`
}

type Market_GetOrders_Response struct {
	Response struct {
		// Total number
		//  Minimum: 0
		Count int            `json:"count"`
		Items []Market_Order `json:"items"`
	} `json:"response"`
}

type Market_GetExtended_Response struct {
	Response struct {
		// Total number
		Count    *int                     `json:"count,omitempty"`
		Items    *[]Market_MarketItemFull `json:"items,omitempty"`
		Variants *[]Market_MarketItemFull `json:"variants,omitempty"`
	} `json:"response"`
}

type Market_Get_Response struct {
	Response struct {
		// Total number
		Count    *int                 `json:"count,omitempty"`
		Items    *[]Market_MarketItem `json:"items,omitempty"`
		Variants *[]Market_MarketItem `json:"variants,omitempty"`
	} `json:"response"`
}

type Market_RestoreComment_Response struct {
	// Returns 1 if request has been processed successfully (0 if the comment is not found)
	Response Base_BoolInt `json:"response"`
}

type Market_SearchExtended_Response struct {
	Response struct {
		// Total number
		Count    int                      `json:"count"`
		Items    []Market_MarketItemFull  `json:"items"`
		Variants *[]Market_MarketItemFull `json:"variants,omitempty"`
		ViewType Market_ServicesViewType  `json:"view_type"`
	} `json:"response"`
}

type Market_Search_Response struct {
	Response struct {
		// Total number
		Count    int                     `json:"count"`
		Groups   *[]Groups_GroupFull     `json:"groups,omitempty"`
		Items    []Market_MarketItem     `json:"items"`
		Variants *[]Market_MarketItem    `json:"variants,omitempty"`
		ViewType Market_ServicesViewType `json:"view_type"`
	} `json:"response"`
}

type Messages_CreateChat_Response struct {
	// Chat ID
	Response int `json:"response"`
}

type Messages_DeleteChatPhoto_Response struct {
	Response struct {
		Chat *Messages_Chat `json:"chat,omitempty"`
		// Service message ID
		MessageId *int `json:"message_id,omitempty"`
	} `json:"response"`
}

type Messages_DeleteConversation_Response struct {
	Response struct {
		// Id of the last message, that was deleted
		//  Minimum: 0
		LastDeletedId int `json:"last_deleted_id"`
	} `json:"response"`
}

type Messages_Delete_Response struct {
	Response map[string]Base_BoolInt `json:"response"`
}

type Messages_Edit_Response struct {
	// Result
	Response Base_BoolInt `json:"response"`
}

type Messages_GetByConversationMessageIdExtended_Response struct {
	Response struct {
		// Total number
		Count    int                 `json:"count"`
		Groups   *[]Groups_GroupFull `json:"groups,omitempty"`
		Items    []Messages_Message  `json:"items"`
		Profiles *[]Users_UserFull   `json:"profiles,omitempty"`
	} `json:"response"`
}

type Messages_GetByConversationMessageId_Response struct {
	Response struct {
		// Total number
		Count int                `json:"count"`
		Items []Messages_Message `json:"items"`
	} `json:"response"`
}

type Messages_GetByIdExtended_Response struct {
	Response struct {
		// Total number
		Count    int                 `json:"count"`
		Groups   *[]Groups_GroupFull `json:"groups,omitempty"`
		Items    []Messages_Message  `json:"items"`
		Profiles []Users_UserFull    `json:"profiles"`
	} `json:"response"`
}

type Messages_GetById_Response struct {
	Response struct {
		// Total number
		Count int                `json:"count"`
		Items []Messages_Message `json:"items"`
	} `json:"response"`
}

type Messages_GetChatPreview_Response struct {
	Response struct {
		Groups   *[]Groups_GroupFull   `json:"groups,omitempty"`
		Preview  *Messages_ChatPreview `json:"preview,omitempty"`
		Profiles *[]Users_UserFull     `json:"profiles,omitempty"`
	} `json:"response"`
}

type Messages_GetChatChatIdsFields_Response struct {
	Response []Messages_ChatFull `json:"response"`
}

type Messages_GetChatChatIds_Response struct {
	Response []Messages_Chat `json:"response"`
}

type Messages_GetChatFields_Response struct {
	Response Messages_ChatFull `json:"response"`
}

type Messages_GetChat_Response struct {
	Response Messages_Chat `json:"response"`
}

type Messages_GetConversationMembers_Response struct {
	Response Messages_GetConversationMembers `json:"response"`
}

type Messages_GetConversationsByIdExtended_Response struct {
	Response Messages_GetConversationByIdExtended `json:"response"`
}

type Messages_GetConversationsById_Response struct {
	Response Messages_GetConversationById `json:"response"`
}

type Messages_GetConversations_Response struct {
	Response struct {
		// Total number
		Count    int                                `json:"count"`
		Groups   *[]Groups_GroupFull                `json:"groups,omitempty"`
		Items    []Messages_ConversationWithMessage `json:"items"`
		Profiles *[]Users_UserFull                  `json:"profiles,omitempty"`
		// Unread dialogs number
		UnreadCount *int `json:"unread_count,omitempty"`
	} `json:"response"`
}

type Messages_GetHistoryAttachments_Response struct {
	Response struct {
		Groups *[]Groups_GroupFull           `json:"groups,omitempty"`
		Items  *[]Messages_HistoryAttachment `json:"items,omitempty"`
		// Value for pagination
		NextFrom *string           `json:"next_from,omitempty"`
		Profiles *[]Users_UserFull `json:"profiles,omitempty"`
	} `json:"response"`
}

type Messages_GetHistoryExtended_Response struct {
	Response struct {
		Conversations *[]Messages_Conversation `json:"conversations,omitempty"`
		// Total number
		Count    int                 `json:"count"`
		Groups   *[]Groups_GroupFull `json:"groups,omitempty"`
		Items    []Messages_Message  `json:"items"`
		Profiles *[]Users_UserFull   `json:"profiles,omitempty"`
	} `json:"response"`
}

type Messages_GetHistory_Response struct {
	Response struct {
		// Total number
		Count int                `json:"count"`
		Items []Messages_Message `json:"items"`
	} `json:"response"`
}

type Messages_GetImportantMessagesExtended_Response struct {
	Response struct {
		Conversations *[]Messages_Conversation `json:"conversations,omitempty"`
		Groups        *[]Groups_GroupFull      `json:"groups,omitempty"`
		Messages      Messages_MessagesArray   `json:"messages"`
		Profiles      *[]Users_UserFull        `json:"profiles,omitempty"`
	} `json:"response"`
}

type Messages_GetImportantMessages_Response struct {
	Response struct {
		Conversations *[]Messages_Conversation `json:"conversations,omitempty"`
		Groups        *[]Groups_GroupFull      `json:"groups,omitempty"`
		Messages      Messages_MessagesArray   `json:"messages"`
		Profiles      *[]Users_User            `json:"profiles,omitempty"`
	} `json:"response"`
}

type Messages_GetIntentUsers_Response struct {
	Response struct {
		//  Minimum: 0
		Count int `json:"count"`
		//  Format: int64
		//  Minimum: 0
		Items    []int             `json:"items"`
		Profiles *[]Users_UserFull `json:"profiles,omitempty"`
	} `json:"response"`
}

type Messages_GetInviteLink_Response struct {
	Response struct {
		Link *string `json:"link,omitempty"`
	} `json:"response"`
}

type Messages_GetLastActivity_Response struct {
	Response Messages_LastActivity `json:"response"`
}

type Messages_GetLongPollHistory_Response struct {
	Response struct {
		Chats         *[]Messages_Chat           `json:"chats,omitempty"`
		Conversations *[]Messages_Conversation   `json:"conversations,omitempty"`
		Credentials   *Messages_LongpollParams   `json:"credentials,omitempty"`
		FromPts       *int                       `json:"from_pts,omitempty"`
		Groups        *[]Groups_GroupFull        `json:"groups,omitempty"`
		History       *[][]int                   `json:"history,omitempty"`
		Messages      *Messages_LongpollMessages `json:"messages,omitempty"`
		// Has more
		More *bool `json:"more,omitempty"`
		// Persistence timestamp
		NewPts   *int              `json:"new_pts,omitempty"`
		Profiles *[]Users_UserFull `json:"profiles,omitempty"`
	} `json:"response"`
}

type Messages_GetLongPollServer_Response struct {
	Response Messages_LongpollParams `json:"response"`
}

type Messages_IsMessagesFromGroupAllowed_Response struct {
	Response struct {
		IsAllowed *Base_BoolInt `json:"is_allowed,omitempty"`
	} `json:"response"`
}

type Messages_JoinChatByInviteLink_Response struct {
	Response struct {
		ChatId *int `json:"chat_id,omitempty"`
	} `json:"response"`
}

type Messages_MarkAsImportant_Response struct {
	Response []int `json:"response"`
}

type Messages_Pin_Response struct {
	Response Messages_PinnedMessage `json:"response"`
}

type Messages_SearchConversationsExtended_Response struct {
	Response struct {
		// Total results number
		Count    int                     `json:"count"`
		Groups   *[]Groups_GroupFull     `json:"groups,omitempty"`
		Items    []Messages_Conversation `json:"items"`
		Profiles *[]Users_UserFull       `json:"profiles,omitempty"`
	} `json:"response"`
}

type Messages_SearchConversations_Response struct {
	Response struct {
		// Total results number
		Count int                     `json:"count"`
		Items []Messages_Conversation `json:"items"`
	} `json:"response"`
}

type Messages_SearchExtended_Response struct {
	Response struct {
		Conversations *[]Messages_Conversation `json:"conversations,omitempty"`
		// Total number
		Count    int                 `json:"count"`
		Groups   *[]Groups_GroupFull `json:"groups,omitempty"`
		Items    []Messages_Message  `json:"items"`
		Profiles *[]Users_UserFull   `json:"profiles,omitempty"`
	} `json:"response"`
}

type Messages_Search_Response struct {
	Response struct {
		// Total number
		Count int                `json:"count"`
		Items []Messages_Message `json:"items"`
	} `json:"response"`
}

type Messages_Send_Response struct {
	// Message ID
	Response int `json:"response"`
}

type Messages_SendUserIds_Response struct {
	Response []Messages_SendUserIdsResponseItem `json:"response"`
}

type Messages_SetChatPhoto_Response struct {
	Response struct {
		Chat *Messages_Chat `json:"chat,omitempty"`
		// Service message ID
		MessageId *int `json:"message_id,omitempty"`
	} `json:"response"`
}

type Newsfeed_Generic_Response struct {
	Response struct {
		Groups []Groups_GroupFull      `json:"groups"`
		Items  []Newsfeed_NewsfeedItem `json:"items"`
		//  Minimum: 0
		NewReturnedNewsItemsCount *int             `json:"new_returned_news_items_count,omitempty"`
		Profiles                  []Users_UserFull `json:"profiles"`
	} `json:"response"`
}

type Newsfeed_GetBannedExtended_Response struct {
	Response struct {
		Groups   *[]Groups_GroupFull `json:"groups,omitempty"`
		Profiles *[]Users_UserFull   `json:"profiles,omitempty"`
	} `json:"response"`
}

type Newsfeed_GetBanned_Response struct {
	Response struct {
		Groups  *[]int `json:"groups,omitempty"`
		Members *[]int `json:"members,omitempty"`
	} `json:"response"`
}

type Newsfeed_GetComments_Response struct {
	Response struct {
		Groups []Groups_GroupFull      `json:"groups"`
		Items  []Newsfeed_NewsfeedItem `json:"items"`
		// Next from value
		NextFrom *string          `json:"next_from,omitempty"`
		Profiles []Users_UserFull `json:"profiles"`
	} `json:"response"`
}

type Newsfeed_GetListsExtended_Response struct {
	Response struct {
		// Total number
		Count int                 `json:"count"`
		Items []Newsfeed_ListFull `json:"items"`
	} `json:"response"`
}

type Newsfeed_GetLists_Response struct {
	Response struct {
		// Total number
		Count int             `json:"count"`
		Items []Newsfeed_List `json:"items"`
	} `json:"response"`
}

type Newsfeed_GetMentions_Response struct {
	Response struct {
		// Total number
		Count int                 `json:"count"`
		Items []Wall_WallpostToId `json:"items"`
	} `json:"response"`
}

type Newsfeed_GetSuggestedSources_Response struct {
	Response struct {
		// Total number
		Count *int                       `json:"count,omitempty"`
		Items *[]Users_SubscriptionsItem `json:"items,omitempty"`
	} `json:"response"`
}

type Newsfeed_IgnoreItem_Response struct {
	Response struct {
		//  Default: 1
		Status bool `json:"status"`
	} `json:"response"`
}

type Newsfeed_SaveList_Response struct {
	// List ID
	Response int `json:"response"`
}

type Newsfeed_SearchExtended_Response struct {
	Response struct {
		// Filtered number
		//  Minimum: 0
		Count            *int                 `json:"count,omitempty"`
		Groups           *[]Groups_GroupFull  `json:"groups,omitempty"`
		Items            *[]Wall_WallpostFull `json:"items,omitempty"`
		NextFrom         *string              `json:"next_from,omitempty"`
		Profiles         *[]Users_UserFull    `json:"profiles,omitempty"`
		SuggestedQueries *[]string            `json:"suggested_queries,omitempty"`
		// Total number
		//  Minimum: 0
		TotalCount *int `json:"total_count,omitempty"`
	} `json:"response"`
}

type Newsfeed_Search_Response struct {
	Response struct {
		// Filtered number
		//  Minimum: 0
		Count            *int                 `json:"count,omitempty"`
		Items            *[]Wall_WallpostFull `json:"items,omitempty"`
		NextFrom         *string              `json:"next_from,omitempty"`
		SuggestedQueries *[]string            `json:"suggested_queries,omitempty"`
		// Total number
		//  Minimum: 0
		TotalCount *int `json:"total_count,omitempty"`
	} `json:"response"`
}

type Notes_Add_Response struct {
	// Note ID
	Response int `json:"response"`
}

type Notes_CreateComment_Response struct {
	// Comment ID
	Response int `json:"response"`
}

type Notes_GetById_Response struct {
	Response Notes_Note `json:"response"`
}

type Notes_GetComments_Response struct {
	Response struct {
		// Total number
		Count int                 `json:"count"`
		Items []Notes_NoteComment `json:"items"`
	} `json:"response"`
}

type Notes_Get_Response struct {
	Response struct {
		// Total number
		Count int          `json:"count"`
		Items []Notes_Note `json:"items"`
	} `json:"response"`
}

type Notifications_Get_Response struct {
	Response struct {
		Apps *[]Apps_App `json:"apps,omitempty"`
		// Total number
		Count  *int                              `json:"count,omitempty"`
		Groups *[]Groups_Group                   `json:"groups,omitempty"`
		Items  *[]Notifications_NotificationItem `json:"items,omitempty"`
		// Time when user has been checked notifications last time
		LastViewed *int            `json:"last_viewed,omitempty"`
		NextFrom   *string         `json:"next_from,omitempty"`
		Photos     *[]Photos_Photo `json:"photos,omitempty"`
		Profiles   *[]Users_User   `json:"profiles,omitempty"`
		Ttl        *int            `json:"ttl,omitempty"`
		Videos     *[]Video_Video  `json:"videos,omitempty"`
	} `json:"response"`
}

type Notifications_MarkAsViewed_Response struct {
	// Result
	Response Base_BoolInt `json:"response"`
}

type Notifications_SendMessage_Response struct {
	Response []Notifications_SendMessageItem `json:"response"`
}

type Orders_CancelSubscription_Response struct {
	// Result
	Response Base_BoolInt `json:"response"`
}

type Orders_ChangeState_Response struct {
	// New state
	Response string `json:"response"`
}

type Orders_GetAmount_Response struct {
	Response []Orders_Amount `json:"response"`
}

type Orders_GetById_Response struct {
	Response []Orders_Order `json:"response"`
}

type Orders_GetUserSubscriptionById_Response struct {
	Response Orders_Subscription `json:"response"`
}

type Orders_GetUserSubscriptions_Response struct {
	Response struct {
		// Total number
		Count *int                   `json:"count,omitempty"`
		Items *[]Orders_Subscription `json:"items,omitempty"`
	} `json:"response"`
}

type Orders_Get_Response struct {
	Response []Orders_Order `json:"response"`
}

type Orders_UpdateSubscription_Response struct {
	// Result
	Response Base_BoolInt `json:"response"`
}

type Pages_GetHistory_Response struct {
	Response []Pages_WikipageHistory `json:"response"`
}

type Pages_GetTitles_Response struct {
	Response []Pages_Wikipage `json:"response"`
}

type Pages_GetVersion_Response struct {
	Response Pages_WikipageFull `json:"response"`
}

type Pages_Get_Response struct {
	Response Pages_WikipageFull `json:"response"`
}

type Pages_ParseWiki_Response struct {
	// HTML source
	Response string `json:"response"`
}

type Pages_SaveAccess_Response struct {
	// Page ID
	Response int `json:"response"`
}

type Pages_Save_Response struct {
	// Page ID
	Response int `json:"response"`
}

type Photos_Copy_Response struct {
	// Photo ID
	//  Minimum: 1
	Response int `json:"response"`
}

type Photos_CreateAlbum_Response struct {
	Response Photos_PhotoAlbumFull `json:"response"`
}

type Photos_CreateComment_Response struct {
	// Created comment ID
	Response int `json:"response"`
}

type Photos_DeleteComment_Response struct {
	// Returns 1 if request has been processed successfully, 0 if the comment is not found
	Response Base_BoolInt `json:"response"`
}

type Photos_GetAlbumsCount_Response struct {
	// Albums number
	//  Minimum: 0
	Response int `json:"response"`
}

type Photos_GetAlbums_Response struct {
	Response struct {
		// Total number
		Count int                     `json:"count"`
		Items []Photos_PhotoAlbumFull `json:"items"`
	} `json:"response"`
}

type Photos_GetAllComments_Response struct {
	Response struct {
		// Total number
		Count *int                `json:"count,omitempty"`
		Items *[]Wall_WallComment `json:"items,omitempty"`
	} `json:"response"`
}

type Photos_GetAllExtended_Response struct {
	Response struct {
		// Total number
		Count *int                             `json:"count,omitempty"`
		Items *[]Photos_PhotoFullXtrRealOffset `json:"items,omitempty"`
		// Information whether next page is presented
		More *Base_BoolInt `json:"more,omitempty"`
	} `json:"response"`
}

type Photos_GetAll_Response struct {
	Response struct {
		// Total number
		Count *int                         `json:"count,omitempty"`
		Items *[]Photos_PhotoXtrRealOffset `json:"items,omitempty"`
		// Information whether next page is presented
		More *Base_BoolInt `json:"more,omitempty"`
	} `json:"response"`
}

type Photos_GetById_Response struct {
	Response []Photos_Photo `json:"response"`
}

type Photos_GetCommentsExtended_Response struct {
	Response struct {
		// Total number
		Count    int                `json:"count"`
		Groups   []Groups_GroupFull `json:"groups"`
		Items    []Wall_WallComment `json:"items"`
		Profiles []Users_UserFull   `json:"profiles"`
		// Real offset of the comments
		//  Minimum: 0
		RealOffset *int `json:"real_offset,omitempty"`
	} `json:"response"`
}

type Photos_GetComments_Response struct {
	Response struct {
		// Total number
		Count *int                `json:"count,omitempty"`
		Items *[]Wall_WallComment `json:"items,omitempty"`
		// Real offset of the comments
		//  Minimum: 0
		RealOffset *int `json:"real_offset,omitempty"`
	} `json:"response"`
}

type Photos_GetMarketUploadServer_Response struct {
	Response Base_UploadServer `json:"response"`
}

type Photos_GetMessagesUploadServer_Response struct {
	Response Photos_PhotoUpload `json:"response"`
}

type Photos_GetNewTags_Response struct {
	Response struct {
		// Total number
		Count int                      `json:"count"`
		Items []Photos_PhotoXtrTagInfo `json:"items"`
	} `json:"response"`
}

type Photos_GetTags_Response struct {
	Response []Photos_PhotoTag `json:"response"`
}

type Photos_GetUploadServer_Response struct {
	Response Photos_PhotoUpload `json:"response"`
}

type Photos_GetUserPhotos_Response struct {
	Response struct {
		// Total number
		Count int            `json:"count"`
		Items []Photos_Photo `json:"items"`
	} `json:"response"`
}

type Photos_GetWallUploadServer_Response struct {
	Response Photos_PhotoUpload `json:"response"`
}

type Photos_Get_Response struct {
	Response struct {
		// Total number
		Count int            `json:"count"`
		Items []Photos_Photo `json:"items"`
	} `json:"response"`
}

type Photos_MarketAlbumUpload_Response struct {
	Response struct {
		// Community ID
		Gid *int `json:"gid,omitempty"`
		// Uploading hash
		Hash *string `json:"hash,omitempty"`
		// Uploaded photo data
		Photo *string `json:"photo,omitempty"`
		// Upload server number
		Server *int `json:"server,omitempty"`
	} `json:"response"`
}

type Photos_MarketUpload_Response struct {
	Response struct {
		// Crop data
		CropData *string `json:"crop_data,omitempty"`
		// Crop hash
		CropHash *string `json:"crop_hash,omitempty"`
		// Community ID
		//  Format: int64
		GroupId *int `json:"group_id,omitempty"`
		// Uploading hash
		Hash *string `json:"hash,omitempty"`
		// Uploaded photo data
		Photo *string `json:"photo,omitempty"`
		// Upload server number
		Server *int `json:"server,omitempty"`
	} `json:"response"`
}

type Photos_MessageUpload_Response struct {
	Response struct {
		// Uploading hash
		Hash *string `json:"hash,omitempty"`
		// Uploaded photo data
		Photo *string `json:"photo,omitempty"`
		// Upload server number
		Server *int `json:"server,omitempty"`
	} `json:"response"`
}

type Photos_OwnerCoverUpload_Response struct {
	Response struct {
		// Uploading hash
		Hash *string `json:"hash,omitempty"`
		// Uploaded photo data
		Photo *string `json:"photo,omitempty"`
	} `json:"response"`
}

type Photos_OwnerUpload_Response struct {
	Response struct {
		// Uploading hash
		Hash *string `json:"hash,omitempty"`
		// Uploaded photo data
		Photo *string `json:"photo,omitempty"`
		// Upload server number
		Server *int `json:"server,omitempty"`
	} `json:"response"`
}

type Photos_PhotoUpload_Response struct {
	Response struct {
		// Album ID
		Aid *int `json:"aid,omitempty"`
		// Uploading hash
		Hash *string `json:"hash,omitempty"`
		// Uploaded photo data
		Photo *string `json:"photo,omitempty"`
		// Uploaded photos data
		PhotosList *string `json:"photos_list,omitempty"`
		// Upload server number
		Server *int `json:"server,omitempty"`
	} `json:"response"`
}

type Photos_PutTag_Response struct {
	// Created tag ID
	Response int `json:"response"`
}

type Photos_RestoreComment_Response struct {
	// Returns 1 if request has been processed successfully, 0 if the comment is not found
	Response Base_BoolInt `json:"response"`
}

type Photos_SaveMarketAlbumPhoto_Response struct {
	Response []Photos_Photo `json:"response"`
}

type Photos_SaveMarketPhoto_Response struct {
	Response []Photos_Photo `json:"response"`
}

type Photos_SaveMessagesPhoto_Response struct {
	Response []Photos_Photo `json:"response"`
}

type Photos_SaveOwnerCoverPhoto_Response struct {
	Response struct {
		Images *[]Base_Image `json:"images,omitempty"`
	} `json:"response"`
}

type Photos_SaveOwnerPhoto_Response struct {
	Response struct {
		// Photo hash
		PhotoHash string `json:"photo_hash"`
		// Uploaded image url
		PhotoSrc string `json:"photo_src"`
		// Uploaded image url
		PhotoSrcBig *string `json:"photo_src_big,omitempty"`
		// Uploaded image url
		PhotoSrcSmall *string `json:"photo_src_small,omitempty"`
		// Created post ID
		PostId *int `json:"post_id,omitempty"`
		// Returns 1 if profile photo is saved
		Saved *int `json:"saved,omitempty"`
	} `json:"response"`
}

type Photos_SaveWallPhoto_Response struct {
	Response []Photos_Photo `json:"response"`
}

type Photos_Save_Response struct {
	Response []Photos_Photo `json:"response"`
}

type Photos_Search_Response struct {
	Response struct {
		// Total number
		Count *int            `json:"count,omitempty"`
		Items *[]Photos_Photo `json:"items,omitempty"`
	} `json:"response"`
}

type Photos_WallUpload_Response struct {
	Response struct {
		// Uploading hash
		Hash *string `json:"hash,omitempty"`
		// Uploaded photo data
		Photo *string `json:"photo,omitempty"`
		// Upload server number
		Server *int `json:"server,omitempty"`
	} `json:"response"`
}

type Podcasts_SearchPodcast_Response struct {
	Response struct {
		Podcasts []Podcast_ExternalData `json:"podcasts"`
		// Total amount of found results
		ResultsTotal int `json:"results_total"`
	} `json:"response"`
}

type Polls_AddVote_Response struct {
	// Result
	Response Base_BoolInt `json:"response"`
}

type Polls_Create_Response struct {
	Response Polls_Poll `json:"response"`
}

type Polls_DeleteVote_Response struct {
	// Result
	Response Base_BoolInt `json:"response"`
}

type Polls_GetBackgrounds_Response struct {
	Response []Polls_Background `json:"response"`
}

type Polls_GetById_Response struct {
	Response Polls_Poll `json:"response"`
}

type Polls_GetVoters_Response struct {
	Response []Polls_Voters `json:"response"`
}

type Polls_SavePhoto_Response struct {
	Response Polls_Background `json:"response"`
}

type PrettyCards_Create_Response struct {
	Response struct {
		// Card ID of created pretty card
		CardId string `json:"card_id"`
		// Owner ID of created pretty card
		//  Format: int64
		OwnerId int `json:"owner_id"`
	} `json:"response"`
}

type PrettyCards_Delete_Response struct {
	Response struct {
		// Card ID of deleted pretty card
		CardId string `json:"card_id"`
		// Error reason if error happened
		Error *string `json:"error,omitempty"`
		// Owner ID of deleted pretty card
		//  Format: int64
		OwnerId int `json:"owner_id"`
	} `json:"response"`
}

type PrettyCards_Edit_Response struct {
	Response struct {
		// Card ID of edited pretty card
		CardId string `json:"card_id"`
		// Owner ID of edited pretty card
		//  Format: int64
		OwnerId int `json:"owner_id"`
	} `json:"response"`
}

type PrettyCards_GetById_Response struct {
	Response []PrettyCards_PrettyCardOrError `json:"response"`
}

type PrettyCards_GetUploadURL_Response struct {
	// Upload URL
	Response string `json:"response"`
}

type PrettyCards_Get_Response struct {
	Response struct {
		// Total number
		Count int                      `json:"count"`
		Items []PrettyCards_PrettyCard `json:"items"`
	} `json:"response"`
}

type Search_GetHints_Response struct {
	Response struct {
		//  Minimum: 0
		Count            int           `json:"count"`
		Items            []Search_Hint `json:"items"`
		SuggestedQueries *[]string     `json:"suggested_queries,omitempty"`
	} `json:"response"`
}

type Secure_CheckToken_Response struct {
	Response Secure_TokenChecked `json:"response"`
}

type Secure_GetAppBalance_Response struct {
	// App balance
	Response int `json:"response"`
}

type Secure_GetSMSHistory_Response struct {
	Response []Secure_SmsNotification `json:"response"`
}

type Secure_GetTransactionsHistory_Response struct {
	Response []Secure_Transaction `json:"response"`
}

type Secure_GetUserLevel_Response struct {
	Response []Secure_Level `json:"response"`
}

type Secure_GiveEventSticker_Response struct {
	Response []Secure_GiveEventStickerItem `json:"response"`
}

type Secure_SendNotification_Response struct {
	//  Format: int64
	Response []int `json:"response"`
}

type Secure_SetCounterArray_Response struct {
	Response []Secure_SetCounterItem `json:"response"`
}

type Stats_GetPostReach_Response struct {
	Response []Stats_WallpostStat `json:"response"`
}

type Stats_Get_Response struct {
	Response []Stats_Period `json:"response"`
}

type Status_Get_Response struct {
	Response Status_Status `json:"response"`
}

type Storage_GetKeys_Response struct {
	Response []string `json:"response"`
}

type Storage_Get_Response struct {
	Response []Storage_Value `json:"response"`
}

type Store_GetFavoriteStickers_Response struct {
	Response []Base_Sticker `json:"response"`
}

type Store_GetProducts_Response struct {
	Response []Store_Product `json:"response"`
}

type Store_GetStickersKeywords_Response struct {
	Response struct {
		// Total count of chunks to load
		//  Minimum: 1
		ChunksCount *int `json:"chunks_count,omitempty"`
		// Chunks version hash
		//  Minimum: 1
		ChunksHash *string `json:"chunks_hash,omitempty"`
		//  Minimum: 0
		Count      int                     `json:"count"`
		Dictionary []Store_StickersKeyword `json:"dictionary"`
	} `json:"response"`
}

type Stories_GetBannedExtended_Response struct {
	Response struct {
		// Stories count
		Count    int                `json:"count"`
		Groups   []Groups_GroupFull `json:"groups"`
		Items    []int              `json:"items"`
		Profiles []Users_UserFull   `json:"profiles"`
	} `json:"response"`
}

type Stories_GetBanned_Response struct {
	Response struct {
		// Stories count
		Count int `json:"count"`
		//  Format: int64
		Items []int `json:"items"`
	} `json:"response"`
}

type Stories_GetByIdExtended_Response struct {
	Response struct {
		// Stories count
		Count    int                `json:"count"`
		Groups   []Groups_GroupFull `json:"groups"`
		Items    []Stories_Story    `json:"items"`
		Profiles []Users_UserFull   `json:"profiles"`
	} `json:"response"`
}

type Stories_GetPhotoUploadServer_Response struct {
	Response struct {
		// Upload URL
		UploadUrl string `json:"upload_url"`
		// Users ID who can to see story.
		//  Minimum: 0
		UserIds []int `json:"user_ids"`
	} `json:"response"`
}

type Stories_GetStats_Response struct {
	Response Stories_StoryStats `json:"response"`
}

type Stories_GetVideoUploadServer_Response struct {
	Response struct {
		// Upload URL
		UploadUrl string `json:"upload_url"`
		// Users ID who can to see story.
		//  Minimum: 0
		UserIds []int `json:"user_ids"`
	} `json:"response"`
}

type Stories_GetViewersExtendedV5115_Response struct {
	Response struct {
		// Viewers count
		Count        int                   `json:"count"`
		HiddenReason *string               `json:"hidden_reason,omitempty"`
		Items        []Stories_ViewersItem `json:"items"`
		NextFrom     *string               `json:"next_from,omitempty"`
	} `json:"response"`
}

type Stories_GetViewersExtended_Response struct {
	Response struct {
		// Viewers count
		Count int              `json:"count"`
		Items []Users_UserFull `json:"items"`
	} `json:"response"`
}

type Stories_GetV5113_Response struct {
	Response struct {
		Count            int                `json:"count"`
		Groups           *[]Groups_Group    `json:"groups,omitempty"`
		Items            []Stories_FeedItem `json:"items"`
		NeedUploadScreen *bool              `json:"need_upload_screen,omitempty"`
		NextFrom         *string            `json:"next_from,omitempty"`
		Profiles         *[]Users_UserFull  `json:"profiles,omitempty"`
	} `json:"response"`
}

type Stories_Get_Response struct {
	Response struct {
		// Stories count
		Count            int                 `json:"count"`
		Groups           *[]Groups_Group     `json:"groups,omitempty"`
		Items            [][]Stories_Story   `json:"items"`
		NeedUploadScreen *bool               `json:"need_upload_screen,omitempty"`
		Profiles         *[]Users_UserFull   `json:"profiles,omitempty"`
		PromoData        *Stories_PromoBlock `json:"promo_data,omitempty"`
	} `json:"response"`
}

type Stories_Save_Response struct {
	Response struct {
		Count    int             `json:"count"`
		Groups   *[]Groups_Group `json:"groups,omitempty"`
		Items    []Stories_Story `json:"items"`
		Profiles *[]Users_User   `json:"profiles,omitempty"`
	} `json:"response"`
}

type Stories_Upload_Response struct {
	Response struct {
		// A string hash that is used in the stories.save method
		UploadResult *string `json:"upload_result,omitempty"`
	} `json:"response"`
}

type Streaming_GetServerUrl_Response struct {
	Response struct {
		// Server host
		Endpoint *string `json:"endpoint,omitempty"`
		// Access key
		Key *string `json:"key,omitempty"`
	} `json:"response"`
}

type Users_GetFollowersFields_Response struct {
	Response struct {
		// Total number of available results
		//  Minimum: 0
		Count int              `json:"count"`
		Items []Users_UserFull `json:"items"`
	} `json:"response"`
}

type Users_GetFollowers_Response struct {
	Response struct {
		// Total friends number
		//  Minimum: 0
		Count int `json:"count"`
		//  Format: int64
		//  Minimum: 1
		Items []int `json:"items"`
	} `json:"response"`
}

type Users_GetSubscriptionsExtended_Response struct {
	Response struct {
		// Total number of available results
		//  Minimum: 0
		Count int                       `json:"count"`
		Items []Users_SubscriptionsItem `json:"items"`
	} `json:"response"`
}

type Users_GetSubscriptions_Response struct {
	Response struct {
		Groups Groups_GroupsArray `json:"groups"`
		Users  Users_UsersArray   `json:"users"`
	} `json:"response"`
}

type Users_Get_Response struct {
	Response []Users_UserFull `json:"response"`
}

type Users_Search_Response struct {
	Response struct {
		// Total number of available results
		Count int              `json:"count"`
		Items []Users_UserFull `json:"items"`
	} `json:"response"`
}

type Utils_CheckLink_Response struct {
	Response Utils_LinkChecked `json:"response"`
}

type Utils_GetLastShortenedLinks_Response struct {
	Response struct {
		// Total number of available results
		//  Minimum: 0
		Count *int                       `json:"count,omitempty"`
		Items *[]Utils_LastShortenedLink `json:"items,omitempty"`
	} `json:"response"`
}

type Utils_GetLinkStatsExtended_Response struct {
	Response Utils_LinkStatsExtended `json:"response"`
}

type Utils_GetLinkStats_Response struct {
	Response Utils_LinkStats `json:"response"`
}

type Utils_GetServerTime_Response struct {
	// Time as Unixtime
	Response int `json:"response"`
}

type Utils_GetShortLink_Response struct {
	Response Utils_ShortLink `json:"response"`
}

type Utils_ResolveScreenName_Response struct {
	Response Utils_DomainResolved `json:"response"`
}

type Video_AddAlbum_Response struct {
	Response struct {
		// Created album ID
		AlbumId int `json:"album_id"`
	} `json:"response"`
}

type Video_ChangeVideoAlbums_Response struct {
	Response []int `json:"response"`
}

type Video_CreateComment_Response struct {
	// Created comment ID
	Response int `json:"response"`
}

type Video_GetAlbumById_Response struct {
	Response Video_VideoAlbumFull `json:"response"`
}

type Video_GetAlbumsByVideoExtended_Response struct {
	Response struct {
		// Total number
		Count *int                    `json:"count,omitempty"`
		Items *[]Video_VideoAlbumFull `json:"items,omitempty"`
	} `json:"response"`
}

type Video_GetAlbumsByVideo_Response struct {
	Response []int `json:"response"`
}

type Video_GetAlbumsExtended_Response struct {
	Response struct {
		// Total number
		Count int                    `json:"count"`
		Items []Video_VideoAlbumFull `json:"items"`
	} `json:"response"`
}

type Video_GetAlbums_Response struct {
	Response struct {
		// Total number
		Count int                `json:"count"`
		Items []Video_VideoAlbum `json:"items"`
	} `json:"response"`
}

type Video_GetCommentsExtended_Response struct {
	Response struct {
		// Information whether current user can comment the post
		CanPost *bool `json:"can_post,omitempty"`
		// Total number
		Count int `json:"count"`
		// Count of replies of current level
		CurrentLevelCount *int           `json:"current_level_count,omitempty"`
		Groups            []Groups_Group `json:"groups"`
		// Information whether groups can comment the post
		GroupsCanPost   *bool              `json:"groups_can_post,omitempty"`
		Items           []Wall_WallComment `json:"items"`
		Profiles        []Users_User       `json:"profiles"`
		RealOffset      *int               `json:"real_offset,omitempty"`
		ShowReplyButton *bool              `json:"show_reply_button,omitempty"`
	} `json:"response"`
}

type Video_GetComments_Response struct {
	Response struct {
		// Information whether current user can comment the post
		CanPost *bool `json:"can_post,omitempty"`
		// Total number
		Count int `json:"count"`
		// Count of replies of current level
		CurrentLevelCount *int `json:"current_level_count,omitempty"`
		// Information whether groups can comment the post
		GroupsCanPost   *bool              `json:"groups_can_post,omitempty"`
		Items           []Wall_WallComment `json:"items"`
		RealOffset      *int               `json:"real_offset,omitempty"`
		ShowReplyButton *bool              `json:"show_reply_button,omitempty"`
	} `json:"response"`
}

type Video_Get_Response struct {
	Response struct {
		// Total number
		Count    int                 `json:"count"`
		Groups   *[]Groups_GroupFull `json:"groups,omitempty"`
		Items    []Video_VideoFull   `json:"items"`
		Profiles *[]Users_UserFull   `json:"profiles,omitempty"`
	} `json:"response"`
}

type Video_RestoreComment_Response struct {
	// Returns 1 if request has been processed successfully, 0 if the comment is not found
	Response Base_BoolInt `json:"response"`
}

type Video_Save_Response struct {
	Response Video_SaveResult `json:"response"`
}

type Video_SearchExtended_Response struct {
	Response struct {
		// Total number
		Count    int                `json:"count"`
		Groups   []Groups_GroupFull `json:"groups"`
		Items    []Video_VideoFull  `json:"items"`
		Profiles []Users_User       `json:"profiles"`
	} `json:"response"`
}

type Video_Search_Response struct {
	Response struct {
		// Total number
		Count int               `json:"count"`
		Items []Video_VideoFull `json:"items"`
	} `json:"response"`
}

type Video_Upload_Response struct {
	Response struct {
		// Video size
		Size *int `json:"size,omitempty"`
		// Video ID
		VideoId *int `json:"video_id,omitempty"`
	} `json:"response"`
}

type Wall_CreateComment_Response struct {
	Response struct {
		// Created comment ID
		CommentId int `json:"comment_id"`
	} `json:"response"`
}

type Wall_Edit_Response struct {
	Response struct {
		// Edited post ID
		//  Minimum: 0
		PostId int `json:"post_id"`
	} `json:"response"`
}

type Wall_GetByIdExtended_Response struct {
	Response struct {
		Groups   []Groups_GroupFull  `json:"groups"`
		Items    []Wall_WallpostFull `json:"items"`
		Profiles []Users_UserFull    `json:"profiles"`
	} `json:"response"`
}

type Wall_GetByIdLegacy_Response struct {
	Response []Wall_WallpostFull `json:"response"`
}

type Wall_GetById_Response struct {
	Response struct {
		Items *[]Wall_WallpostFull `json:"items,omitempty"`
	} `json:"response"`
}

type Wall_GetCommentExtended_Response struct {
	Response struct {
		Groups   []Groups_Group     `json:"groups"`
		Items    []Wall_WallComment `json:"items"`
		Profiles []Users_User       `json:"profiles"`
	} `json:"response"`
}

type Wall_GetComment_Response struct {
	Response struct {
		Items []Wall_WallComment `json:"items"`
	} `json:"response"`
}

type Wall_GetCommentsExtended_Response struct {
	Response struct {
		// Information whether current user can comment the post
		CanPost *bool `json:"can_post,omitempty"`
		// Total number
		Count int `json:"count"`
		// Count of replies of current level
		CurrentLevelCount *int           `json:"current_level_count,omitempty"`
		Groups            []Groups_Group `json:"groups"`
		// Information whether groups can comment the post
		GroupsCanPost   *bool              `json:"groups_can_post,omitempty"`
		Items           []Wall_WallComment `json:"items"`
		Profiles        []Users_User       `json:"profiles"`
		ShowReplyButton *bool              `json:"show_reply_button,omitempty"`
	} `json:"response"`
}

type Wall_GetComments_Response struct {
	Response struct {
		// Information whether current user can comment the post
		CanPost *bool `json:"can_post,omitempty"`
		// Total number
		Count int `json:"count"`
		// Count of replies of current level
		CurrentLevelCount *int `json:"current_level_count,omitempty"`
		// Information whether groups can comment the post
		GroupsCanPost   *bool              `json:"groups_can_post,omitempty"`
		Items           []Wall_WallComment `json:"items"`
		ShowReplyButton *bool              `json:"show_reply_button,omitempty"`
	} `json:"response"`
}

type Wall_GetReposts_Response struct {
	Response struct {
		Groups   []Groups_Group      `json:"groups"`
		Items    []Wall_WallpostFull `json:"items"`
		Profiles []Users_User        `json:"profiles"`
	} `json:"response"`
}

type Wall_GetExtended_Response struct {
	Response struct {
		// Total number
		Count    int                 `json:"count"`
		Groups   []Groups_GroupFull  `json:"groups"`
		Items    []Wall_WallpostFull `json:"items"`
		Profiles []Users_UserFull    `json:"profiles"`
	} `json:"response"`
}

type Wall_Get_Response struct {
	Response struct {
		// Total number
		Count int                 `json:"count"`
		Items []Wall_WallpostFull `json:"items"`
	} `json:"response"`
}

type Wall_PostAdsStealth_Response struct {
	Response struct {
		// Created post ID
		PostId int `json:"post_id"`
	} `json:"response"`
}

type Wall_Post_Response struct {
	Response struct {
		// Created post ID
		PostId int `json:"post_id"`
	} `json:"response"`
}

type Wall_Repost_Response struct {
	Response struct {
		// Reposts number
		//  Minimum: 0
		LikesCount int `json:"likes_count"`
		// Reposts to mail number
		//  Minimum: 0
		MailRepostCount *int `json:"mail_repost_count,omitempty"`
		// Created post ID
		PostId int `json:"post_id"`
		// Reposts number
		//  Minimum: 1
		RepostsCount int `json:"reposts_count"`
		//  Default: 1
		Success int `json:"success"`
		// Reposts to wall number
		//  Minimum: 0
		WallRepostCount *int `json:"wall_repost_count,omitempty"`
	} `json:"response"`
}

type Wall_SearchExtended_Response struct {
	Response struct {
		// Total number
		Count    int                 `json:"count"`
		Groups   []Groups_GroupFull  `json:"groups"`
		Items    []Wall_WallpostFull `json:"items"`
		Profiles []Users_UserFull    `json:"profiles"`
	} `json:"response"`
}

type Wall_Search_Response struct {
	Response struct {
		// Total number
		Count int                 `json:"count"`
		Items []Wall_WallpostFull `json:"items"`
	} `json:"response"`
}

type Widgets_GetComments_Response struct {
	Response struct {
		// Total number
		Count int                     `json:"count"`
		Posts []Widgets_WidgetComment `json:"posts"`
	} `json:"response"`
}

type Widgets_GetPages_Response struct {
	Response struct {
		// Total number
		Count int                  `json:"count"`
		Pages []Widgets_WidgetPage `json:"pages"`
	} `json:"response"`
}
